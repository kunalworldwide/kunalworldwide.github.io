<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Kunal Das</title>
<link>https://kunaldas.dev/posts.html</link>
<atom:link href="https://kunaldas.dev/posts.xml" rel="self" type="application/rss+xml"/>
<description>DevOps &amp; Cloud Technology Blog</description>
<generator>quarto-1.6.39</generator>
<lastBuildDate>Fri, 06 Dec 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>Comprehensive Guide: Running GPU Workloads on Kubernetes</title>
  <link>https://kunaldas.dev/posts/2024-12-06-gpu-workloads-kubernetes.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kunaldas.dev/posts/media/Running GPU Workloads on Kubernetes_thumbnail.jpg" class="img-fluid figure-img"></p>
<figcaption>Image</figcaption>
</figure>
</div>
<section id="understanding-gpu-computing-in-kubernetes" class="level2">
<h2 class="anchored" data-anchor-id="understanding-gpu-computing-in-kubernetes">Understanding GPU Computing in Kubernetes</h2>
<section id="architectural-overview" class="level3">
<h3 class="anchored" data-anchor-id="architectural-overview">Architectural Overview</h3>
<p>GPU (Graphics Processing Unit) computing leverages specialized processors originally designed for rendering graphics to perform parallel computations. Unlike CPUs which are optimized for sequential processing with few cores, GPUs contain thousands of smaller cores optimized for handling multiple tasks simultaneously.</p>
<section id="key-components-in-kubernetes-gpu-architecture" class="level4">
<h4 class="anchored" data-anchor-id="key-components-in-kubernetes-gpu-architecture">Key Components in Kubernetes GPU Architecture:</h4>
<ol type="1">
<li><strong>Hardware Layer</strong>
<ul>
<li>Physical GPU cards (e.g., NVIDIA Tesla, V100, A100)</li>
<li>PCIe interface connection</li>
<li>GPU memory (VRAM)</li>
<li>CUDA cores for parallel processing</li>
</ul></li>
<li><strong>Driver Layer</strong>
<ul>
<li>NVIDIA drivers: Interface between hardware and software</li>
<li>CUDA toolkit: Programming interface for GPU computing</li>
<li>Container runtime hooks: Enable GPU access from containers</li>
</ul></li>
<li><strong>Container Runtime Layer</strong>
<ul>
<li>NVIDIA Container Toolkit (nvidia-docker2)</li>
<li>Container runtime (containerd/Docker)</li>
<li>Device plugin interface</li>
</ul></li>
<li><strong>Kubernetes Layer</strong>
<ul>
<li>NVIDIA Device Plugin</li>
<li>Kubernetes scheduler</li>
<li>Resource allocation system</li>
</ul></li>
</ol>
</section>
</section>
<section id="how-gpu-scheduling-works-in-kubernetes" class="level3">
<h3 class="anchored" data-anchor-id="how-gpu-scheduling-works-in-kubernetes">How GPU Scheduling Works in Kubernetes</h3>
<ol type="1">
<li><p><strong>Resource Advertisement</strong></p>
<ul>
<li>The NVIDIA Device Plugin runs as a DaemonSet</li>
<li>Discovers GPUs on each node</li>
<li>Advertises GPU resources to Kubernetes API server</li>
<li>Updates node capacity with <code>nvidia.com/gpu</code> resource</li>
</ul></li>
<li><p><strong>Resource Scheduling Process</strong></p>
<pre><code>Pod Request → Scheduler → Device Plugin → GPU Allocation</code></pre>
<ol type="a">
<li>Pod makes GPU request through resource limits</li>
<li>Kubernetes scheduler finds eligible nodes</li>
<li>Device Plugin handles GPU assignment</li>
<li>Container runtime configures GPU access</li>
</ol></li>
<li><p><strong>GPU Resource Isolation</strong></p>
<ul>
<li>Each container gets exclusive access to assigned GPUs</li>
<li>GPU memory is not oversubscribed</li>
<li>NVIDIA driver enforces hardware-level isolation</li>
</ul></li>
</ol>
</section>
<section id="deep-dive-nvidia-device-plugin-workflow" class="level3">
<h3 class="anchored" data-anchor-id="deep-dive-nvidia-device-plugin-workflow">Deep Dive: NVIDIA Device Plugin Workflow</h3>
<ol type="1">
<li><p><strong>Initialization Phase</strong></p>
<pre><code>Device Plugin Start → GPU Discovery → Resource Registration</code></pre>
<ul>
<li>Scans system for NVIDIA GPUs</li>
<li>Creates socket for Kubernetes communication</li>
<li>Registers as device plugin with kubelet</li>
</ul></li>
<li><p><strong>Operation Phase</strong></p>
<pre><code>List GPUs → Monitor Health → Handle Allocation</code></pre>
<ul>
<li>Maintains list of available GPUs</li>
<li>Monitors GPU health and status</li>
<li>Handles allocation requests from kubelet</li>
</ul></li>
<li><p><strong>Resource Management</strong></p>
<pre><code>Pod Request → Allocation → Environment Setup → Container Start</code></pre>
<ul>
<li>Maps GPU devices to containers</li>
<li>Sets up NVIDIA runtime environment</li>
<li>Configures container GPU access</li>
</ul></li>
</ol>
</section>
<section id="multi-instance-gpu-mig-technology" class="level3">
<h3 class="anchored" data-anchor-id="multi-instance-gpu-mig-technology">Multi-Instance GPU (MIG) Technology</h3>
<p>For NVIDIA A100 GPUs, MIG allows: 1. <strong>Partitioning</strong> - Single GPU split into up to 7 instances - Each instance has dedicated: * Compute resources * Memory * Memory bandwidth * Cache</p>
<ol start="2" type="1">
<li><strong>Isolation Levels</strong>
<ul>
<li>Hardware-level isolation</li>
<li>Memory protection</li>
<li>Error containment</li>
<li>QoS guarantee</li>
</ul></li>
</ol>
</section>
<section id="gpu-memory-management" class="level3">
<h3 class="anchored" data-anchor-id="gpu-memory-management">GPU Memory Management</h3>
<ol type="1">
<li><p><strong>Allocation Modes</strong></p>
<ul>
<li>Exclusive process mode</li>
<li>Time-slicing mode (shared)</li>
<li>MIG mode (for A100)</li>
</ul></li>
<li><p><strong>Memory Hierarchy</strong></p>
<pre><code>Global Memory → L2 Cache → L1 Cache → CUDA Cores</code></pre></li>
<li><p><strong>Resource Limits</strong></p>
<ul>
<li>GPU memory is not oversubscribed</li>
<li>Containers see full GPU memory</li>
<li>Memory limits enforced by NVIDIA driver</li>
</ul></li>
</ol>
</section>
</section>
<section id="understanding-the-gpu-workflow-in-kubernetes" class="level2">
<h2 class="anchored" data-anchor-id="understanding-the-gpu-workflow-in-kubernetes">Understanding the GPU Workflow in Kubernetes</h2>
<section id="pod-scheduling-flow" class="level3">
<h3 class="anchored" data-anchor-id="pod-scheduling-flow">1. Pod Scheduling Flow</h3>
<pre><code>Pod Creation → Resource Check → Node Selection → GPU Binding → Container Start</code></pre>
<ol type="1">
<li><strong>Pod Creation</strong>
<ul>
<li>User creates pod with GPU requirements</li>
<li>Scheduler receives pod specification</li>
</ul></li>
<li><strong>Resource Check</strong>
<ul>
<li>Scheduler checks GPU availability</li>
<li>Validates node constraints and taints</li>
<li>Considers topology requirements</li>
</ul></li>
<li><strong>Node Selection</strong>
<ul>
<li>Scheduler selects optimal node</li>
<li>Considers GPU availability and type</li>
<li>Evaluates other scheduling constraints</li>
</ul></li>
<li><strong>GPU Binding</strong>
<ul>
<li>Device plugin assigns specific GPUs</li>
<li>Sets up environment variables</li>
<li>Configures container runtime</li>
</ul></li>
<li><strong>Container Start</strong>
<ul>
<li>Container runtime initializes with GPU access</li>
<li>NVIDIA driver provides GPU interface</li>
<li>Application gains GPU access</li>
</ul></li>
</ol>
</section>
<section id="data-flow-in-gpu-computing" class="level3">
<h3 class="anchored" data-anchor-id="data-flow-in-gpu-computing">2. Data Flow in GPU Computing</h3>
<pre><code>Application → CUDA API → Driver → GPU → Memory → Results</code></pre>
<ol type="1">
<li><strong>Application Layer</strong>
<ul>
<li>Makes CUDA API calls</li>
<li>Manages data transfers</li>
<li>Orchestrates computations</li>
</ul></li>
<li><strong>CUDA Layer</strong>
<ul>
<li>Translates API calls to driver commands</li>
<li>Manages memory transfers</li>
<li>Handles kernel execution</li>
</ul></li>
<li><strong>Driver Layer</strong>
<ul>
<li>Controls GPU hardware</li>
<li>Manages memory allocation</li>
<li>Schedules operations</li>
</ul></li>
<li><strong>Hardware Layer</strong>
<ul>
<li>Executes CUDA kernels</li>
<li>Performs memory operations</li>
<li>Returns results</li>
</ul></li>
</ol>
</section>
<section id="resource-lifecycle" class="level3">
<h3 class="anchored" data-anchor-id="resource-lifecycle">3. Resource Lifecycle</h3>
<pre><code>Allocation → Usage → Release → Cleanup</code></pre>
<ol type="1">
<li><strong>Resource Allocation</strong>
<ul>
<li>Kubernetes reserves GPU</li>
<li>Device plugin configures access</li>
<li>Container gets exclusive use</li>
</ul></li>
<li><strong>Resource Usage</strong>
<ul>
<li>Application uses GPU</li>
<li>Monitoring tracks utilization</li>
<li>Resource limits enforced</li>
</ul></li>
<li><strong>Resource Release</strong>
<ul>
<li>Pod termination triggers release</li>
<li>GPU returned to pool</li>
<li>Resources cleaned up</li>
</ul></li>
<li><strong>Cleanup Process</strong>
<ul>
<li>Memory cleared</li>
<li>GPU state reset</li>
<li>Resources marked available</li>
</ul></li>
</ol>
</section>
</section>
<section id="best-practices-and-guidelines" class="level2">
<h2 class="anchored" data-anchor-id="best-practices-and-guidelines">Best Practices and Guidelines</h2>
<section id="resource-optimization" class="level3">
<h3 class="anchored" data-anchor-id="resource-optimization">Resource Optimization</h3>
<ol type="1">
<li><strong>Batch Processing</strong>
<ul>
<li>Group similar workloads</li>
<li>Use job queues effectively</li>
<li>Implement proper backoff strategies</li>
</ul></li>
<li><strong>Memory Management</strong>
<ul>
<li>Monitor GPU memory usage</li>
<li>Implement proper cleanup</li>
<li>Use appropriate batch sizes</li>
</ul></li>
<li><strong>Compute Optimization</strong>
<ul>
<li>Use optimal CUDA algorithms</li>
<li>Balance CPU and GPU work</li>
<li>Minimize data transfers</li>
</ul></li>
</ol>
</section>
</section>
<section id="enough-talk-lets-dig-in" class="level2">
<h2 class="anchored" data-anchor-id="enough-talk-lets-dig-in">Enough talk, let’s dig in</h2>
</section>
<section id="prerequisites" class="level2">
<h2 class="anchored" data-anchor-id="prerequisites">Prerequisites</h2>
<p>Before starting, ensure you have: - An active Kubernetes cluster (e.g., AKS cluster) - <code>kubectl</code> command-line tool installed and configured - Access to create or modify node pools - Helm v3 installed (for NVIDIA device plugin installation)</p>
</section>
<section id="gpu-node-pool-setup" class="level2">
<h2 class="anchored" data-anchor-id="gpu-node-pool-setup">GPU Node Pool Setup</h2>
<section id="select-appropriate-gpu-vm-size" class="level3">
<h3 class="anchored" data-anchor-id="select-appropriate-gpu-vm-size">1. Select appropriate GPU VM size</h3>
<p>Choose a GPU-enabled VM size based on your workload requirements. Common options include: - Standard_NC6s_v3 (1 NVIDIA Tesla V100) - Standard_NC24rs_v3 (4 NVIDIA Tesla V100 with RDMA) - Standard_ND96asr_v4 (8 NVIDIA A100)</p>
</section>
<section id="create-gpu-node-pool" class="level3">
<h3 class="anchored" data-anchor-id="create-gpu-node-pool">2. Create GPU node pool</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">az</span> aks nodepool add <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resource-group</span> myResourceGroup <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cluster-name</span> myAKSCluster <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> gpunodepool <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--node-count</span> 1 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--node-vm-size</span> Standard_NC6s_v3 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--node-taints</span> sku=gpu:NoSchedule <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--enable-cluster-autoscaler</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--min-count</span> 1 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--max-count</span> 3</span></code></pre></div>
<p>Key parameters explained: - <code>--node-taints</code>: Ensures only GPU workloads are scheduled on these expensive nodes - <code>--enable-cluster-autoscaler</code>: Automatically scales nodes based on demand - <code>--min-count</code> and <code>--max-count</code>: Define scaling boundaries</p>
</section>
</section>
<section id="nvidia-driver-installation" class="level2">
<h2 class="anchored" data-anchor-id="nvidia-driver-installation">NVIDIA Driver Installation</h2>
<section id="option-1-default-aks-installation" class="level3">
<h3 class="anchored" data-anchor-id="option-1-default-aks-installation">Option 1: Default AKS Installation</h3>
<p>By default, AKS automatically installs NVIDIA drivers on GPU-capable nodes. This is the recommended approach for most users.</p>
</section>
<section id="option-2-manual-installation-if-needed" class="level3">
<h3 class="anchored" data-anchor-id="option-2-manual-installation-if-needed">Option 2: Manual Installation (if needed)</h3>
<p>If you need to manually install or update drivers:</p>
<ol type="1">
<li>Connect to the node:</li>
</ol>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get node name</span></span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get nodes</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Connect to node (requires SSH access)</span></span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> username@node-ip</span></code></pre></div>
<ol start="2" type="1">
<li>Install NVIDIA drivers:</li>
</ol>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update package list</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt update</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install ubuntu-drivers utility</span></span>
<span id="cb11-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> ubuntu-drivers-common</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install recommended NVIDIA drivers</span></span>
<span id="cb11-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ubuntu-drivers install</span>
<span id="cb11-9"></span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reboot node</span></span>
<span id="cb11-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> reboot</span></code></pre></div>
</section>
</section>
<section id="nvidia-device-plugin-installation" class="level2">
<h2 class="anchored" data-anchor-id="nvidia-device-plugin-installation">NVIDIA Device Plugin Installation</h2>
<p>The NVIDIA device plugin is required for Kubernetes to recognize and schedule GPU resources.</p>
<section id="using-helm-recommended-method" class="level3">
<h3 class="anchored" data-anchor-id="using-helm-recommended-method">Using Helm (Recommended Method)</h3>
<ol type="1">
<li>Add NVIDIA Helm repository:</li>
</ol>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">helm</span> repo add nvdp https://nvidia.github.io/k8s-device-plugin</span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">helm</span> repo update</span></code></pre></div>
<ol start="2" type="1">
<li>Install the device plugin:</li>
</ol>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">helm</span> install nvdp nvdp/nvidia-device-plugin <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0.15.0 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--namespace</span> nvidia-device-plugin <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--create-namespace</span></span></code></pre></div>
</section>
</section>
<section id="verification-steps" class="level2">
<h2 class="anchored" data-anchor-id="verification-steps">Verification Steps</h2>
<ol type="1">
<li>Verify node GPU capability:</li>
</ol>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get nodes <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> wide</span>
<span id="cb14-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> describe node <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>gpu-node-name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Look for the following in the output:</p>
<pre><code>Capacity:
  nvidia.com/gpu: 1
Allocatable:
  nvidia.com/gpu: 1</code></pre>
<ol start="2" type="1">
<li>Test GPU detection:</li>
</ol>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a test pod</span></span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> run nvidia-smi <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb16-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--image</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nvidia/cuda:11.8.0-base-ubuntu22.04 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb16-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--limits</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nvidia.com/gpu=1 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb16-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span> nvidia-smi</span></code></pre></div>
</section>
<section id="running-gpu-workloads" class="level2">
<h2 class="anchored" data-anchor-id="running-gpu-workloads">Running GPU Workloads</h2>
<section id="example-gpu-workload-yaml" class="level3">
<h3 class="anchored" data-anchor-id="example-gpu-workload-yaml">Example GPU Workload YAML</h3>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v1</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Pod</span></span>
<span id="cb17-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb17-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu-pod</span></span>
<span id="cb17-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb17-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb17-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu-container</span></span>
<span id="cb17-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> nvidia/cuda:11.8.0-base-ubuntu22.04</span></span>
<span id="cb17-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nvidia-smi"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-l"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"30"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb17-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resources</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb17-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">limits</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb17-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nvidia.com/gpu</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb17-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tolerations</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb17-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">key</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sku"</span></span>
<span id="cb17-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">operator</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Equal"</span></span>
<span id="cb17-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpu"</span></span>
<span id="cb17-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">effect</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NoSchedule"</span></span></code></pre></div>
<p>Key components explained: - <code>resources.limits.nvidia.com/gpu</code>: Specifies GPU requirement - <code>tolerations</code>: Matches node taints to allow scheduling - <code>image</code>: Use CUDA-compatible container image</p>
</section>
<section id="deploy-the-workload" class="level3">
<h3 class="anchored" data-anchor-id="deploy-the-workload">Deploy the workload:</h3>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> apply <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> gpu-workload.yaml</span></code></pre></div>
</section>
</section>
<section id="monitoring-and-troubleshooting" class="level2">
<h2 class="anchored" data-anchor-id="monitoring-and-troubleshooting">Monitoring and Troubleshooting</h2>
<section id="monitor-gpu-usage" class="level3">
<h3 class="anchored" data-anchor-id="monitor-gpu-usage">Monitor GPU Usage</h3>
<p>Using Container Insights, you can monitor: - GPU duty cycle - GPU memory usage - Number of GPUs allocated/available</p>
<p>Key metrics: - <code>containerGpuDutyCycle</code> - <code>containerGpumemoryUsedBytes</code> - <code>nodeGpuAllocatable</code></p>
</section>
<section id="common-troubleshooting-steps" class="level3">
<h3 class="anchored" data-anchor-id="common-troubleshooting-steps">Common Troubleshooting Steps</h3>
<ol type="1">
<li>Check GPU driver status:</li>
</ol>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> exec <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>pod-name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> -- nvidia-smi</span></code></pre></div>
<ol start="2" type="1">
<li>Verify NVIDIA device plugin:</li>
</ol>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> get pods <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> nvidia-device-plugin</span></code></pre></div>
<ol start="3" type="1">
<li>Check pod events:</li>
</ol>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kubectl</span> describe pod <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>pod-name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</section>
</section>
<section id="best-practices-and-advanced-considerations" class="level2">
<h2 class="anchored" data-anchor-id="best-practices-and-advanced-considerations">Best Practices and Advanced Considerations</h2>
<section id="resource-management-strategy" class="level3">
<h3 class="anchored" data-anchor-id="resource-management-strategy">1. Resource Management Strategy</h3>
<section id="optimal-resource-allocation" class="level4">
<h4 class="anchored" data-anchor-id="optimal-resource-allocation">Optimal Resource Allocation</h4>
<ul>
<li>Define explicit GPU resource requests and limits in pod specifications</li>
<li>Implement resource quotas at namespace level to control GPU allocation</li>
<li>Use pod priority classes for critical GPU workloads</li>
</ul>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v1</span></span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Pod</span></span>
<span id="cb22-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb22-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu-workload</span></span>
<span id="cb22-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb22-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">priorityClassName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> high-priority-gpu</span></span>
<span id="cb22-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb22-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu-container</span></span>
<span id="cb22-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resources</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb22-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">limits</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb22-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nvidia.com/gpu</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">requests</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb22-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nvidia.com/gpu</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="node-management" class="level4">
<h4 class="anchored" data-anchor-id="node-management">Node Management</h4>
<ul>
<li>Implement node taints and tolerations for GPU nodes</li>
</ul>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Node taint example</span></span>
<span id="cb23-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kubectl taint nodes gpu-node-1 gpu=true:NoSchedule</span></span>
<span id="cb23-3"></span>
<span id="cb23-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pod toleration example</span></span>
<span id="cb23-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tolerations</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb23-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">key</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpu"</span></span>
<span id="cb23-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">operator</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Equal"</span></span>
<span id="cb23-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb23-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">effect</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NoSchedule"</span></span></code></pre></div>
<ul>
<li>Use node labels for GPU-specific workload targeting</li>
<li>Configure node affinity rules for specialized GPU workloads</li>
</ul>
</section>
</section>
<section id="container-optimization" class="level3">
<h3 class="anchored" data-anchor-id="container-optimization">2. Container Optimization</h3>
<section id="image-management" class="level4">
<h4 class="anchored" data-anchor-id="image-management">Image Management</h4>
<ul>
<li>Base image selection:
<ul>
<li>Use official NVIDIA CUDA images as base</li>
<li>Choose appropriate CUDA version for your workload</li>
<li>Consider slim variants for reduced image size</li>
</ul></li>
</ul>
</section>
<section id="build-optimization" class="level4">
<h4 class="anchored" data-anchor-id="build-optimization">Build Optimization</h4>
<ul>
<li>Implement multi-stage builds to minimize image size</li>
<li>Include only necessary CUDA libraries</li>
<li>Cache commonly used data in persistent volumes</li>
</ul>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example multi-stage build</span></span>
<span id="cb24-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> nvidia/cuda:11.8.0-base-ubuntu22.04 as builder</span>
<span id="cb24-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build steps...</span></span>
<span id="cb24-4"></span>
<span id="cb24-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> nvidia/cuda:11.8.0-runtime-ubuntu22.04</span>
<span id="cb24-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--from=builder</span> /app/binary /app/</span></code></pre></div>
</section>
</section>
<section id="performance-monitoring-and-optimization" class="level3">
<h3 class="anchored" data-anchor-id="performance-monitoring-and-optimization">3. Performance Monitoring and Optimization</h3>
<section id="metrics-collection" class="level4">
<h4 class="anchored" data-anchor-id="metrics-collection">Metrics Collection</h4>
<ul>
<li>Implement comprehensive monitoring:
<ul>
<li>GPU utilization percentage</li>
<li>Memory usage patterns</li>
<li>Temperature and power consumption</li>
<li>Error rates and throttling events</li>
</ul></li>
</ul>
</section>
<section id="alert-configuration" class="level4">
<h4 class="anchored" data-anchor-id="alert-configuration">Alert Configuration</h4>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example PrometheusRule for GPU alerts</span></span>
<span id="cb25-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> monitoring.coreos.com/v1</span></span>
<span id="cb25-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PrometheusRule</span></span>
<span id="cb25-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb25-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu-alerts</span></span>
<span id="cb25-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb25-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">groups</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb25-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu.rules</span></span>
<span id="cb25-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rules</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb25-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alert</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HighGPUUsage</span></span>
<span id="cb25-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expr</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> nvidia_gpu_duty_cycle &gt; 90</span></span>
<span id="cb25-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">for</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 10m</span></span></code></pre></div>
</section>
</section>
<section id="cost-management" class="level3">
<h3 class="anchored" data-anchor-id="cost-management">4. Cost Management</h3>
<section id="resource-scheduling" class="level4">
<h4 class="anchored" data-anchor-id="resource-scheduling">Resource Scheduling</h4>
<ul>
<li>Implement spot instances for fault-tolerant workloads</li>
<li>Use node auto-scaling based on GPU demand</li>
<li>Configure pod disruption budgets for critical workloads</li>
</ul>
</section>
<section id="workload-optimization" class="level4">
<h4 class="anchored" data-anchor-id="workload-optimization">Workload Optimization</h4>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example CronJob for off-peak processing</span></span>
<span id="cb26-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> batch/v1</span></span>
<span id="cb26-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> CronJob</span></span>
<span id="cb26-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb26-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu-batch-job</span></span>
<span id="cb26-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb26-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">schedule</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0 2 * * *"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # Run at 2 AM</span></span>
<span id="cb26-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobTemplate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb26-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb26-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">template</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb26-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb26-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb26-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu-processor</span></span>
<span id="cb26-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resources</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb26-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">limits</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb26-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nvidia.com/gpu</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
</section>
<section id="security-implementation" class="level3">
<h3 class="anchored" data-anchor-id="security-implementation">5. Security Implementation</h3>
<section id="access-control" class="level4">
<h4 class="anchored" data-anchor-id="access-control">Access Control</h4>
<ul>
<li>Implement RBAC for GPU resource access</li>
</ul>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rbac.authorization.k8s.io/v1</span></span>
<span id="cb27-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Role</span></span>
<span id="cb27-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb27-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu-user</span></span>
<span id="cb27-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rules</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb27-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiGroups</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb27-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resources</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pods"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb27-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"create"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb27-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resourceNames</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nvidia.com/gpu"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span></code></pre></div>
</section>
<section id="runtime-security" class="level4">
<h4 class="anchored" data-anchor-id="runtime-security">Runtime Security</h4>
<ul>
<li>Enable SecurityContext for GPU containers</li>
<li>Implement network policies for GPU workloads</li>
<li>Regular security scanning of GPU container images</li>
</ul>
</section>
</section>
<section id="advanced-scenarios" class="level3">
<h3 class="anchored" data-anchor-id="advanced-scenarios">6. Advanced Scenarios</h3>
<section id="multi-instance-gpu-mig-configuration" class="level4">
<h4 class="anchored" data-anchor-id="multi-instance-gpu-mig-configuration">Multi-Instance GPU (MIG) Configuration</h4>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example MIG profile configuration</span></span>
<span id="cb28-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v1</span></span>
<span id="cb28-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Pod</span></span>
<span id="cb28-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb28-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mig-workload</span></span>
<span id="cb28-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb28-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb28-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gpu-container</span></span>
<span id="cb28-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resources</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb28-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">limits</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb28-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nvidia.com/mig-1g.5gb</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="rdma-for-high-performance-computing" class="level4">
<h4 class="anchored" data-anchor-id="rdma-for-high-performance-computing">RDMA for High-Performance Computing</h4>
<ul>
<li>Configure RDMA-capable networks</li>
<li>Optimize for low-latency communication</li>
<li>Implement proper RDMA security controls</li>
</ul>
</section>
<section id="development-environment-optimization" class="level4">
<h4 class="anchored" data-anchor-id="development-environment-optimization">Development Environment Optimization</h4>
<ul>
<li>Set up GPU sharing for development teams</li>
<li>Implement resource quotas per development namespace</li>
<li>Create development-specific GPU profiles</li>
</ul>
</section>
</section>
<section id="finishing-points" class="level3">
<h3 class="anchored" data-anchor-id="finishing-points">Finishing Points</h3>
<ol type="1">
<li><strong>Regular Maintenance Checklist</strong>
<ul>
<li>Weekly driver updates verification</li>
<li>Monthly performance baseline checking</li>
<li>Quarterly capacity planning review</li>
</ul></li>
<li><strong>Documentation Requirements</strong>
<ul>
<li>Maintain GPU allocation policies</li>
<li>Document troubleshooting procedures</li>
<li>Keep upgrade procedures updated</li>
</ul></li>
<li><strong>Future Considerations</strong>
<ul>
<li>Plan for GPU architecture upgrades</li>
<li>Evaluate emerging GPU technologies</li>
<li>Monitor Kubernetes GPU feature development</li>
</ul></li>
<li><strong>Emergency Procedures</strong>
<ul>
<li>GPU failure handling protocol</li>
<li>Workload failover procedures</li>
<li>Emergency contact information</li>
</ul></li>
</ol>


</section>
</section>

 ]]></description>
  <category>Kubernetes</category>
  <category>GPU</category>
  <category>Cloud Computing</category>
  <category>DevOps</category>
  <guid>https://kunaldas.dev/posts/2024-12-06-gpu-workloads-kubernetes.html</guid>
  <pubDate>Fri, 06 Dec 2024 00:00:00 GMT</pubDate>
  <media:content url="https://kunaldas.dev/posts/media/Running%20GPU%20Workloads%20on%20Kubernetes_thumbnail.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Setting Up a Comprehensive Python Build Validation Pipeline in Azure DevOps</title>
  <link>https://kunaldas.dev/posts/2024-10-03-python-build-validation-pipeline.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/0*JyazbS5mBODLoH6n.png" class="img-fluid figure-img"></p>
<figcaption>image</figcaption>
</figure>
</div>
<p>Hey there, Almost everyone who deploys python code wants to have it thoroughly checked and follow proper standards but sometimes setting up a code quality pipeline in your CI-CD process can be cumbersome due to various reasons.</p>
<p>Mainly, 1. You have to setup for each individual pipelines which can be an issue since many of us might have multiple repo multiple project and we need to have it standardize across projects to make sure it just works without tinkering in every other repo 2. There are plenty of tools and finding the right set of tools and also making sure a certain set of tools work together without giving any issues 3. Publishing a output also matters which will help the developers easily see what is lacking and they can start improving on the same.</p>
<p>Python developers and DevOps enthusiasts! Today, we’re going to walk through setting up a robust build validation pipeline for your Python projects using Azure DevOps. This guide will help you ensure code quality, maintain consistency across multiple repositories, and streamline your development process - all without relying on external tools.</p>
<p>I was tasked not long ago to find a FREE solution without any external tool which should have below features</p>
<ol type="1">
<li>Must work with multiple repo.</li>
<li>Must provide meaningful output.</li>
<li>Should improve the overall Code Quality</li>
<li>Developers can run locally as well before publishing to the testing tool</li>
<li>All code in the main branch must follow the best in class industry standards</li>
</ol>
<p>While I started developing the build validation pipeline ( Azure DevOps term basically means successful run of a pipeline to merge the pull request to a particular branch) I started looking for coding standards mainly for python I stumbled upon many articles and was in a bit of confusion which one to follow, but respecting the popularity and unanimous use of PEP-8 made the decision much easier.</p>
<p>Ref :https://peps.python.org/pep-0008/</p>
<p>Ok on top of a pep-8 validator I thought of adding isort which is another great tool to validate if your imports are correctly sorted and on top of this I added a few things extra like BLACK if we look at the black defination we see</p>
<pre><code>"Black is the uncompromising Python code formatter. By using it, you agree to cede control over minutiae of hand-formatting. In return, Black gives you speed, determinism, and freedom from pycodestyle nagging about formatting. You will save time and mental energy for more important matters."</code></pre>
<p>Ref : https://pypi.org/project/black/</p>
<p>So from code quality part I ended up using three tools or validators 1. Black (code formatter) 2. isort (import sorter) 3. Flake8 (linter)</p>
<p>I also added pytest and code coverage checks on this pipeline just to make sure developers are diligent to write unit test cases before they push the code to main branch</p>
<ol start="4" type="1">
<li>pytest (testing framework)</li>
<li>Code coverage analysis</li>
</ol>
<p><code>The steps here are for Azure Devops Pipeline but it can be easily replicated to githuba ctions or any other ci-cd tools with very minimal to minor tweaking</code></p>
<p>So let’s look at the pipeline that I have been telling till now</p>
<section id="step-by-step-setup" class="level2">
<h2 class="anchored" data-anchor-id="step-by-step-setup">Step-by-Step Setup</h2>
<section id="step-1-create-the-azure-pipeline-yaml-file" class="level3">
<h3 class="anchored" data-anchor-id="step-1-create-the-azure-pipeline-yaml-file">Step 1: Create the Azure Pipeline YAML File</h3>
<p>First, create a file named <code>azure-pipelines.yml</code> in the root of your repository. This file will define our pipeline.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trigger</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> none</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">variables</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sourcePath</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sourcecode'</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> coverageThreshold</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Tokens</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> CodeDirectory</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(System.DefaultWorkingDirectory)'</span></span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pool</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vmimage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ubuntu-latest'</span></span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">job</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> BuildTestAndAnalyze</span></span>
<span id="cb2-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'🚀 Build, Test, and Analyze'</span></span>
<span id="cb2-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> UsePythonVersion@0</span></span>
<span id="cb2-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">versionSpec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3.9'</span></span>
<span id="cb2-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'🐍 Use Python 3.9'</span></span>
<span id="cb2-24"></span>
<span id="cb2-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # More steps will be added here</span></span></code></pre></div>
<p>This sets up the basic structure of our pipeline, specifying the Python version and defining some variables we’ll use later.</p>
<pre><code>Now if you see ths issue we need this build validation pipeline in multiple repositories which is a bit tricky since we all know if we add this yaml to a particular repo then it will only work on that and not any other repo instead I wanted it to be a seperate but clone the repo for which it get's triggered in the pull request.

The solution? 
look at he below step :)</code></pre>
</section>
<section id="step-2-clone-the-pr-repository" class="level3">
<h3 class="anchored" data-anchor-id="step-2-clone-the-pr-repository">Step 2: Clone the PR Repository</h3>
<p>Add this step to clone the PR repository:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">  - </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb4-2">      echo "🚀 Initiating repository clone process..."</span>
<span id="cb4-3">      REPO_URL=$(System.PullRequest.SourceRepositoryURI)</span>
<span id="cb4-4">      AUTH_URL=$(echo $REPO_URL | sed "s|cyncly-engineering@|$(Code_Read_PAT)@|")</span>
<span id="cb4-5">      FULL_BRANCH=$(System.PullRequest.SourceBranch)</span>
<span id="cb4-6">      BRANCH=$(echo $FULL_BRANCH | sed 's|^refs/heads/||')</span>
<span id="cb4-7">      CLONE_DIR=$(System.DefaultWorkingDirectory)/cloned_repo</span>
<span id="cb4-8">      </span>
<span id="cb4-9">      git clone --branch "$BRANCH" "$AUTH_URL" "$CLONE_DIR"</span>
<span id="cb4-10">      </span>
<span id="cb4-11">      if [ $? -eq 0 ]; then</span>
<span id="cb4-12">        echo "✅ Git clone successful"</span>
<span id="cb4-13">        echo "##vso[task.setvariable variable=CodeDirectory]$CLONE_DIR"</span>
<span id="cb4-14">      else</span>
<span id="cb4-15">        echo "❌ Git clone failed"</span>
<span id="cb4-16">        exit 1</span>
<span id="cb4-17">      fi</span>
<span id="cb4-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'🔄 Clone PR Repository'</span></span></code></pre></div>
<p>This step clones the PR repository, allowing us to work with the latest code.</p>
<p><code>this is a bit tricky spart and for other ci-cd tool we need to modify this the most</code></p>
</section>
<section id="step-3-install-dependencies" class="level3">
<h3 class="anchored" data-anchor-id="step-3-install-dependencies">Step 3: Install Dependencies</h3>
<p>Next, let’s install the project dependencies and our code quality tools:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">  - </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb5-2">      echo "🔧 Setting up Python environment..."</span>
<span id="cb5-3">      python -m pip install --upgrade pip</span>
<span id="cb5-4">      if [ -f $(sourcePath)/requirements.txt ]; then</span>
<span id="cb5-5">        pip install -r $(sourcePath)/requirements.txt</span>
<span id="cb5-6">      fi</span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workingDirectory</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(CodeDirectory)</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'📦 Install Project Dependencies'</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">  - </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb5-11">      echo "🛠️ Installing code quality and testing tools..."</span>
<span id="cb5-12">      pip install black flake8 isort pytest pytest-cov httpx</span>
<span id="cb5-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'🛠️ Install Code Quality and Testing Tools'</span></span></code></pre></div>
</section>
<section id="step-4-run-code-quality-checks" class="level3">
<h3 class="anchored" data-anchor-id="step-4-run-code-quality-checks">Step 4: Run Code Quality Checks</h3>
<p>Now, let’s add steps to run our code quality checks:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">  - </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb6-2">      echo "🖌️ Running Black formatter check..."</span>
<span id="cb6-3">      black --check --line-length 79 $(sourcePath) </span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'🖌️ Run Black'</span></span>
<span id="cb6-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workingDirectory</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(CodeDirectory)</span></span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">  - </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb6-8">      echo "🔀 Running isort import sorter check..."</span>
<span id="cb6-9">      isort --check-only $(sourcePath)</span>
<span id="cb6-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'🔀 Run isort'</span></span>
<span id="cb6-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workingDirectory</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(CodeDirectory)</span></span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">  - </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb6-14">      echo "🔍 Running Flake8 linter..."</span>
<span id="cb6-15">      flake8 $(sourcePath)</span>
<span id="cb6-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'🔍 Run Flake8'</span></span>
<span id="cb6-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workingDirectory</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(CodeDirectory)</span></span></code></pre></div>
<p>These steps will check your code formatting, import sorting, and linting.</p>
</section>
<section id="step-5-run-tests-and-generate-coverage-report" class="level3">
<h3 class="anchored" data-anchor-id="step-5-run-tests-and-generate-coverage-report">Step 5: Run Tests and Generate Coverage Report</h3>
<p>Add this step to run tests and generate a coverage report:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">  - </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb7-2">      echo "🧪 Running unit tests and generating coverage report..."</span>
<span id="cb7-3">      pytest --cov=$(sourcePath) --cov-report=xml --cov-report=html ./tests</span>
<span id="cb7-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'🧪 Run Tests with pytest'</span></span>
<span id="cb7-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workingDirectory</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(CodeDirectory)</span></span></code></pre></div>
</section>
<section id="step-6-check-code-coverage-threshold" class="level3">
<h3 class="anchored" data-anchor-id="step-6-check-code-coverage-threshold">Step 6: Check Code Coverage Threshold</h3>
<p>Let’s ensure our code meets a minimum coverage threshold:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">  - </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb8-2">      echo "📊 Checking code coverage threshold..."</span>
<span id="cb8-3">      coverage_percentage=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); print(float(root.attrib['line-rate']) * 100)")</span>
<span id="cb8-4">      echo "Current code coverage: $coverage_percentage%"</span>
<span id="cb8-5">      echo "Coverage threshold: $COVERAGE_THRESHOLD%"</span>
<span id="cb8-6">      if (( $(echo "$coverage_percentage &lt; $COVERAGE_THRESHOLD" | bc -l) )); then</span>
<span id="cb8-7">        echo "❌ ##vso[task.logissue type=error]Code coverage ($coverage_percentage%) is below the threshold of $COVERAGE_THRESHOLD%"</span>
<span id="cb8-8">        exit 1</span>
<span id="cb8-9">      else</span>
<span id="cb8-10">        echo "✅ Code coverage ($coverage_percentage%) meets or exceeds the threshold of $COVERAGE_THRESHOLD%"</span>
<span id="cb8-11">      fi</span>
<span id="cb8-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'📊 Check Code Coverage Threshold'</span></span>
<span id="cb8-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workingDirectory</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(CodeDirectory)</span></span>
<span id="cb8-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">env</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">COVERAGE_THRESHOLD</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(coverageThreshold)</span></span></code></pre></div>
</section>
<section id="step-7-publish-coverage-report" class="level3">
<h3 class="anchored" data-anchor-id="step-7-publish-coverage-report">Step 7: Publish Coverage Report</h3>
<p>Finally, let’s publish our coverage report:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb9-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PublishCodeCoverageResults@1</span></span>
<span id="cb9-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb9-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">codeCoverageTool</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cobertura'</span></span>
<span id="cb9-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summaryFileLocation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(CodeDirectory)/coverage.xml'</span></span>
<span id="cb9-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reportDirectory</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(CodeDirectory)/htmlcov'</span></span>
<span id="cb9-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'📈 Publish Coverage Report'</span></span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">publish</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(CodeDirectory)/htmlcov</span></span>
<span id="cb9-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">artifact</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> CodeCoverageReport</span></span>
<span id="cb9-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'📦 Publish Coverage Report as Artifact'</span></span></code></pre></div>
</section>
</section>
<section id="setting-up-local-development-environment" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-local-development-environment">Setting Up Local Development Environment</h2>
<p>To ensure developers can run these checks locally, add the following instructions to your project’s README:</p>
<section id="prerequisites" class="level3">
<h3 class="anchored" data-anchor-id="prerequisites">Prerequisites</h3>
<ul>
<li>Python 3.9</li>
<li>pip (Python package manager)</li>
</ul>
</section>
<section id="setting-up-your-environment" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-your-environment">Setting Up Your Environment</h3>
<ol type="1">
<li><p>Clone the repository:</p>
<pre><code>git clone &lt;repository-url&gt;
cd &lt;repository-name&gt;</code></pre></li>
<li><p>Create a virtual environment:</p>
<pre><code>python -m venv venv
source venv/bin/activate  # On Windows, use `venv\Scripts\activate`</code></pre></li>
<li><p>Install dependencies:</p>
<pre><code>pip install -r sourcecode/requirements.txt
pip install black flake8 isort pytest pytest-cov httpx</code></pre></li>
</ol>
</section>
<section id="running-checks-locally" class="level3">
<h3 class="anchored" data-anchor-id="running-checks-locally">Running Checks Locally</h3>
<p>To ensure your code passes the pipeline checks, run these commands from the project root:</p>
<ol type="1">
<li><p>Black (code formatting):</p>
<pre><code>black --check --line-length 79 sourcecode</code></pre></li>
<li><p>isort (import sorting):</p>
<pre><code>isort --check-only sourcecode</code></pre></li>
<li><p>Flake8 (linting):</p>
<pre><code>flake8 sourcecode</code></pre></li>
<li><p>pytest (unit tests and coverage):</p>
<pre><code>pytest --cov=sourcecode --cov-report=xml --cov-report=html ./tests</code></pre></li>
</ol>
</section>
</section>
<section id="setting-up-pre-commit-hooks" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-pre-commit-hooks">Setting Up Pre-commit Hooks</h2>
<p>To catch issues before they even make it to the pipeline, set up pre-commit hooks:</p>
<ol type="1">
<li><p>Install pre-commit:</p>
<pre><code>pip install pre-commit</code></pre></li>
<li><p>Create a <code>.pre-commit-config.yaml</code> file in your project root:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repos</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb18-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/psf/black</span></span>
<span id="cb18-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">22.3.0</span></span>
<span id="cb18-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb18-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> black</span></span>
<span id="cb18-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--line-length=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">79</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb18-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/PyCQA/isort</span></span>
<span id="cb18-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.10.1</span></span>
<span id="cb18-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb18-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> isort</span></span>
<span id="cb18-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/PyCQA/flake8</span></span>
<span id="cb18-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0.1</span></span>
<span id="cb18-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb18-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> flake8</span></span></code></pre></div></li>
<li><p>Install the hooks:</p>
<pre><code>pre-commit install</code></pre></li>
</ol>
</section>
<section id="configuring-isort" class="level2">
<h2 class="anchored" data-anchor-id="configuring-isort">Configuring isort</h2>
<p>To ensure consistent import sorting that aligns with Black’s formatting, create a file named <code>.isort.cfg</code> in the <code>sourcecode/</code> directory:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[settings]</span></span>
<span id="cb20-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">profile </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> black</span></span>
<span id="cb20-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">multi_line_output </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb20-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">include_trailing_comma </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">True</span></span>
<span id="cb20-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">force_grid_wrap </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb20-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">use_parentheses </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">True</span></span>
<span id="cb20-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ensure_newline_before_comments </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">True</span></span>
<span id="cb20-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">line_length </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">79</span></span></code></pre></div>
<p>ok Now how can we setup this pipeline to make sure any of our code get’s scanned properly before it goes to the main branch?</p>
<p>First we need a PAT token to clone any repo across azure devops organisation so to get that first then set up the pipeline as a branch policy.</p>
</section>
<section id="step-1-create-a-personal-access-token-pat" class="level2">
<h2 class="anchored" data-anchor-id="step-1-create-a-personal-access-token-pat">Step 1: Create a Personal Access Token (PAT)</h2>
<p>To clone repositories across your Azure DevOps organization, you’ll need a PAT with appropriate permissions. Here’s how to create one:</p>
<ol type="1">
<li>Sign in to your Azure DevOps organization (https://dev.azure.com/{your-organization}).</li>
<li>In the top right corner, click on your profile picture and select “Personal access tokens”. ![alt text]../media/image.png)</li>
<li>Click on “New Token”.</li>
<li>Give your token a name (e.g., “Build Validation Pipeline”).</li>
<li>Set the organization to your Azure DevOps organization.</li>
<li>For expiration, choose an appropriate timeframe (e.g., 1 year).</li>
<li>Under “Scopes”, select “Custom defined” and then check the following permissions:
<ul>
<li>Code (Read &amp; Write)</li>
<li>Build (Read &amp; Execute)</li>
</ul></li>
<li>Click “Create”. <img src="https://kunaldas.dev/media/image-1.png" class="img-fluid" alt="alt text"></li>
<li>Copy the generated token and store it securely. You won’t be able to see it again.</li>
</ol>
</section>
<section id="step-2-add-the-pat-as-a-pipeline-variable" class="level2">
<h2 class="anchored" data-anchor-id="step-2-add-the-pat-as-a-pipeline-variable">Step 2: Add the PAT as a Pipeline Variable</h2>
<p>Now that you have a PAT, you need to add it as a variable in your pipeline:</p>
<ol type="1">
<li>In Azure DevOps, go to “Pipelines” &gt; “Library”.</li>
<li>Click on “+ Variable group”.</li>
<li>Name the group (e.g., “BuildValidationTokens”).</li>
<li>Add a new variable:
<ul>
<li>Name: <code>Code_Read_PAT</code></li>
<li>Value: Paste your PAT here</li>
</ul></li>
<li>Check the “Keep this value secret” box.</li>
<li>Click “Save”.</li>
</ol>
</section>
<section id="step-3-update-your-pipeline-yaml" class="level2">
<h2 class="anchored" data-anchor-id="step-3-update-your-pipeline-yaml">Step 3: Update Your Pipeline YAML</h2>
<p>Update your <code>azure-pipelines.yml</code> to use the variable group:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">variables</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb21-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> BuildValidationTokens</span></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # ... other variables ...</span></span>
<span id="cb21-4"></span>
<span id="cb21-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ... rest of your pipeline configuration ...</span></span></code></pre></div>
</section>
<section id="step-4-create-a-branch-policy" class="level2">
<h2 class="anchored" data-anchor-id="step-4-create-a-branch-policy">Step 4: Create a Branch Policy</h2>
<p>To ensure this pipeline runs on all pull requests to your main branch:</p>
<ol type="1">
<li>Go to your Azure DevOps project.</li>
<li>Navigate to “Repos” &gt; “Branches”.</li>
<li>Find your main branch (often named <code>main</code> or <code>master</code>).</li>
<li>Click the ellipsis (…) next to the branch name and select “Branch policies”.</li>
<li>Under “Build Validation”, click “+ Add build policy”.</li>
<li>Select your build validation pipeline. <img src="https://kunaldas.dev/media/image-2.png" class="img-fluid" alt="alt text"></li>
<li>Set “Trigger” to “Automatic”.</li>
<li>Set “Policy requirement” to “Required”.</li>
<li>Set “Build expiration” as per your preference (e.g., “Immediately”).</li>
<li>Click “Save”.</li>
</ol>
</section>
<section id="step-5-configure-branch-protection" class="level2">
<h2 class="anchored" data-anchor-id="step-5-configure-branch-protection">Step 5: Configure Branch Protection</h2>
<p>To prevent direct pushes to the main branch:</p>
<ol type="1">
<li>Still in the branch policies page for your main branch.</li>
<li>Under “Require a minimum number of reviewers”, check the box.</li>
<li>Set the minimum number of reviewers (e.g., 1 or 2).</li>
<li>Optionally, check “Allow requestors to approve their own changes” based on your team’s preferences.</li>
<li>Click “Save”.</li>
</ol>
</section>
<section id="step-6-update-repository-settings" class="level2">
<h2 class="anchored" data-anchor-id="step-6-update-repository-settings">Step 6: Update Repository Settings</h2>
<p>Ensure your repository settings align with your new policy:</p>
<ol type="1">
<li>Go to “Project settings” &gt; “Repositories”.</li>
<li>Select your repository.</li>
<li>Under “Policies”:
<ul>
<li>Check “Require a minimum number of reviewers”.</li>
<li>Set “Minimum number of reviewers” (should match your branch policy).</li>
<li>Check “Check for linked work items”.</li>
<li>Check “Check for comment resolution”.</li>
<li>Optionally, check other policies as per your team’s needs.</li>
</ul></li>
<li>Click “Save”.</li>
</ol>
</section>
<section id="step-7-educate-your-team" class="level2">
<h2 class="anchored" data-anchor-id="step-7-educate-your-team">Step 7: Educate Your Team</h2>
<p>Finally, make sure your team understands the new process:</p>
<ol type="1">
<li>Create documentation explaining the new pipeline and its checks.</li>
<li>Highlight the importance of running checks locally before creating a pull request.</li>
<li>Explain how to interpret and act on the pipeline results.</li>
<li>Encourage the use of pre-commit hooks for catching issues early.</li>
</ol>
<p>By following these steps, you’ve now set up a robust system where:</p>
<ol type="1">
<li>All code changes must go through a pull request.</li>
<li>Each pull request automatically triggers your build validation pipeline.</li>
<li>The pipeline checks code formatting, linting, tests, and coverage.</li>
<li>Pull requests cannot be merged until the pipeline passes and required reviews are completed.</li>
</ol>
<p>Now in the repo where you have added the build validation just try to merge the code into main branch you will the build validation pipeline will be automatically added in queue and you can see the logs from the pipeline</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kunaldas.dev/media/image-3.png" class="img-fluid figure-img"></p>
<figcaption>alt text</figcaption>
</figure>
</div>
<p>After that if we go into the pipeline one step back there will be two important things <img src="https://kunaldas.dev/media/image-4.png" class="img-fluid" alt="alt text"></p>
<p>on top left there will be a tab called code coverage upon clicking that you will be able to view line by line coverage report of each of the files <img src="https://kunaldas.dev/media/image-5.png" class="img-fluid" alt="alt text"></p>
<p>This setup ensures that all code going into your main branch meets your quality standards. Remember to periodically review and update your pipeline as your project evolves and new best practices emerge.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>By following these steps, you’ll have a robust build validation pipeline that ensures code quality across your Python projects. This setup:</p>
<ul>
<li>Enforces consistent code style</li>
<li>Catches potential bugs early</li>
<li>Encourages comprehensive testing</li>
<li>Provides clear feedback to developers</li>
</ul>
<p>Remember, the key to success is continuous improvement. Don’t hesitate to iterate on this pipeline as you learn what works best for your team and projects. Happy coding!</p>
<p>It takes lot of time to write up and share with comminity if you think this can benifit you do share the word</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>DevOps</category>
  <category>Code Quality</category>
  <category>CI/CD</category>
  <guid>https://kunaldas.dev/posts/2024-10-03-python-build-validation-pipeline.html</guid>
  <pubDate>Thu, 03 Oct 2024 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:720/format:webp/0*JyazbS5mBODLoH6n.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Exploring Azure Storage Services 🌐🗄️</title>
  <link>https://kunaldas.dev/posts/2024-01-19-exploring-azure-storage-services.html</link>
  <description><![CDATA[ 




<p>Azure, Microsoft’s cloud computing service, offers a range of storage solutions designed to meet the diverse needs of modern businesses. In this guide, we’ll delve into the various Azure storage services, exploring their unique features and use cases. Whether you’re a developer, a data scientist, or an IT professional, understanding these services can enhance your cloud strategy.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<hr>
<section id="table-of-contents" class="level2">
<h2 class="anchored" data-anchor-id="table-of-contents">Table of Contents</h2>
<ul>
<li>Exploring Azure Storage Services 🌐🗄️
<ul>
<li></li>
<li>Table of Contents</li>
<li>Introduction to Azure Storage</li>
<li>Azure Blob Storage
<ul>
<li>What is Blob Storage? 🤔</li>
<li>Key Features 🌟</li>
<li>Use Cases 🛠️</li>
</ul></li>
<li>Azure File Storage
<ul>
<li>What is File Storage? 📂</li>
<li>Key Features 🌟</li>
<li>Use Cases 🛠️</li>
</ul></li>
<li>Azure Queue Storage
<ul>
<li>What is Queue Storage? 📨</li>
<li>Key Features 🌟</li>
<li>Use Cases 🛠️</li>
</ul></li>
<li>Azure Table Storage
<ul>
<li>What is Table Storage? 📊</li>
<li>Key Features 🌟</li>
<li>Use Cases 🛠️</li>
</ul></li>
<li>Azure Disk Storage
<ul>
<li>What is Disk Storage? 💽</li>
<li>Key Features 🌟</li>
<li>Use Cases 🛠️</li>
</ul></li>
<li>Choosing the Right Azure Storage Service</li>
<li>Conclusion</li>
<li>Read my blogs:</li>
<li>Connect with Me:</li>
</ul></li>
</ul>
<hr>
</section>
<section id="introduction-to-azure-storage" class="level2">
<h2 class="anchored" data-anchor-id="introduction-to-azure-storage">Introduction to Azure Storage</h2>
<p>Azure Storage is a cloud service at the core of Azure. It offers scalable, durable, and secure storage options for a variety of data types. In this guide, we will explore the different Azure Storage services, understand their functionalities, and see how they can be applied in real-world scenarios.</p>
<hr>
</section>
<section id="azure-blob-storage" class="level2">
<h2 class="anchored" data-anchor-id="azure-blob-storage">Azure Blob Storage</h2>
<section id="what-is-blob-storage" class="level3">
<h3 class="anchored" data-anchor-id="what-is-blob-storage">What is Blob Storage? 🤔</h3>
<p>Blob Storage is Azure’s object storage solution for the cloud. It is optimized for storing massive amounts of unstructured data, such as text or binary data.</p>
</section>
<section id="key-features" class="level3">
<h3 class="anchored" data-anchor-id="key-features">Key Features 🌟</h3>
<ul>
<li><strong>Scalability:</strong> Easily handles massive amounts of data.</li>
<li><strong>Security:</strong> Advanced security and encryption features.</li>
<li><strong>Accessibility:</strong> Data is accessible from anywhere in the world over HTTP or HTTPS.</li>
</ul>
</section>
<section id="use-cases" class="level3">
<h3 class="anchored" data-anchor-id="use-cases">Use Cases 🛠️</h3>
<ul>
<li><strong>Storing Images and Videos:</strong> Ideal for storing media files for websites and applications.</li>
<li><strong>Data Backup:</strong> Efficient for backing up data and disaster recovery solutions.</li>
<li><strong>Big Data Analysis:</strong> Can store large datasets for analytics purposes.</li>
</ul>
<hr>
</section>
</section>
<section id="azure-file-storage" class="level2">
<h2 class="anchored" data-anchor-id="azure-file-storage">Azure File Storage</h2>
<section id="what-is-file-storage" class="level3">
<h3 class="anchored" data-anchor-id="what-is-file-storage">What is File Storage? 📂</h3>
<p>Azure File Storage offers fully managed file shares in the cloud using the standard SMB protocol.</p>
</section>
<section id="key-features-1" class="level3">
<h3 class="anchored" data-anchor-id="key-features-1">Key Features 🌟</h3>
<ul>
<li><strong>SMB Protocol:</strong> Uses the standard SMB 3.0 protocol.</li>
<li><strong>Shared Access:</strong> Files can be shared across applications and virtual machines.</li>
</ul>
</section>
<section id="use-cases-1" class="level3">
<h3 class="anchored" data-anchor-id="use-cases-1">Use Cases 🛠️</h3>
<ul>
<li><strong>Lift and Shift:</strong> Ideal for migrating on-premises applications that rely on file shares to Azure.</li>
<li><strong>Hybrid Storage:</strong> Works well for scenarios requiring both on-premises and cloud storage.</li>
</ul>
<hr>
</section>
</section>
<section id="azure-queue-storage" class="level2">
<h2 class="anchored" data-anchor-id="azure-queue-storage">Azure Queue Storage</h2>
<section id="what-is-queue-storage" class="level3">
<h3 class="anchored" data-anchor-id="what-is-queue-storage">What is Queue Storage? 📨</h3>
<p>Queue Storage provides a messaging queue for reliable messaging between application components.</p>
</section>
<section id="key-features-2" class="level3">
<h3 class="anchored" data-anchor-id="key-features-2">Key Features 🌟</h3>
<ul>
<li><strong>Decoupling:</strong> Helps in decoupling application components.</li>
<li><strong>Scalability:</strong> Scales to handle a large number of messages.</li>
</ul>
</section>
<section id="use-cases-2" class="level3">
<h3 class="anchored" data-anchor-id="use-cases-2">Use Cases 🛠️</h3>
<ul>
<li><strong>Message Processing:</strong> Perfect for asynchronous message processing in applications.</li>
<li><strong>Task Scheduling:</strong> Useful in task scheduling scenarios.</li>
</ul>
<hr>
</section>
</section>
<section id="azure-table-storage" class="level2">
<h2 class="anchored" data-anchor-id="azure-table-storage">Azure Table Storage</h2>
<section id="what-is-table-storage" class="level3">
<h3 class="anchored" data-anchor-id="what-is-table-storage">What is Table Storage? 📊</h3>
<p>Table Storage is a NoSQL data store for semi-structured data.</p>
</section>
<section id="key-features-3" class="level3">
<h3 class="anchored" data-anchor-id="key-features-3">Key Features 🌟</h3>
<ul>
<li><strong>NoSQL:</strong> Ideal for storing large volumes of non-relational data.</li>
<li><strong>Flexible:</strong> Easy to adapt to changing data requirements.</li>
</ul>
</section>
<section id="use-cases-3" class="level3">
<h3 class="anchored" data-anchor-id="use-cases-3">Use Cases 🛠️</h3>
<ul>
<li><strong>Storing User Data:</strong> Great for storing user data for web applications.</li>
<li><strong>Address Books:</strong> Suitable for storing address books, user profiles, etc.</li>
</ul>
<hr>
</section>
</section>
<section id="azure-disk-storage" class="level2">
<h2 class="anchored" data-anchor-id="azure-disk-storage">Azure Disk Storage</h2>
<section id="what-is-disk-storage" class="level3">
<h3 class="anchored" data-anchor-id="what-is-disk-storage">What is Disk Storage? 💽</h3>
<p>Azure Disk Storage offers high-performance, durable block storage for Azure Virtual Machines.</p>
</section>
<section id="key-features-4" class="level3">
<h3 class="anchored" data-anchor-id="key-features-4">Key Features 🌟</h3>
<ul>
<li><strong>High Performance:</strong> Designed for I/O-intensive workloads.</li>
<li><strong>Data Durability:</strong> Provides persistent data storage.</li>
</ul>
</section>
<section id="use-cases-4" class="level3">
<h3 class="anchored" data-anchor-id="use-cases-4">Use Cases 🛠️</h3>
<ul>
<li><strong>Virtual Machines:</strong> Ideal for databases and other high-performance applications running on VMs.</li>
</ul>
<hr>
</section>
</section>
<section id="choosing-the-right-azure-storage-service" class="level2">
<h2 class="anchored" data-anchor-id="choosing-the-right-azure-storage-service">Choosing the Right Azure Storage Service</h2>
<p>When selecting an Azure Storage service, consider factors like data type, access patterns, and scalability requirements. Each service is tailored to specific scenarios, so understanding your application’s needs is crucial.</p>
<hr>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Azure’s diverse storage options offer flexible, scalable, and secure solutions to meet the ever-evolving data storage needs of businesses. By understanding the strengths and applications of each service, you can make informed decisions about your cloud storage strategy.</p>
<hr>
</section>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Azure</category>
  <category>Storage</category>
  <category>Cloud Infrastructure</category>
  <guid>https://kunaldas.dev/posts/2024-01-19-exploring-azure-storage-services.html</guid>
  <pubDate>Fri, 19 Jan 2024 00:00:00 GMT</pubDate>
  <media:content url="https://kunaldas.dev/posts/media/storage-svc-az.png" medium="image" type="image/png" height="48" width="144"/>
</item>
<item>
  <title>Seamless Integration and Deployment of Azure Data Factory using Azure DevOps</title>
  <link>https://kunaldas.dev/posts/2023-11-03-seamless-data-factory-deployment.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<ul>
<li>Seamless Integration and Deployment of Azure Data Factory by using Azure DevOps
<ul>
<li>Introduction</li>
<li>Embracing Source Control in ADF</li>
<li>Advantages of Git Integration with Azure Data Factory</li>
<li><strong>Architecture Flow diagram</strong></li>
<li>Connecting to a Git Repository</li>
<li>Implementing the Pipeline Template</li>
</ul></li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Azure Data Factory (ADF) offers a robust platform for data integration and transformation, and when combined with continuous integration and delivery (CI/CD), it becomes a powerhouse. CI/CD in ADF context is the seamless transition of data pipelines across different environments like development, testing, and production. ADF leverages Azure Resource Manager (ARM) templates to encapsulate the configurations of its entities, such as pipelines, datasets, and data flows. There are primarily two recommended ways to transition a data factory across environments:</p>
<ol type="1">
<li>Leveraging Azure Pipelines for an automated deployment.</li>
<li>Manually uploading an ARM template through the Data Factory user interface integrated with Azure Resource Manager.</li>
</ol>
</section>
<section id="embracing-source-control-in-adf" class="level2">
<h2 class="anchored" data-anchor-id="embracing-source-control-in-adf">Embracing Source Control in ADF</h2>
<p>Azure Data Factory’s integration with ARM templates facilitates the deployment of pipelines. Notably, there’s a distinct ADF Publish branch and a collaboration branch.</p>
<p>Steps for Integrating Source Control with Branching Strategy:</p>
<ol type="1">
<li>Initialize the Git Repository: Start by initializing a single Git repository. This repository will house multiple ADF configurations, each tailored for specific pipelines.</li>
<li>Branching Blueprint: Designate a unique branch for every ADF, which will act as a collaboration branch. This setup will lead to the creation of distinct folders under the <code>adf_publish</code> branch. It’s crucial to have separate branches for development to allow individual feature development, testing, and deployment.Important to note that we may not use this branch as we will use automated ARM tempalte publishing methood.</li>
<li>Integrate Development Branches with Source Control: Only link the development branches with source control. This ensures continuous validation and checking of the code during its development phase. Keeping UAT/Production deployments separate ensures a clear demarcation between development and deployment phases.</li>
<li>Pipeline Deployment: Utilize the ARM templates produced by ADF to deploy your pipelines, ensuring a uniform deployment process.</li>
<li>Final Integration: Post thorough testing, merge the feature branches with the collaboration branch. The final version in the collaboration branch should be the one deployed to production.</li>
</ol>
</section>
<section id="advantages-of-git-integration-with-azure-data-factory" class="level2">
<h2 class="anchored" data-anchor-id="advantages-of-git-integration-with-azure-data-factory">Advantages of Git Integration with Azure Data Factory</h2>
<p>1. <strong>Enhanced Source Control:</strong> As ADF tasks become increasingly critical, it’s essential to:</p>
<ul>
<li>Seamlessly track and audit changes.</li>
<li>Effortlessly revert unwanted modifications.</li>
</ul>
<p>2. <strong>Flexible Drafting:</strong> Unlike direct authoring, which mandates validation for every save, Git integration allows:</p>
<ul>
<li>Drafting or partial saves.</li>
<li>Incremental modifications without validation, ensuring only thoroughly tested changes are published.</li>
</ul>
<p>3. <strong>Collaborative Environment &amp; Role-Based Access:</strong> Git facilitates:</p>
<ul>
<li>Collaborative code reviews.</li>
<li>Differentiated permissions, dictating who can edit via Git and who has publishing rights.</li>
</ul>
<p>4. <strong>Streamlined CI/CD Process:</strong> Git aids in:</p>
<ul>
<li>Automating release pipelines upon changes.</li>
<li>Customizing ARM template properties for cleaner configuration management.</li>
</ul>
<p>5. <strong>Boosted Performance:</strong> ADFs integrated with Git are significantly faster, loading up to a whopping 10 times quicker due to efficient resource downloading.</p>
<p>It’s worth noting that direct authoring in the Azure Data Factory UI becomes disabled once a Git repository is integrated. However, modifications made via PowerShell or SDK are directly published to the Data Factory service, bypassing Git.</p>
</section>
<section id="architecture-flow-diagram" class="level2">
<h2 class="anchored" data-anchor-id="architecture-flow-diagram"><strong>Architecture Flow diagram</strong></h2>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*z3Maq-fWswhWLoPDNva7fA.gif" class="img-fluid"></p>
</section>
<section id="connecting-to-a-git-repository" class="level2">
<h2 class="anchored" data-anchor-id="connecting-to-a-git-repository">Connecting to a Git Repository</h2>
<p>Configuration using Management Hub:</p>
<ul>
<li>Navigate to the management hub within the ADF UI.</li>
<li>Under the Source control section, select Git configuration.</li>
<li>If no repository is linked, click on Configure.</li>
</ul>
<p>When setting up Git in the Azure Portal, certain settings like project name and repository name need to be manually inputted.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*f5Qo3S3JmR4vclpCLWMQWA.png" class="img-fluid"></p>
<p><strong>Azure Repos Settings:</strong></p>
<p>The configuration pane will display various Azure Repos code repository settings. These settings are essential to apply the CI-CD template. For instance:</p>
<ul>
<li>Repository Type: Specifies the type of the Azure Repos code repository.</li>
<li>Azure Active Directory: Your Azure AD tenant name.</li>
<li>Azure Repos Organization: Your Azure Repos organization name.</li>
<li>Project Name: Your Azure Repos project name.</li>
<li>Repository Name: Your Azure Repos code repository name.</li>
<li>Collaboration Branch: Your Azure Repos collaboration branch used for publishing.</li>
<li>Publish Branch: The branch where ARM templates related to publishing are stored.</li>
<li>Root Folder: Your root folder in your Azure Repos collaboration branch.</li>
</ul>
<p>Ensure you enable the option in the management hub to include global parameters in the ARM template if you have declared any global parameters.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parameter Definitions: Allows configuration without diving deep into the script.</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parameters</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> envTarget</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Deployment Environment'</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> string</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">values</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Stage</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Prod</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> azureDFName</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Azure Data Factory Identifier'</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> string</span></span>
<span id="cb1-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gitADFPath</span></span>
<span id="cb1-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Git Path for ADF Publishing'</span></span>
<span id="cb1-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> string</span></span>
<span id="cb1-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb1-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> azureRegion</span></span>
<span id="cb1-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Azure Deployment Region'</span></span>
<span id="cb1-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> string</span></span>
<span id="cb1-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb1-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> azureResourceGroup</span></span>
<span id="cb1-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Resource Group in Azure'</span></span>
<span id="cb1-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> string</span></span>
<span id="cb1-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb1-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> azureSubID</span></span>
<span id="cb1-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Azure Subscription Identifier'</span></span>
<span id="cb1-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> string</span></span>
<span id="cb1-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb1-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> azureRMConnectionName</span></span>
<span id="cb1-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Azure Resource Manager Connection Identifier'</span></span>
<span id="cb1-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> string</span></span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sourceDFName</span></span>
<span id="cb1-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Source Data Factory for ARM Template'</span></span>
<span id="cb1-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> string</span></span>
<span id="cb1-37"></span>
<span id="cb1-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> targetDFName</span></span>
<span id="cb1-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Target Data Factory for Deployment'</span></span>
<span id="cb1-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> string</span></span>
<span id="cb1-41"></span>
<span id="cb1-42"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> modifyGlobalParams</span></span>
<span id="cb1-43"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Modify Global Parameters'</span></span>
<span id="cb1-44"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> boolean</span></span>
<span id="cb1-45"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">default</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb1-46"></span>
<span id="cb1-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build Phase: Validate and Create ARM templates for Data Factory using npm.</span></span>
<span id="cb1-48"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stages</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Construct</span></span>
<span id="cb1-50"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Compile and Confirm'</span></span>
<span id="cb1-51"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-52"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">job</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> CompileAndCheck</span></span>
<span id="cb1-53"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Compile and Confirm Azure Data Factory'</span></span>
<span id="cb1-54"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pool</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-55"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vmImage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ubuntu-latest'</span></span>
<span id="cb1-56"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb1-57"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # Set up Node.js for npm tasks.</span></span>
<span id="cb1-59"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> NodeTool@0</span></span>
<span id="cb1-60"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-61"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">versionSpec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'14.x'</span></span>
<span id="cb1-62"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set up Node.js'</span></span>
<span id="cb1-63"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb1-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # Set up required npm packages for Data Factory.</span></span>
<span id="cb1-65"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Npm@1</span></span>
<span id="cb1-66"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-67"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'install'</span></span>
<span id="cb1-68"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbose</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb1-69"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workingDir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Build.Repository.LocalPath)/data-factory/'</span></span>
<span id="cb1-70"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Set up npm modules'</span></span>
<span id="cb1-71"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb1-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # Confirm Data Factory setup.</span></span>
<span id="cb1-73"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Npm@1</span></span>
<span id="cb1-74"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-75"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'custom'</span></span>
<span id="cb1-76"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workingDir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Build.Repository.LocalPath)/data-factory/'</span></span>
<span id="cb1-77"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">customCommand</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run build validate $(Build.Repository.LocalPath)/data-factory /subscriptions/$(azureSubID)/resourceGroups/$(azureResourceGroup)/providers/Microsoft.DataFactory/factories/$(azureDFName)'</span></span>
<span id="cb1-78"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Confirm Data Factory Setup'</span></span>
<span id="cb1-79"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb1-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # Create ARM template for Data Factory.</span></span>
<span id="cb1-81"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Npm@1</span></span>
<span id="cb1-82"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-83"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'custom'</span></span>
<span id="cb1-84"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workingDir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Build.Repository.LocalPath)/data-factory/'</span></span>
<span id="cb1-85"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">customCommand</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run build export $(Build.Repository.LocalPath)/data-factory /subscriptions/$(azureSubID)/resourceGroups/$(azureResourceGroup)/providers/Microsoft.DataFactory/factories/$(azureDFName) "ArmTemplate"'</span></span>
<span id="cb1-86"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Create ARM template'</span></span>
<span id="cb1-87"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb1-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # Share the created ARM template for later stages.</span></span>
<span id="cb1-89"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PublishPipelineArtifact@1</span></span>
<span id="cb1-90"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-91"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">targetPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Build.Repository.LocalPath)/data-factory/ArmTemplate'</span></span>
<span id="cb1-92"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">artifact</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ArmTemplateArtifact'</span></span>
<span id="cb1-93"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">publishLocation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pipeline'</span></span>
<span id="cb1-94"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Share ARM template'</span></span>
<span id="cb1-95"></span>
<span id="cb1-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Deployment Phase: Deploy the Data Factory using ARM template.</span></span>
<span id="cb1-97"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> DeployPhase</span></span>
<span id="cb1-98"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-99"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">deployment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> DeployToTarget</span></span>
<span id="cb1-100"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Deploy to ${{ parameters.envTarget }} | ADF: ${{ parameters.azureDFName }}'</span></span>
<span id="cb1-101"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dependsOn</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Construct</span></span>
<span id="cb1-102"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> succeeded()</span></span>
<span id="cb1-103"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.envTarget }}</span></span>
<span id="cb1-104"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pool</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-105"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vmImage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ubuntu-latest'</span></span>
<span id="cb1-106"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strategy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-107"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runOnce</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-108"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">deploy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-109"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            # Skip repo checkout for faster deployment.</span></span>
<span id="cb1-111"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">checkout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> none</span></span>
<span id="cb1-112"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span></span>
<span id="cb1-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            # Retrieve the ARM template from the build phase.</span></span>
<span id="cb1-114"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> DownloadPipelineArtifact@2</span></span>
<span id="cb1-115"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-116"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">buildType</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'current'</span></span>
<span id="cb1-117"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">artifactName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ArmTemplateArtifact'</span></span>
<span id="cb1-118"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">targetPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Pipeline.Workspace)'</span></span>
<span id="cb1-119"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Retrieve ARM template"</span></span>
<span id="cb1-120"></span>
<span id="cb1-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            # Optionally modify global parameters if needed.</span></span>
<span id="cb1-122"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">${{ if eq(parameters.modifyGlobalParams, true) }}</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-123"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> AzurePowerShell@5</span></span>
<span id="cb1-124"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(Optional) Modify Global Parameters'</span></span>
<span id="cb1-125"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-126"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">azureSubscription</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.azureRMConnectionName }}</span></span>
<span id="cb1-127"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">azurePowerShellVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LatestVersion'</span></span>
<span id="cb1-128"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScriptType</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'FilePath'</span></span>
<span id="cb1-129"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScriptPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Pipeline.Workspace)/GlobalParametersUpdateScript.ps1'</span></span>
<span id="cb1-130"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScriptArguments</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-globalParametersFilePath "$(Pipeline.Workspace)/*_GlobalParameters.json" -resourceGroupName "${{ parameters.azureResourceGroup }}" -dataFactoryName "${{ parameters.sourceDFName }}"'</span></span>
<span id="cb1-131"></span>
<span id="cb1-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            # Deactivate ADF Triggers after deployment.</span></span>
<span id="cb1-133"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> toggle-adf-trigger@2</span></span>
<span id="cb1-134"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-135"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">azureSubscription</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.azureRMConnectionName }}</span></span>
<span id="cb1-136"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ResourceGroupName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.azureResourceGroup }}</span></span>
<span id="cb1-137"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DatafactoryName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.targetDFName }}</span></span>
<span id="cb1-138"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TriggerStatus</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'stop'</span></span>
<span id="cb1-139"></span>
<span id="cb1-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            # Deploy using the ARM template. Override source ADF name with target ADF name.</span></span>
<span id="cb1-141"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> AzureResourceManagerTemplateDeployment@3</span></span>
<span id="cb1-142"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Deploy using ARM Template'</span></span>
<span id="cb1-143"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-144"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">azureResourceManagerConnection</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.azureRMConnectionName }}</span></span>
<span id="cb1-145"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subscriptionId</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.azureSubID }}</span></span>
<span id="cb1-146"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resourceGroupName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.azureResourceGroup }}</span></span>
<span id="cb1-147"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">location</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.azureRegion }}</span></span>
<span id="cb1-148"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csmFile</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Pipeline.Workspace)/ARMTemplateForFactory.json'</span></span>
<span id="cb1-149"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csmParametersFile</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Pipeline.Workspace)/ARMTemplateParametersForFactory.json'</span></span>
<span id="cb1-150"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">overrideParameters</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-factoryName "${{ parameters.targetDFName }}"'</span></span>
<span id="cb1-151"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span></span>
<span id="cb1-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            # Activate ADF Triggers after deployment.</span></span>
<span id="cb1-153"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> toggle-adf-trigger@2</span></span>
<span id="cb1-154"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-155"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">azureSubscription</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.azureRMConnectionName }}</span></span>
<span id="cb1-156"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ResourceGroupName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.azureResourceGroup }}</span></span>
<span id="cb1-157"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DatafactoryName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ parameters.targetDFName }}</span></span>
<span id="cb1-158"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TriggerStatus</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start'</span></span></code></pre></div>
</section>
<section id="implementing-the-pipeline-template" class="level2">
<h2 class="anchored" data-anchor-id="implementing-the-pipeline-template">Implementing the Pipeline Template</h2>
<p>This guide provides a comprehensive walkthrough on setting up and utilizing the Azure Data Factory CI/CD pipeline as defined in the YAML file. The pipeline streamlines the build and deployment of ADF artifacts to designated environments.</p>
<p><strong>Prerequisites:</strong></p>
<ul>
<li>Azure Data Factory Instance: An active ADF instance in Azure.</li>
<li>Azure DevOps: The YAML is tailored for Azure DevOps. Ensure you have an active Azure DevOps organization and project.</li>
<li>Azure DevOps Agent: The pipeline employs the <code>ubuntu-latest</code> VM image.</li>
<li>Node.js: The initial stage requires Node.js.</li>
<li>Azure Subscription: Necessary permissions on your Azure subscription are required.</li>
</ul>
<p>To download necessery package for the npm, keep package.json file in the parent directory</p>
<pre class="npm"><code>{
    "scripts":{
        "build":"node node_modules/@microsoft/azure-data-factory-utilities/lib/index"
    },
    "dependencies":{
        "@microsoft/azure-data-factory-utilities":"^1.0.0"
    }
}</code></pre>
<p><strong>Repository Structure:</strong></p>
<p>The ADF code should be housed in a folder named <code>data-factory-directory</code> at the root of your repository.</p>
<p><strong>Setup &amp; Execution:</strong></p>
<ol type="1">
<li>Azure Service Connection: Establish a service connection in Azure DevOps linked to your Azure subscription.</li>
<li>GlobalParametersUpdateScript.ps1: If the <code>modifyGlobalParams</code> flag is set to true, ensure a PowerShell script named <code>GlobalParamsScript.ps1</code> is present at the root of your repository.</li>
<li>Using the Pipeline: Upload the YAML file to your Azure DevOps repository, create a new pipeline, fill in the parameters, trigger the pipeline, and monitor the build and deployment.</li>
</ol>
<p><strong>Running the Pipeline</strong></p>
<p>Push some changes to <code>development</code>branch. and the pipeline will get triggered automatically</p>
<p><img src="https://miro.medium.com/v2/resize:fit:378/1*Mnhcym8CgT0JHrUtyJ3Gyg.png" class="img-fluid"></p>
<p>Once the pipeline finished see the artifact that got published.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:251/1*81EyoKuXbjacpHwoUPn--Q.png" class="img-fluid"></p>
<p>Similarly once the pipeline gets approval for deployment, it will deploy the updated template to production,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:328/1*1YrpZ6Xhv8BGBuERjN1k2g.png" class="img-fluid"></p>
<p><strong>Modifications &amp; Best Practices:</strong></p>
<ul>
<li>Global Parameter Update: Adjust the logic in the optional global parameter update task if needed.</li>
<li>Additional Tasks: Insert any extra tasks within the steps section of the stages.</li>
<li>Permissions: Not every team member should have update permissions. Implement a system where only a select few can publish to the Data Factory.</li>
<li>Using Azure Key Vault: For security, store connection strings or passwords in Azure Key Vault or use managed identity authentication for ADF Linked Services.</li>
</ul>
<p>In conclusion, integrating CI/CD with Azure Data Factory not only streamlines the deployment process but also enhances collaboration, auditing, and overall efficiency. With the right setup and best practices, teams can ensure seamless and error-free deployments.</p>
</section>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Azure</category>
  <category>DevOps</category>
  <category>Data Factory</category>
  <category>CI/CD</category>
  <guid>https://kunaldas.dev/posts/2023-11-03-seamless-data-factory-deployment.html</guid>
  <pubDate>Fri, 03 Nov 2023 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:700/1*z3Maq-fWswhWLoPDNva7fA.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Mastering Kubernetes: Essential Cluster Management Tools</title>
  <link>https://kunaldas.dev/posts/2023-08-25-kubernetes-cluster-management-tools.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<p><img src="https://miro.medium.com/v2/resize:fit:608/1*XwnKb_efOFg5HtGeGjIGjg.png" class="img-fluid"></p>
<ul>
<li>Mastering Kubernetes: A Deep Dive into Cluster Management Tools Every DevOps Engineer Should Know
<ul>
<li>1. Kustomizer</li>
<li>2. k9s</li>
<li>3. Kudo</li>
<li>4. node-problem-detector</li>
<li>5. k0s</li>
<li>6. Helm</li>
<li>7. ClusterPedia</li>
<li>8. KEDA</li>
<li>9. kubectl snapshot</li>
<li>10. Cert-manager</li>
<li>11. Prometheus</li>
<li>12. Metalk8s</li>
<li>13. Kube-ops-view</li>
</ul></li>
</ul>
<p>Kubernetes, often abbreviated as K8s, has revolutionized the world of container orchestration. As its popularity grows, so does the ecosystem around it, offering a myriad of tools designed to simplify, enhance, and optimize the Kubernetes experience. For DevOps engineers, understanding these tools is paramount. In this comprehensive guide, we’ll explore some of the most promising cluster management tools that can elevate your Kubernetes game.</p>
<section id="kustomizer" class="level2">
<h2 class="anchored" data-anchor-id="kustomizer">1. Kustomizer</h2>
<p>Kustomizer is not just another configuration management tool. It stands out by allowing Kubernetes native applications to be customized without the need for templates. This means you can manage variations of Kubernetes YAML configurations without diving into complex templating engines.</p>
<p><a href="https://kubectl.docs.kubernetes.io/guides/introduction/kustomize/">Learn more about Kustomizer</a></p>
</section>
<section id="k9s" class="level2">
<h2 class="anchored" data-anchor-id="k9s">2. k9s</h2>
<p>Imagine having a bird’s-eye view of your Kubernetes clusters right from your terminal. k9s offers a terminal-based UI that provides real-time insights into cluster activities and resources. It’s like having a dashboard but with the power of the command line.</p>
<p><a href="https://k9scli.io/">Explore k9s</a></p>
</section>
<section id="kudo" class="level2">
<h2 class="anchored" data-anchor-id="kudo">3. Kudo</h2>
<p>Building Kubernetes Operators can be challenging. Enter KUDO — the Kubernetes Universal Declarative Operator. It’s an open-source toolkit that simplifies the creation of Operators using a declarative approach, making the management of stateful applications on Kubernetes a breeze.</p>
<p><a href="https://kudo.dev/">Discover Kudo</a></p>
</section>
<section id="node-problem-detector" class="level2">
<h2 class="anchored" data-anchor-id="node-problem-detector">4. node-problem-detector</h2>
<p>Ensuring the health of your nodes is crucial. The node-problem-detector tool identifies common node issues, bridging the gap between the kernel and cluster management layers. It’s like having a health check-up for your nodes.</p>
<p><a href="https://github.com/kubernetes/node-problem-detector">Check out node-problem-detector</a></p>
</section>
<section id="k0s" class="level2">
<h2 class="anchored" data-anchor-id="k0s">5. k0s</h2>
<p>In environments where resources are limited, such as edge computing or IoT, k0s shines. It’s a lightweight, certified Kubernetes distribution tailored for such scenarios, ensuring you don’t compromise on performance.</p>
<p><a href="https://k0sproject.io/">Dive into k0s</a></p>
</section>
<section id="helm" class="level2">
<h2 class="anchored" data-anchor-id="helm">6. Helm</h2>
<p>Helm is often dubbed the “package manager for Kubernetes.” It allows users to define, install, and upgrade even the most complex Kubernetes applications using charts, which are packages of pre-configured Kubernetes resources.</p>
<p><a href="https://helm.sh/">Discover Helm</a></p>
</section>
<section id="clusterpedia" class="level2">
<h2 class="anchored" data-anchor-id="clusterpedia">7. ClusterPedia</h2>
<p>Searching and managing resources across clusters can be daunting. ClusterPedia, a unified search platform for Kubernetes clusters, streamlines this process, making resource management efficient and hassle-free.</p>
<p><a href="https://chat.openai.com/?model=gpt-4-plugins#">Learn about ClusterPedia</a> <em>(Note: Link to be updated when available)</em></p>
</section>
<section id="keda" class="level2">
<h2 class="anchored" data-anchor-id="keda">8. KEDA</h2>
<p>Event-driven architectures are gaining traction. KEDA (Kubernetes-based Event-Driven Autoscaling) is a component that brings event-driven autoscaling to your Kubernetes applications, ensuring they scale based on real-time demand.</p>
<p><a href="https://keda.sh/">Explore KEDA</a></p>
</section>
<section id="kubectl-snapshot" class="level2">
<h2 class="anchored" data-anchor-id="kubectl-snapshot">9. kubectl snapshot</h2>
<p>Documentation and debugging are made easier with kubectl snapshot. This tool captures the current state of a Kubernetes cluster, providing a snapshot that can be analyzed or shared.</p>
<p><a href="https://chat.openai.com/?model=gpt-4-plugins#">Discover kubectl snapshot</a> <em>(Note: Link to be updated when available)</em></p>
</section>
<section id="cert-manager" class="level2">
<h2 class="anchored" data-anchor-id="cert-manager">10. Cert-manager</h2>
<p>Security is paramount. Cert-manager steps in as a native Kubernetes certificate management controller, automating the issuance and renewal of certificates from various sources, ensuring your applications remain secure.</p>
<p><a href="https://cert-manager.io/">Check out Cert-manager</a></p>
</section>
<section id="prometheus" class="level2">
<h2 class="anchored" data-anchor-id="prometheus">11. Prometheus</h2>
<p>Monitoring is crucial in a Kubernetes environment. Prometheus, an open-source monitoring and alerting toolkit, integrates seamlessly with Kubernetes, providing insights into your clusters and applications.</p>
<p><a href="https://prometheus.io/">Learn more about Prometheus</a></p>
</section>
<section id="metalk8s" class="level2">
<h2 class="anchored" data-anchor-id="metalk8s">12. Metalk8s</h2>
<p>For those focusing on long-term on-prem deployments, especially on metal machines, Metalk8s is a go-to Kubernetes distribution. It’s opinionated, ensuring stability and performance in such specific scenarios.</p>
<p><a href="https://metal-k8s.readthedocs.io/">Dive into Metalk8s</a></p>
</section>
<section id="kube-ops-view" class="level2">
<h2 class="anchored" data-anchor-id="kube-ops-view">13. Kube-ops-view</h2>
<p>Visual representation can simplify complex operations. Kube-ops-view offers a read-only system dashboard for multiple K8s clusters, providing a graphical overview of cluster operations.</p>
<p><a href="https://github.com/hjacobs/kube-ops-view">Explore Kube-ops-view</a></p>
<p>Conclusion: The Kubernetes ecosystem is vast and ever-evolving. For DevOps engineers, staying updated with the right tools can make the difference between a smoothly running cluster and a chaotic environment. This guide provides a starting point, but always ensure to evaluate tools based on your unique needs.</p>
<p><strong><em>Comment down the tools you use I shall be updating the list whenever I find something cool.<br>
keep it followed !!</em></strong></p>
</section>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Kubernetes</category>
  <category>DevOps</category>
  <category>Cloud Native</category>
  <category>Tools</category>
  <guid>https://kunaldas.dev/posts/2023-08-25-kubernetes-cluster-management-tools.html</guid>
  <pubDate>Fri, 25 Aug 2023 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:608/1*XwnKb_efOFg5HtGeGjIGjg.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Mastering Private Repositories in Enterprise with GitHub</title>
  <link>https://kunaldas.dev/posts/2023-07-19-mastering-github-private-repos.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*o_r7JdrqQTcB0kkb3AF1UA.jpeg" class="img-fluid"></p>
<ul>
<li>Mastering Private Repositories in Enterprise with GitHub: A Comprehensive Guide
<ul>
<li>Getting Started with GitHub and Git</li>
<li>Securing Your Connection with SSH</li>
<li>Additional Tips and Techniques</li>
<li>Leverage GitHub’s Issue Tracker</li>
<li>2. Use Branching Strategically</li>
<li>3. Take Advantage of GitHub Actions</li>
<li>4. Protect Sensitive Information with .gitignore</li>
<li>5. Stay Informed with Webhooks</li>
</ul></li>
</ul>
<p>In the modern era of software development, understanding how to effectively use tools like GitHub is crucial. This guide is designed to help you navigate the world of GitHub, specifically focusing on working with private repositories in an enterprise setting. By the end of this guide, you’ll have a solid foundation in GitHub, git, and SSH, empowering you to manage your codebase efficiently and securely.</p>
<section id="getting-started-with-github-and-git" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-github-and-git">Getting Started with GitHub and Git</h2>
<ol type="1">
<li>Create Your GitHub Account</li>
</ol>
<p>Start your journey by setting up a GitHub account. GitHub is a web-based hosting service for version control and is a key player in the open-source community. Having a GitHub account opens up a world of opportunities for collaboration and project management.</p>
<p><a href="https://github.com/join">https://github.com/join</a></p>
<p>2. Install Git</p>
<p>Git is the backbone of GitHub. It’s a distributed version control system that allows multiple people to work on a project without overwriting each other’s changes. Download and install git on your local machine to start leveraging its power.</p>
<p><a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">https://git-scm.com/book/en/v2/Getting-Started-Installing-Git</a></p>
<p>3. Configure Git</p>
<p>Personalize your git setup by adding your username and email. This information will be associated with any commits you make. Open your terminal or shell and type:</p>
<pre><code>git config --global user.name "Your name here"git config --global user.email "your_email@example.com"</code></pre>
<p>To enhance your git experience, enable colored output in the terminal and set your preferred editor. This can make navigating git responses easier and ensure you’re comfortable when git opens an editor for you:</p>
<pre><code>git config - global color.ui  
git config - global core.editor</code></pre>
</section>
<section id="securing-your-connection-with-ssh" class="level2">
<h2 class="anchored" data-anchor-id="securing-your-connection-with-ssh">Securing Your Connection with SSH</h2>
<ol type="1">
<li><strong>Establish SSH Connection</strong></li>
</ol>
<p>Security is paramount when working with code, especially in an enterprise setting. SSH, or Secure Shell, is a protocol that provides a secure channel between your local machine and GitHub. You can follow this <a href="https://www.cyberithub.com/how-to-setup-passwordless-authentication-for-git-push-in-github/">comprehensive guide</a> for setting up password-less logins. GitHub also provides a <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">detailed guide</a> for generating SSH keys.</p>
<p>Check if you have the files ~/.ssh/id_rsa and ~/.ssh/id_rsa.pub. If not, create these public/private keys:</p>
<pre><code>ssh-keygen -t rsa -C "your_email@example.com"</code></pre>
<p>Now to Copy your public key and get ready to paste it into your GitHub account follow the below steps.</p>
<ol type="1">
<li><strong>Update SSH Key in GitHub Account</strong></li>
</ol>
<p>Navigate to your GitHub Account Settings and click on “SSH Keys”. Add a new SSH key with a label (like “Vs Code”) and paste the public key you copied earlier.</p>
<ol type="1">
<li>To verify your setup, type the following in your terminal:</li>
</ol>
<pre><code>ssh -T git@github.com</code></pre>
<p>Hi username! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
<p><em>If you see the above message, congratulations! You’re all set to start working with private repositories in an enterprise setting.</em></p>
</section>
<section id="additional-tips-and-techniques" class="level2">
<h2 class="anchored" data-anchor-id="additional-tips-and-techniques">Additional Tips and Techniques</h2>
</section>
<section id="leverage-githubs-issue-tracker" class="level2">
<h2 class="anchored" data-anchor-id="leverage-githubs-issue-tracker">Leverage GitHub’s Issue Tracker</h2>
<p>GitHub’s issue tracker is a powerful tool for managing tasks, bugs, and feature requests. Each issue provides a platform for discussion, allowing team members to communicate about the task at hand.</p>
</section>
<section id="use-branching-strategically" class="level2">
<h2 class="anchored" data-anchor-id="use-branching-strategically">2. Use Branching Strategically</h2>
<p>Branching is a core feature of git that allows you to work on different features or bugs in isolation. Developing a good branching strategy can help keep your codebase organized and make the development process smoother.</p>
</section>
<section id="take-advantage-of-github-actions" class="level2">
<h2 class="anchored" data-anchor-id="take-advantage-of-github-actions">3. Take Advantage of GitHub Actions</h2>
<p>GitHub Actions is a CI/CD service provided by GitHub. It allows you to automate tasks like building, testing, and deploying your code. This can save you time and help ensure consistent quality in your codebase.</p>
</section>
<section id="protect-sensitive-information-with-.gitignore" class="level2">
<h2 class="anchored" data-anchor-id="protect-sensitive-information-with-.gitignore">4. Protect Sensitive Information with .gitignore</h2>
<p>The .gitignore file allows you to specify files or directories that git should ignore. This is crucial for keeping sensitive information, like API keys or configuration files with passwords, out of your codebase.</p>
</section>
<section id="stay-informed-with-webhooks" class="level2">
<h2 class="anchored" data-anchor-id="stay-informed-with-webhooks">5. Stay Informed with Webhooks</h2>
<p>Webhooks allow you to set up automatic notifications when specific events occur in your repository. This can help keep you informed about the state of your project and respond quickly to changes.</p>
<p><em>By mastering these tools and techniques, you’ll be well-equipped to manage private repositories in an enterprise setting. Whether you’re a seasoned developer or just starting out, GitHub offers a wealth of features to streamline your workflow and enhance collaboration.</em></p>
</section>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>GitHub</category>
  <category>Version Control</category>
  <category>Enterprise</category>
  <category>DevOps</category>
  <guid>https://kunaldas.dev/posts/2023-07-19-mastering-github-private-repos.html</guid>
  <pubDate>Wed, 19 Jul 2023 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:700/1*o_r7JdrqQTcB0kkb3AF1UA.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Creating Azure Web App CI/CD with Terraform and Azure DevOps</title>
  <link>https://kunaldas.dev/posts/2023-07-07-azure-webapp-cicd-terraform.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*hj3ezml_2bs9uDUssU4oLQ.png" class="img-fluid"></p>
<p>Introduction:<br>
In today’s fast-paced development environment, implementing Continuous Integration and Continuous Deployment (CI/CD) is crucial for efficient software delivery. In this tutorial, we will walk through the process of setting up a CI/CD pipeline for an Azure web app using Terraform and Azure DevOps. By following these steps, you can automate the deployment process and ensure high-quality code reaches your production environment.</p>
<p>Prerequisites:<br>
Before we begin, make sure you have the following prerequisites in place:<br>
- An Azure DevOps account<br>
- Access to an Azure subscription<br>
- Basic knowledge of Terraform and Docker</p>
<p>Step 1: Creating Infrastructure with Terraform<br>
To ensure a consistent and repeatable infrastructure setup, we will use Terraform. Terraform allows us to define our infrastructure as code and manage it through version control. Follow these steps to create the necessary infrastructure for your Azure web app:</p>
<p>1. Set up a new Azure DevOps project.<br>
2. Create a new repository within your project and clone it to your local machine.<br>
3. Create a folder structure for your Terraform code, such as “infra/environment1” and “infra/environment2” for two environments.<br>
4. Within each environment folder, create a main.tf file and define the necessary Azure resources, such as resource groups, app services, and databases. Use Terraform modules to ensure a modular and reusable infrastructure setup.<br>
5. Define input variables in a separate variable.tf file to make your infrastructure code dynamic and easily configurable.<br>
6. Initialize Terraform within each environment folder by running the `terraform init` command. This will download the required providers and modules.<br>
7. Create a build pipeline in Azure DevOps to trigger the Terraform deployment. Use the “Terraform CLI” task to execute Terraform commands, passing the appropriate input variables for each environment.</p>
<p>Step 2: CI Steps<br>
In this step, we will set up Continuous Integration (CI) to ensure code quality and generate artifacts for deployment.</p>
<p>1. Configure your source code repository in Azure DevOps to trigger the CI pipeline on code changes.<br>
2. Set up a build pipeline in Azure DevOps with the following steps:<br>
a. Use a task to install the required dependencies for your application, such as Python packages.<br>
b. Run unit tests using your preferred testing framework (e.g., pytest) to ensure code functionality.<br>
c.&nbsp;Use linters (flake8, black) and formatters (isort) to enforce code style consistency.<br>
d.&nbsp;Generate a code coverage report using coverage.py to track the percentage of code covered by tests.<br>
e. Integrate with SonarQube for static code analysis and maintain code quality.<br>
f.&nbsp;Build a Docker image containing your application code and dependencies.<br>
g. Push the Docker image to an Azure Container Registry (ACR) for later use in deployment.</p>
<p>Step 3: CD — Continuous Deployment<br>
Now that we have our infrastructure in place and a reliable CI process, we can proceed to set up Continuous Deployment (CD) to automate the deployment process.</p>
<p>1. Determine the deployment strategy based on your requirements. For example:<br>
— Two environments (dev and prod) can follow a simple deployment flow where the code is deployed to dev first and then promoted to prod after successful testing.<br>
— Three environments (dev, test, and prod) can follow a more complex deployment flow where code moves through each environment sequentially.<br>
2. Create release pipelines in Azure DevOps for each environment, using the appropriate deployment strategy.<br>
3. Configure post-deployment tests specific to each environment to ensure the deployed application is functioning as expected.<br>
4. Add performance testing steps after the deployment to the dev environment to validate system</p>
<p>performance under real-world conditions. Use tools like Apache JMeter or Azure Application Insights to conduct performance tests.</p>
<p>Certainly! Below are the code snippets for each step, following a generic parameterized approach and best practices:</p>
<p>Step 1: Creating Infrastructure with Terraform</p>
<p>1. Set up Azure DevOps pipeline:<br>
— Create a new pipeline in Azure DevOps and select your repository.<br>
— Choose the appropriate trigger for your pipeline, such as a repository branch or pull request.</p>
<p>2. Configure Terraform backend:<br>
— Create an Azure Storage Account to store Terraform state.<br>
— Add the following code to your `main.tf` file within each environment folder:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode tf code-with-copy"><code class="sourceCode terraform"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">terraform</span> {</span>
<span id="cb1-2"> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">backend</span> “azurerm” {</span>
<span id="cb1-3"> storage_account_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> “<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>storage_account_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>”</span>
<span id="cb1-4"> container_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> “<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>container_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>”</span>
<span id="cb1-5"> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> “<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>environment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>.tfstate”</span>
<span id="cb1-6"> }</span>
<span id="cb1-7">}</span></code></pre></div>
<p>3. Define variables:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode tf code-with-copy"><code class="sourceCode terraform"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">variable</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"environment"</span> {</span>
<span id="cb2-2"> type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span></span>
<span id="cb2-3"> description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Environment name"</span></span>
<span id="cb2-4">}</span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">variable</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"resource_group_name"</span> {</span>
<span id="cb2-6"> type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span></span>
<span id="cb2-7"> description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Name of the resource group"</span></span>
<span id="cb2-8">}</span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add more variables as per your infrastructure requirements</span></span></code></pre></div>
<p>— Create a `variables.tf` file within each environment folder to define input variables. Here’s an example:</p>
<p>4. Create infrastructure resources:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode tf code-with-copy"><code class="sourceCode terraform"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">resource</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azurerm_resource_group"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rg"</span> {</span>
<span id="cb3-2"> name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">var</span>.resource_group_name</span>
<span id="cb3-3"> location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"West US"</span></span>
<span id="cb3-4">}</span>
<span id="cb3-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">resource</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azurerm_app_service_plan"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app_service_plan"</span> {</span>
<span id="cb3-6"> name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">${</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">var.environment</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-app-service-plan"</span></span>
<span id="cb3-7"> location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_resource_group.rg.location</span>
<span id="cb3-8"> resource_group_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_resource_group.rg.name</span>
<span id="cb3-9"> kind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Linux"</span></span>
<span id="cb3-10"> reserved <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-11">sku {</span>
<span id="cb3-12"> tier <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Basic"</span></span>
<span id="cb3-13"> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B1"</span></span>
<span id="cb3-14"> }</span>
<span id="cb3-15">}</span>
<span id="cb3-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add more resources as per your infrastructure requiremen</span></span></code></pre></div>
<p>Add the following code to create a resource group and app service plan in the `main.tf` file within each environment folder:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode tf code-with-copy"><code class="sourceCode terraform"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> task: UsePythonVersion@<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-2"> inputs:</span>
<span id="cb4-3"> versionSpec: '<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>x'</span>
<span id="cb4-4"> addToPath: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb4-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> task: TerraformInstaller@<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-6"> inputs:</span>
<span id="cb4-7"> terraformVersion: 'latest'</span>
<span id="cb4-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> task: TerraformCLI@<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-9"> inputs:</span>
<span id="cb4-10"> command: 'init'</span>
<span id="cb4-11"> workingDirectory: 'infra<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>environment1'</span>
<span id="cb4-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> task: TerraformCLI@<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-13"> inputs:</span>
<span id="cb4-14"> command: 'apply'</span>
<span id="cb4-15"> workingDirectory: 'infra<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>environment1'</span>
<span id="cb4-16"> environmentServiceNameAzureRM: '<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>connection_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>'</span>
<span id="cb4-17"> commandOptions: '<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>approve'</span></code></pre></div>
<p>5. Execute Terraform commands in Azure DevOps pipeline:</p>
<p>Add the following steps to your Azure DevOps pipeline YAML file:</p>
<p>Step 2: CI Steps</p>
<p>1. Configure CI pipeline triggers and variables:<br>
— Define your pipeline triggers and variables in the Azure DevOps YAML file, as per your requirements.</p>
<p>2. Set up build steps:<br>
— Use appropriate task names and commands based on your specific needs. Here’s an example:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> UsePythonVersion@0</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">versionSpec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3.x'</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addToPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb5-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PythonScript@0</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scriptSource</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'filePath'</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scriptPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scripts/install_dependencies.py'</span></span>
<span id="cb5-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PythonScript@0</span></span>
<span id="cb5-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scriptSource</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'filePath'</span></span>
<span id="cb5-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scriptPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scripts/run_unit_tests.py'</span></span>
<span id="cb5-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> CmdLine@2</span></span>
<span id="cb5-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb5-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pip install coverage</span></span>
<span id="cb5-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> coverage run - source=src -m pytest</span></span>
<span id="cb5-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> coverage xml -o coverage.xml</span></span>
<span id="cb5-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> SonarQubePrepare@4</span></span>
<span id="cb5-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SonarQube</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;SonarQube_connection_name&gt;'</span></span>
<span id="cb5-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scannerMode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CLI'</span></span>
<span id="cb5-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cliProjectKey</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;project_key&gt;'</span></span>
<span id="cb5-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cliProjectName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;project_name&gt;'</span></span>
<span id="cb5-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cliSources</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'src'</span></span>
<span id="cb5-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> extraProperties</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb5-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sonar.coverage.reportPaths=coverage.x</span></span></code></pre></div>
<p>3. Build and push Docker image:<br>
— Use the appropriate task names and commands based on your specific needs. Here’s an example:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Docker@2</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containerRegistry</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;container_registry_connection_name&gt;'</span></span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repository</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;image_repository_name&gt;'</span></span>
<span id="cb6-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'buildAndPush'</span></span>
<span id="cb6-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Dockerfile</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Dockerfile'</span></span>
<span id="cb6-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Build.BuildId)'</span></span></code></pre></div>
<p>Step 3: CD — Continuous Deployment</p>
<p>1. Determine deployment strategy and set up release pipelines:<br>
— Based on your deployment strategy, define the release pipelines in Azure DevOps with appropriate stages and triggers.</p>
<p>2. Configure post-deployment tests:<br>
— Use the appropriate tasks and scripts to run post-deployment tests. Here’s an example:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PythonScript@0  </span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scriptSource</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘filePath’  </span></span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scriptPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘scripts/post\_deployment\_tests.py’  </span></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arguments</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘-e $(environment)’</span></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PublishTestResults@2  </span></span>
<span id="cb7-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">testResultsFormat</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘JUnit’  </span></span>
<span id="cb7-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">testResultsFiles</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘\*\*/test-results.xml’  </span></span>
<span id="cb7-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">searchFolder</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘$(System.DefaultWorkingDirectory)’  </span></span></code></pre></div>
<p>3. Perform performance testing:<br>
— Use the appropriate tasks and scripts to perform performance testing. Here’s an example using Apache JMeter:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> DownloadFile@1  </span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sourceUrl</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘[https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.4.1.tgz'](https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.4.1.tgz')  </span></span>
<span id="cb8-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">targetPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘$(Pipeline.Workspace)/jmeter/apache-jmeter-5.4.1.tgz’</span></span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ExtractFiles@1  </span></span>
<span id="cb8-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb8-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">archiveFilePatterns</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘$(Pipeline.Workspace)/jmeter/apache-jmeter-5.4.1.tgz’  </span></span>
<span id="cb8-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">destinationFolder</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ‘$(Pipeline.Workspace)/jmeter/’</span></span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> CmdLine@2  </span></span>
<span id="cb8-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb8-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb8-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">$(Pipeline.Workspace)/jmeter/apache-jmeter-5.4.1/bin/jmeter -n -t $(Pipeline.Workspace)/jmeter/performance\_test.jmx -l $(Pipeline.Workspace)/jmeter/results.jtl  </span></span></code></pre></div>
<p>Note: The provided code snippets serve as examples and may require modifications based on your specific application, environment, and tools being used.</p>
<p>Remember to update the connection names, resource names, and specific command arguments according to your project setup and requirements.</p>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Azure</category>
  <category>DevOps</category>
  <category>Terraform</category>
  <category>Web Apps</category>
  <category>CI/CD</category>
  <guid>https://kunaldas.dev/posts/2023-07-07-azure-webapp-cicd-terraform.html</guid>
  <pubDate>Fri, 07 Jul 2023 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:700/1*hj3ezml_2bs9uDUssU4oLQ.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Cost Estimation for Infrastructure: A Complete Guide</title>
  <link>https://kunaldas.dev/posts/2023-03-07-infrastructure-cost-estimation.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<ul>
<li>COST ESTIMATION FOR INFRASTRUCTURE
<ul>
<li>1. Design Goals</li>
<li>1.1. Cost estimation</li>
<li>1.2. Options available</li>
<li>1.3. Available tools</li>
<li>2. Infracost</li>
<li>2.1. Overview</li>
<li>2.2. Advantages</li>
<li>2.3 Limitations</li>
<li>2.4 Use cases</li>
<li>2.5 Impact analysis</li>
<li>3. Workflow</li>
<li>3.1 Basic workflow</li>
<li>3.2 DevOps workflow</li>
<li>3.2.1 Azure DevOps</li>
<li>3.2.2 Jenkins</li>
<li>1. Implementation</li>
<li>4.1 Steps for Azure DevOps</li>
<li>4.1.1 Installing extension</li>
<li>4.1.2 Making the repo ready</li>
<li>4.1.3 Adding Infracost code in pipeline</li>
<li>4.1.1 Additional settings</li>
<li>4.1.2 Creating a Pull Request</li>
<li>4.1.3 Viewing the dashboard</li>
<li>4.1.1 Dashboard use cases</li>
<li>1. Navigation</li>
<li>5.1 PR cost difference</li>
<li>5.1 Detailed Cost estimation</li>
<li>6. Diagram</li>
<li>6.1 New Branch</li>
<li>6.2 Making changes</li>
<li>6.3 Pull Request</li>
<li>6.4 Release</li>
<li>1. Scope for improvement</li>
<li>2. Cost of Implementation</li>
</ul></li>
</ul>
<section id="design-goals" class="level2">
<h2 class="anchored" data-anchor-id="design-goals">1. Design Goals</h2>
</section>
<section id="cost-estimation" class="level2">
<h2 class="anchored" data-anchor-id="cost-estimation">1.1. Cost estimation</h2>
<p>Cost estimation is the process of predicting the cost of a project, product, or service. It involves identifying all the resources that will be needed and determining the associated costs to arrive at a total estimate. Cost estimation is a key part of project management and helps stakeholders understand the financial implications of their decisions. It can also help organizations make informed decisions about whether to pursue a project or service and how to allocate budgets for the best return on investment. There are many factors that can affect the cost of a project, including the complexity of the work, the skills and expertise of the team, and the availability of resources.</p>
</section>
<section id="options-available" class="level2">
<h2 class="anchored" data-anchor-id="options-available">1.2. Options available</h2>
<p>There are several options for cost estimation in the cloud:</p>
<p>Cost calculators: Most cloud providers offer cost calculators that allow you to estimate the cost of various cloud resources based on your usage patterns and requirements. These calculators can help you compare the cost of different options and choose the most cost-effective solution.</p>
<p>Cost optimization tools: Many cloud providers offer tools and services to help organizations optimize their resource usage and costs. These tools can help identify cost drivers, forecast future costs, and recommend optimization strategies.</p>
<p>Pricing plans: Many cloud providers offer a variety of pricing plans that offer different levels of resources and support at different price points. Carefully reviewing and comparing these plans can help you choose the one that best meets your needs and budget.</p>
<p>Cost monitoring and management tools: There are a variety of tools and services available that can help you monitor your cloud resource usage and costs in real-time. These tools can alert you to unexpected cost spikes and help you identify opportunities for cost optimization.</p>
<p>Negotiating with vendors: Some cloud providers may be willing to negotiate pricing or offer discounts for large or long-term commitments. It may be worth negotiating with your provider to see if you can get a better deal on your cloud resources.</p>
<p>Resource optimization: Identifying and eliminating unnecessary or underutilized resources can help reduce your overall cloud costs. This could include retiring or decommissioning old resources, optimizing resource allocation, and consolidating resources where possible.</p>
</section>
<section id="available-tools" class="level2">
<h2 class="anchored" data-anchor-id="available-tools">1.3. Available tools</h2>
<p>There are several tools available for cost estimation:</p>
<p>Cost calculators: Many cloud providers offer cost calculators that allow you to estimate the cost of various cloud resources based on your usage patterns and requirements. These calculators can help you compare the cost of different options and choose the most cost-effective solution. E.g. Total Cost of Ownership (TCO) Calculator in AWS, The Azure Pricing Calculator, Google Cloud Pricing Calculator</p>
<p>Cost monitoring and management tools: There are a variety of tools and services available that can help you monitor your cloud resource usage and costs in real-time. These tools can alert you to unexpected cost spikes and help you identify opportunities for cost optimization.</p>
<p>Project management software: Many project management software platforms offer cost estimation and budgeting tools to help organizations plan and track project costs.</p>
<p>Specialized cost estimation software: There are also specialized cost estimation software tools that are specifically designed for cost estimation. These tools often offer advanced features and capabilities, such as the ability to create detailed cost breakdowns and incorporate risk analysis.</p>
<p>Infracost: Infracost is a tool that helps users optimize their costs when using Terraform for infrastructure management. It provides real-time cost estimates for infrastructure resources and suggests ways to reduce costs through optimization.</p>
<p>Teracost: TeraCost is a cloud cost management and optimization platform that helps organizations optimize their cloud costs by providing visibility into resource usage and costs, identifying opportunities for optimization, and recommending actions to reduce costs. It offers a range of features, including cost forecasting, budget tracking, and resource optimization recommendations, and is designed to work with a variety of cloud providers, including Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform (GCP).</p>
</section>
<section id="infracost" class="level2">
<h2 class="anchored" data-anchor-id="infracost">2. Infracost</h2>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">2.1. Overview</h2>
<p>Infracost is a tool that is specifically designed to optimize costs in Terraform environments. It works by analysing the resources that are being created in a Terraform configuration and providing recommendations for cost optimization. This can include suggestions for using lower cost resource types, resizing resources to a more cost-effective size, or identifying resources that are no longer needed and can be safely deleted. Infracost also provides real-time cost estimates for the resources in a Terraform configuration, which can help teams make more informed decisions about the cost of their infrastructure. Overall, Infracost is a powerful tool that can help teams save money on their infrastructure costs by identifying opportunities for cost optimization and providing actionable recommendations for implementing those optimizations.</p>
</section>
<section id="advantages" class="level2">
<h2 class="anchored" data-anchor-id="advantages">2.2. Advantages</h2>
<p>Infracost is a tool that can be used for cost optimization in Terraform, a popular Infrastructure as Code (IaC) tool. It provides several advantages over other cost optimization tools available for Terraform:</p>
<p>Real-time cost estimation: Infracost provides real-time cost estimates for all the resources in your Terraform code, so you can make informed decisions about your infrastructure costs.</p>
<p>Integration with Terraform: Infracost integrates seamlessly with Terraform, so you can see the cost estimates for your infrastructure as you write your code. This helps you avoid costly mistakes and optimize your infrastructure costs from the start.</p>
<p>Custom pricing: Infracost allows you to set custom pricing for your resources, so you can better reflect your organization’s negotiated rates or your unique usage patterns.</p>
<p>Resource filtering: Infracost allows you to filter resources by tag, type, and name, making it easier to focus on specific resources and optimize their costs.</p>
<p>Resource grouping: Infracost groups similar resources together, making it easier to compare costs and identify opportunities for optimization.</p>
<p>Easy to use: Infracost is easy to use and requires minimal setup, so you can start optimizing your infrastructure costs quickly and easily.</p>
<p>Overall, Infracost provides a comprehensive and user-friendly solution for cost optimization in Terraform, making it an excellent choice for organizations looking to optimize their infrastructure costs.</p>
</section>
<section id="limitations" class="level2">
<h2 class="anchored" data-anchor-id="limitations">2.3 Limitations</h2>
<p>Infracost is a useful tool for gaining visibility into the cost of your infrastructure and optimizing your spend on cloud resources. However, it does have some limitations to consider:</p>
<p>Limited to supported cloud providers: Infracost currently supports only a limited number of cloud providers, including AWS, Azure, and Google Cloud. If you are using a different cloud provider or a combination of multiple providers, Infracost may not be able to provide cost estimates for your infrastructure.</p>
<p>Dependent on accurate resource pricing: Infracost relies on accurate resource pricing information from the supported cloud providers. If the pricing information is incorrect or out of date, Infracost cost estimates may not be accurate.</p>
<p>Limited to resources supported by the cloud providers: Infracost can only provide cost estimates for resources that are supported by the cloud providers it integrates with. If you are using custom resources or resources from third-party providers, Infracost may not be able to provide cost estimates for them.</p>
<p>Requires manual integration with infrastructure as code: While Infracost integrates with popular infrastructure as code tools such as Terraform and CloudFormation, it requires manual integration. This means you will need to set up Infracost and configure it to work with your infrastructure as code tools, which can be time-consuming and require some technical expertise.</p>
<p>Limited to infrastructure costs: Infracost only provides estimates for the cost of your infrastructure resources, such as compute instances and storage. It does not include other costs such as data transfer fees or licensing costs for third-party software.</p>
<p>Limited to current infrastructure: Infracost only provides cost estimates for your current infrastructure. It does not allow you to compare the cost of different infrastructure configurations or predict the cost of future infrastructure changes.</p>
<p>Overall, while Infracost is a useful tool for gaining visibility into the cost of your infrastructure and optimizing your spend on cloud resources, it is limited in its scope and may not be suitable for all organizations or infrastructure configurations.</p>
</section>
<section id="use-cases" class="level2">
<h2 class="anchored" data-anchor-id="use-cases">2.4 Use cases</h2>
<p>Some possible use cases for Infracost include:</p>
<p>Identifying and reducing over-provisioned resources: Infracost can help you identify resources that are over-provisioned, which means they have more capacity than is necessary to meet your workload demands. By reducing the capacity of these resources, you can save on your cloud costs.</p>
<p>Optimizing resource usage: Infracost can help you optimize resource usage by identifying underutilized resources and suggesting ways to improve their utilization. For example, if you have a virtual machine that is only running at 20% capacity, Infracost may suggest moving workloads to that machine to better utilize its capacity.</p>
<p>Estimating costs for infrastructure changes: Infracost can be used to estimate the costs of making changes to your infrastructure, such as adding or removing resources. This can help you plan for changes and ensure that they are cost-effective.</p>
<p>Analysing cloud cost trends: Infracost can provide detailed cost breakdowns and graphs that allow you to understand your cloud costs over time and identify trends that may impact your budget. This can help you plan and make decisions to optimize your costs.</p>
<p>Auditing and compliance: Infracost can be used to audit your infrastructure and ensure that it complies with company policies or regulatory requirements. It can also help you identify resources that may be overpriced or misconfigured, allowing you to take corrective action.</p>
</section>
<section id="impact-analysis" class="level2">
<h2 class="anchored" data-anchor-id="impact-analysis">2.5 Impact analysis</h2>
<p>Infracost is a tool that allows users to perform cost analysis on their infrastructure-as-code (IaC) resources. This means that users can see the estimated cost of their resources before they are deployed, allowing them to make informed decisions about their infrastructure and optimize for cost. One key use case for Infracost is in the development phase, where users can use it to identify and address potential cost issues before they become a problem. It can also be used in the operations phase to monitor the ongoing cost of infrastructure and identify opportunities for optimization. By providing visibility into the cost of infrastructure, Infracost can help organizations make informed decisions about how to allocate their resources and stay within budget. Overall, the use of Infracost can have a significant impact on the cost efficiency of an organization’s infrastructure, helping to reduce waste and ensure that resources are being used effectively.</p>
</section>
<section id="workflow" class="level2">
<h2 class="anchored" data-anchor-id="workflow">3. Workflow</h2>
</section>
<section id="basic-workflow" class="level2">
<h2 class="anchored" data-anchor-id="basic-workflow">3.1 Basic workflow</h2>
<p>The workflow of infracost involves the following steps:</p>
<p>Install the infracost CLI tool: Infracost can be installed as a standalone CLI tool or as a Terraform plugin. To install the CLI tool, you can use the following command:</p>
<p>curl -sfL <a href="https://raw.githubusercontent.com/infracost/infracost/stable/scripts/install.sh">https://raw.githubusercontent.com/infracost/infracost/stable/scripts/install.sh</a> | sh</p>
<p>Initialize infracost: Once you have installed the infracost CLI tool, you can initialize it by running the following command in your Terraform directory:</p>
<p>infracost init</p>
<p>This will create a default configuration file (infracost.yml) in your Terraform directory, which you can customize as per your needs.</p>
<p>Add infracost to your Terraform workflow: You can add infracost to your Terraform workflow by using the infracost command before or after running terraform plan or terraform apply. For example, you can run the following command to generate a cost estimate before applying your changes:</p>
<p>infracost plan</p>
<p>Alternatively, you can run the following command to generate a cost estimate after applying your changes:</p>
<p>infracost apply</p>
<p>Review the cost estimate: Infracost will generate a cost estimate in the form of a table, which will show you the estimated cost of each resource in your Terraform configuration. You can review the cost estimate and make any necessary changes to your configuration to optimize costs.</p>
<p>Repeat the process: You can repeat the process of running infracost before or after applying your changes as many times as you like, until you are satisfied with the cost estimate.</p>
<p>Use infracost with version control: You can also use infracost with version control systems like Git to track changes to your cost estimates over time. This can be useful for comparing the costs of different versions of your Terraform configuration and for identifying cost-saving opportunities.</p>
<p>Use infracost with CI/CD: You can also integrate infracost with your CI/CD pipeline to automate the process of generating and reviewing cost estimates. This can be especially useful if you have a large number of Terraform configurations that need to be regularly reviewed for cost optimization.</p>
</section>
<section id="devops-workflow" class="level2">
<h2 class="anchored" data-anchor-id="devops-workflow">3.2 DevOps workflow</h2>
</section>
<section id="azure-devops" class="level2">
<h2 class="anchored" data-anchor-id="azure-devops">3.2.1 Azure DevOps</h2>
<p>The workflow for using infracost with Azure DevOps involves integrating infracost into your Azure DevOps pipeline. This can be done by adding the infracost task to your pipeline and configuring it to run at the appropriate stage.</p>
<p>To begin, you will need to install the infracost extension from the Azure DevOps marketplace. Next, you will need to create a pipeline and add the infracost task to it. In the task configuration, you will need to specify the path to your Terraform configuration files, as well as any additional arguments that you want to pass to infracost.</p>
<p>Once the task is configured, you can run your pipeline as usual. As part of the pipeline execution, infracost will analyze your Terraform configuration and provide cost estimates for the resources that are being created. This information will be displayed in the pipeline output, allowing you to easily see the cost implications of your changes.</p>
<p>In addition to running infracost as part of your pipeline, you can also use it to create pull request checks. This allows you to enforce cost limits on pull requests, ensuring that any changes that are made do not exceed a certain budget.</p>
<p>Overall, integrating infracost into your Azure DevOps workflow can help you better understand the cost implications of your infrastructure changes, and ensure that you are making cost-effective decisions as you develop and deploy your applications.</p>
</section>
<section id="jenkins" class="level2">
<h2 class="anchored" data-anchor-id="jenkins">3.2.2 Jenkins</h2>
<p>The workflow for using infracost with Jenkins typically involves the following steps:</p>
<p>Install the infracost plugin in Jenkins. This can be done through the Jenkins Plugin Manager.</p>
<p>Configure the infracost plugin in the Jenkins Global Configuration page. This includes specifying the AWS access keys, the Terraform version, and the desired frequency for cost scans.</p>
<p>In your Jenkins job, add a build step to run infracost. This can be done by selecting “Infracost” from the Add Build Step dropdown menu.</p>
<p>In the infracost build step, specify the path to your Terraform configuration files and any additional command line options.</p>
<p>Run the Jenkins job to trigger the infracost scan. The infracost plugin will scan your Terraform configuration files and generate a report on the estimated cost of your infrastructure.</p>
<p>View the infracost report in the Jenkins build output. The report will contain a breakdown of the cost estimates for each resource, as well as a total estimate for the entire infrastructure.</p>
<p>Optionally, you can configure infracost to fail the Jenkins build if the estimated cost exceeds a certain threshold. This can help prevent overspending on infrastructure costs.</p>
<p>By integrating infracost into your Jenkins workflow, you can easily track the cost of your infrastructure and make informed decisions about resource allocation and optimization.</p>
<p>Apart from all Infracost supports multiple CI/CD platforms shown below,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*YE7MA6bv8msUvs771jnRAA.png" class="img-fluid"></p>
</section>
<section id="implementation" class="level2">
<h2 class="anchored" data-anchor-id="implementation">1. Implementation</h2>
</section>
<section id="steps-for-azure-devops" class="level2">
<h2 class="anchored" data-anchor-id="steps-for-azure-devops">4.1 Steps for Azure DevOps</h2>
</section>
<section id="installing-extension" class="level2">
<h2 class="anchored" data-anchor-id="installing-extension">4.1.1 Installing extension</h2>
<p>Go to your organization setting page in Azure Devops</p>
<p><a href="https://dev.azure.com/%7Borg_name%7D/_settings/extensions?tab=installed">https://dev.azure.com/{org_name}/_settings/extensions?tab=installed</a></p>
<p>Go to the marketplace link and install Infracost extension</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=Infracost.infracost-tasks">https://marketplace.visualstudio.com/items?itemName=Infracost.infracost-tasks</a></p>
<p>Go to the Infracost Dashboard URL and login with your account</p>
<p><a href="https://dashboard.infracost.io/">https://dashboard.infracost.io/</a></p>
</section>
<section id="making-the-repo-ready" class="level2">
<h2 class="anchored" data-anchor-id="making-the-repo-ready">4.1.2 Making the repo ready</h2>
<p>Upon login go to organization settings and copy the API and keep it in safe place for later use</p>
<p>If you do not already have a Terraform file, create one or coy from my repo,</p>
<p><a href="https://github.com/Kunaldastiger/Terraform-Sample/blob/main/Virtual-machines/MicrosoftWindowsServer.tf">https://github.com/Kunaldastiger/Terraform-Sample/blob/main/Virtual-machines/MicrosoftWindowsServer.tf</a></p>
<p>Apart from this you must have a pipeline yaml file or a pipeline created in classic fashion,<br>
code for the same can be found here,</p>
<p><a href="https://github.com/Kunaldastiger/Terraform-Sample/blob/main/azure-deployment.yaml">https://github.com/Kunaldastiger/Terraform-Sample/blob/main/azure-deployment.yaml</a></p>
<p>Now run the pipeline and check if resource is getting created or not, needless to say, you also need to have a service connection to azure.</p>
<p>If you do not have a service connection kindly follow below steps,</p>
<p>Sign in to Azure DevOps and navigate to the Project Settings page.</p>
<p>In the left menu, under “Pipelines,” select “Service Connections.”</p>
<p>Click the “New Service Connection” button.</p>
<p>In the “Add new service connection” dialog, select “Azure Resource Manager” from the “Type” dropdown menu.</p>
<p>Give the service connection a name and click “Next.”</p>
<p>In the “Authorize Azure Resource Manager” dialog, select the Azure subscription you want to use and click “Authorize.”</p>
<p>After the authorization process is complete, click “Finish” to create the service connection.</p>
<p>You can now use this service connection in your Azure DevOps pipelines to access resources in your Azure subscription. For example, you could use it to deploy an application to an Azure web app, create or delete Azure resources, or run Azure Resource Manager templates.</p>
</section>
<section id="adding-infracost-code-in-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="adding-infracost-code-in-pipeline">4.1.3 Adding Infracost code in pipeline</h2>
<p>Create a new pipeline, selecting</p>
<ol type="1">
<li><strong>Azure Repos Git</strong> when prompted in the <strong>“Connect”</strong> stage</li>
<li>Select the appropriate repo you wish to integrate Infracost with in the <strong>“Select”</strong> stage</li>
<li>Choose “Starter Pipeline” in the <strong>“Configure”</strong> stage</li>
<li>Replace the Starter Pipeline yaml with the following:</li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The Azure Pipelines docs (https://docs.microsoft.com/en-us/azure/devops/pipelines/process/tasks) describe other options.</span></span>
<span id="cb1-2"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # Running on pull requests to `master` (or your default branch) is a good default.</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">7. pr</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">8.   - main</span></span>
<span id="cb1-5"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">10. variables</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">11.   - name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> TF_ROOT</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">12.     value</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Terraform</span></span>
<span id="cb1-9"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">13.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   # If you use private modules you'll need this env variable to use </span></span>
<span id="cb1-10"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">14.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   # the same ssh-agent socket value across all steps. </span></span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">15.   - name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> SSH_AUTH_SOCK</span></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">16.     value</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /tmp/ssh_agent.sock</span></span>
<span id="cb1-13"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">17.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   # This instructs the CLI to send cost estimates to Infracost Cloud. Our SaaS product</span></span>
<span id="cb1-14"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">18.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   #   complements the open source CLI by giving teams advanced visibility and controls.</span></span>
<span id="cb1-15"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">19.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   #   The cost estimates are transmitted in JSON format and do not contain any cloud </span></span>
<span id="cb1-16"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">20.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   #   credentials or secrets (see https://infracost.io/docs/faq/ for more information).</span></span>
<span id="cb1-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">21.   - name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> INFRACOST_ENABLE_CLOUD</span></span>
<span id="cb1-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">22.     value</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb1-19"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">23.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   # If you're using Terraform Cloud/Enterprise and have variables stored on there</span></span>
<span id="cb1-20"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">24.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   # you can specify the following to automatically retrieve the variables:</span></span>
<span id="cb1-21"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">25.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   # env:</span></span>
<span id="cb1-22"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">26.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   # - name: INFRACOST_TERRAFORM_CLOUD_TOKEN</span></span>
<span id="cb1-23"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">27.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   #   value: $(tfcToken)</span></span>
<span id="cb1-24"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">28.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   # - name: INFRACOST_TERRAFORM_CLOUD_HOST</span></span>
<span id="cb1-25"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">29.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   #   value: app.terraform.io # Change this if you're using Terraform Enterprise</span></span>
<span id="cb1-26"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">30.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">31. jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">32.   - job</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> infracost</span></span>
<span id="cb1-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">33.     displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Run Infracost</span></span>
<span id="cb1-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">34.     pool</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">35.       vmImage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span></span>
<span id="cb1-32"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">36.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">37.     steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-34"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">38.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # If you use private modules, add a base 64 encoded secret</span></span>
<span id="cb1-35"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">39.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # called gitSshKeyBase64 with your private key, so Infracost can access</span></span>
<span id="cb1-36"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">40.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # private repositories (similar to how Terraform/Terragrunt does).</span></span>
<span id="cb1-37"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">41.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # - bash: |</span></span>
<span id="cb1-38"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">42.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #     ssh-agent -a $(SSH_AUTH_SOCK)</span></span>
<span id="cb1-39"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">43.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #     mkdir -p ~/.ssh</span></span>
<span id="cb1-40"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">44.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #     echo "$(echo $GIT_SSH_KEY_BASE_64 | base64 -d)" | tr -d '\r' | ssh-add -</span></span>
<span id="cb1-41"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">45.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #     # Update this to github.com, gitlab.com, bitbucket.org, ssh.dev.azure.com or your source control server's domain</span></span>
<span id="cb1-42"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">46.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #     ssh-keyscan ssh.dev.azure.com &gt;&gt; ~/.ssh/known_hosts</span></span>
<span id="cb1-43"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">47.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #   displayName: Add GIT_SSH_KEY</span></span>
<span id="cb1-44"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">48.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #   env:</span></span>
<span id="cb1-45"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">49.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #     GIT_SSH_KEY_BASE_64: $(gitSshKeyBase64)</span></span>
<span id="cb1-46"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">50.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-47"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">51.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # Install the Infracost CLI, see https://github.com/infracost/infracost-azure-devops#infracostsetup</span></span>
<span id="cb1-48"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">52.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # for other inputs such as version, and pricingApiEndpoint (for self-hosted users).</span></span>
<span id="cb1-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">53.       - task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> InfracostSetup@1</span></span>
<span id="cb1-50"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">54.         displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Setup Infracost</span></span>
<span id="cb1-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">55.         inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">56.           apiKey</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(infracostApiKey)</span></span>
<span id="cb1-53"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">57.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-54"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">58.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # Clone the base branch of the pull request (e.g. main/master) into a temp directory.</span></span>
<span id="cb1-55"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">59.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # - bash: |</span></span>
<span id="cb1-56"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">60.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #     branch=$(System.PullRequest.TargetBranch)</span></span>
<span id="cb1-57"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">61.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #     branch=${branch#refs/heads/}</span></span>
<span id="cb1-58"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">62.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #     # Try adding the following to git clone if you're having issues cloning a private repo: --config http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)"</span></span>
<span id="cb1-59"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">63.       - task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Bash@3</span></span>
<span id="cb1-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">64.         inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-61"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">65.               targetType</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inline'</span></span>
<span id="cb1-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">66.               script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git clone @dev.azure.com/{orgname}/{project_name}/{repo_path}"&gt;https://$(PATToken)@dev.azure.com/{orgname}/{project_name}/{repo_path} --branch=main  /tmp/base'</span></span>
<span id="cb1-63"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">67.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #   displayName: Checkout base branch</span></span>
<span id="cb1-64"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">68.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-65"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">69.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # Generate an Infracost cost estimate baseline from the comparison branch, so that Infracost can compare the cost difference.</span></span>
<span id="cb1-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">70.       - bash</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb1-67"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">71.           infracost breakdown --path=$(TF_ROOT) \</span></span>
<span id="cb1-68"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">72.                               --format=json \</span></span>
<span id="cb1-69"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">73.                               --out-file=/tmp/infracost-base.json</span></span>
<span id="cb1-70"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">74.         displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Generate Infracost cost estimate baseline</span></span>
<span id="cb1-71"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">75.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-72"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">76.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # Generate an Infracost diff and save it to a JSON file.</span></span>
<span id="cb1-73"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">77.       - bash</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb1-74"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">78.           infracost diff --path=$(TF_ROOT) \</span></span>
<span id="cb1-75"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">79.                          --format=json \</span></span>
<span id="cb1-76"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">80.                          --compare-to=/tmp/infracost-base.json \</span></span>
<span id="cb1-77"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">81.                          --out-file=/tmp/infracost.json</span></span>
<span id="cb1-78"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">82.         displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Generate Infracost diff</span></span>
<span id="cb1-79"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">83.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-80"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">84.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # Posts a comment to the PR using the 'update' behavior.</span></span>
<span id="cb1-81"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">85.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # This creates a single comment and updates it. The "quietest" option.</span></span>
<span id="cb1-82"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">86.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # The other valid behaviors are:</span></span>
<span id="cb1-83"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">87.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #   delete-and-new - Delete previous comments and create a new one.</span></span>
<span id="cb1-84"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">88.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       #   new - Create a new cost estimate comment on every push.</span></span>
<span id="cb1-85"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">89.</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # See https://www.infracost.io/docs/features/cli_commands/#comment-on-pull-requests for other options.</span></span>
<span id="cb1-86"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">90.       - bash</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb1-87"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">91.            infracost comment azure-repos --path=/tmp/infracost.json \</span></span>
<span id="cb1-88"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">92.                                          --azure-access-token=$(System.AccessToken) \</span></span>
<span id="cb1-89"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">93.                                          --pull-request=$(System.PullRequest.PullRequestId) \</span></span>
<span id="cb1-90"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">94.                                          --repo-url= '@dev.azure.com/kunaldas0966/test_project/_git/terracost-sample'"&gt;https://$(PATToken)@dev.azure.com/kunaldas0966/test_project/_git/terracost-sample' \</span></span>
<span id="cb1-91"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">95.                                          --behavior=update</span></span>
<span id="cb1-92"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">96.         displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Post Infracost comment</span></span></code></pre></div>
<p>In the pipeline, variables add the below variables</p>
<p><img src="https://miro.medium.com/v2/resize:fit:643/1*N40nSKnlEH0lfQDLAvpEPQ.png" class="img-fluid"></p>
<p>To do the same,<br>
Sign into Azure DevOps and navigate to your project.</p>
<p>In the left menu, under “Pipelines,” select “Pipelines.”</p>
<p>Select the pipeline you want to add a variable to and click the “Edit” button.</p>
<p>In the pipeline editor, click the “Variables” tab.</p>
<p>Click the “Add” button to add a new variable.</p>
<p>In the “Add variable” dialog, enter a name and value for the variable. You can also specify whether the variable is secret and should be masked in the log output.</p>
<p>Click “Save” to add the variable to the pipeline.</p>
<p>You can now use the pipeline variable in your pipeline tasks by using the syntax $(variableName). You can also use pipeline variables to control the flow of your pipeline, by using conditions or branching.</p>
</section>
<section id="additional-settings" class="level2">
<h2 class="anchored" data-anchor-id="additional-settings">4.1.1 Additional settings</h2>
<p>Enable pull request build triggers. Without this, Azure Pipelines do not trigger builds with the pull request ID, thus comments cannot be posted by the integration.</p>
<p>From your Azure DevOps organization, click on your project &gt; Project Settings &gt; Repositories</p>
<p>Select the repository that your created the pipeline for in step 1</p>
<p>Select the Policies tab and under the Branch Policies select on your default branch (master or main)</p>
<p>Scroll to Build Validation and click + sign to add one if you don’t have one already</p>
<p>Set your ‘Build pipeline’ to the pipeline you created in step 1, leave ‘Path filter’ blank, set ‘Trigger’ to Automatic, and ‘Policy requirement’ to Optional (you can also use Required but we don’t recommend it).</p>
<p>Enable Azure Pipelines to post pull request comments</p>
<p>From your Azure DevOps organization, click on your project &gt; Project Settings &gt; Repositories &gt; your repository.</p>
<p>Click on the Securities tab, scroll down to Users and click on the ‘[project name] Build Service ([org name])’ user, and set the ‘Contribute to pull requests’ to Allow.</p>
<p>If you are using github instead of azure repo the code for the same is available at below link,</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=Infracost.infracost-tasks&amp;targetId=10277548-b72b-4200-99f2-565bf446c70d&amp;utm_source=vstsproduct&amp;utm_medium=ExtHubManageList">https://marketplace.visualstudio.com/items?itemName=Infracost.infracost-tasks&amp;targetId=10277548-b72b-4200-99f2-565bf446c70d&amp;utm_source=vstsproduct&amp;utm_medium=ExtHubManageList</a></p>
</section>
<section id="creating-a-pull-request" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-pull-request">4.1.2 Creating a Pull Request</h2>
<p>Not you have to create a new branch and make some changes in the new branch to that the resource cost may increase or decrease,<br>
To create a new branch and do a pull request in an Azure Repo, you’ll need to follow these steps:</p>
<p>Navigate to the Azure Repos page in Azure DevOps.</p>
<p>Select the repository that you want to create the branch and pull request in.</p>
<p>On the repository page, click on the “Branches” tab.</p>
<p>Click on the “New branch” button.</p>
<p>Enter a name for the new branch and select the branch that you want to base the new branch on.</p>
<p>Click on the “Create branch” button to create the new branch.</p>
<p>Once the new branch has been created, you can switch to it and make the necessary changes. When you’re ready to submit the changes for review, you can follow the steps above to create a pull request.</p>
<p>Navigate to the Azure Repos page in Azure DevOps.</p>
<p>Select the repository that you want to create the pull request in.</p>
<p>On the repository page, click on the “Pull requests” tab.</p>
<p>Click on the “New pull request” button.</p>
<p>Select the source and target branches for the pull request. The source branch is the branch that contains the changes that you want to merge, and the target branch is the branch that you want to merge the changes into.</p>
<p>Review the changes that will be included in the pull request. You can use the “Files changed” tab to view the individual changes and make any necessary adjustments.</p>
<p>Add a title and optional description for the pull request.</p>
<p>If you want to request a review from specific people or teams, you can use the “Reviewers” field to add them.</p>
<p>When you’re ready to create the pull request, click on the “Create pull request” button.</p>
<p>After this you should see your pipeline starts running as the trigger is set as main pull request!</p>
</section>
<section id="viewing-the-dashboard" class="level2">
<h2 class="anchored" data-anchor-id="viewing-the-dashboard">4.1.3 Viewing the dashboard</h2>
<p>Log in to <a href="https://dashboard.infracost.io/">https://dashboard.infracost.io/</a> and select the repo ,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*lr335paLDs5BXxIMUFiJdw.png" class="img-fluid"></p>
<p>You should be able to see similar kind of dashboard, there are many things to go through in the GUI,</p>
<p>The Infracost dashboard is a web-based tool that provides an overview of the cost of your infrastructure resources. It displays information about the total cost of your resources, as well as detailed information about each resource and its cost.</p>
<p>The dashboard is divided into several sections:</p>
<p>Overview: This section provides a summary of your infrastructure costs, including the total cost of your resources and the breakdown of costs by resource type.</p>
<p>Resources: This section lists all of the infrastructure resources in your project, along with their cost, resource type, and resource ID. You can use this section to view the cost of individual resources and identify opportunities for cost optimization.</p>
<p>Billing: This section provides information about your billing history, including the total amount billed, the billing period, and the date of the most recent bill.</p>
<p>Costs by resource type: This section displays a breakdown of your costs by resource type, showing you which types of resources are the most expensive.</p>
<p>Costs by tag: This section displays a breakdown of your costs by tag, allowing you to see which resources are associated with a particular tag and their costs.</p>
<p>Cost trends: This section displays a chart showing the trend in your infrastructure costs over time. You can use this chart to identify trends in your costs and identify opportunities for cost optimization.</p>
</section>
<section id="dashboard-use-cases" class="level2">
<h2 class="anchored" data-anchor-id="dashboard-use-cases">4.1.1 Dashboard use cases</h2>
<p>There are several things that you can do from the Infracost dashboard to manage and optimize the cost of your infrastructure resources:</p>
<p>View a summary of your infrastructure costs: The dashboard provides an overview of your total infrastructure costs, as well as a breakdown of costs by resource type. This can help you understand the overall cost of your infrastructure and identify areas where you might be able to save money.</p>
<p>View detailed information about individual resources: The dashboard provides detailed information about each infrastructure resource, including its cost, resource type, and resource ID. This can help you understand the cost of individual resources and identify opportunities for cost optimization.</p>
<p>View your billing history: The dashboard includes a section on billing that provides information about your total amount billed, the billing period, and the date of the most recent bill. This can help you understand your billing history and track changes in your costs over time.</p>
<p>View costs by resource type and tag: The dashboard provides a breakdown of costs by resource type and tag, which can help you understand which types of resources the most expensive and which resources are are associated with a particular tag.</p>
<p>View cost trends over time: The dashboard includes a chart showing the trend in your infrastructure costs over time. This can help you identify trends in your costs and identify opportunities for cost optimization.</p>
</section>
<section id="navigation" class="level2">
<h2 class="anchored" data-anchor-id="navigation">1. Navigation</h2>
</section>
<section id="pr-cost-difference" class="level2">
<h2 class="anchored" data-anchor-id="pr-cost-difference">5.1 PR cost difference</h2>
<p>Click on the repo and select the repository you are using in the Infracost dashboard,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*PoTqM2wA9xHgEBiPttzqSw.png" class="img-fluid"></p>
<p>Here, you will see all the price difference before you choose to merge the PR.</p>
</section>
<section id="detailed-cost-estimation" class="level2">
<h2 class="anchored" data-anchor-id="detailed-cost-estimation">5.1 Detailed Cost estimation</h2>
<p>Click to see the full cost estimate and it will open the detailed cost estimates in a separate</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*mneFcpcqfz2on7hPsXwpjQ.png" class="img-fluid"></p>
<p>Here in the diff output tab you can see the difference that will occur if you merge the changes,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*70chuQkrt0JR9XwO85e3BQ.png" class="img-fluid"></p>
<p>Click on the Table output to see all the involved cost,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*GEAfTOXK8nr2XZyWioBklg.png" class="img-fluid"></p>
<p>Under each resource you can see detailed cost report of the individual items,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*BUm6Xnn_x2r0dWh7dSvisA.png" class="img-fluid"></p>
<p>You may also choose to export the data in CSV format by clicking on export data.</p>
</section>
<section id="diagram" class="level2">
<h2 class="anchored" data-anchor-id="diagram">6. Diagram</h2>
<p>I have prepared a simple flow diagram that is very easy to understand, let’s go through each block one by one.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*CjGEdkxtCmDqcuMmCvS8PA.png" class="img-fluid"></p>
</section>
<section id="new-branch" class="level2">
<h2 class="anchored" data-anchor-id="new-branch">6.1 New Branch</h2>
<p>Here basically we are creating a new branch so that, we can start making changes to existing infrastructure, creating a new branch in a version control system like Azure Repos allows you to work on a copy of your codebase and make changes to it without affecting the main branch (often called the “master” branch). This is useful when you want to make changes to your infrastructure, as it allows you to test and validate your changes before merging them into the main branch.</p>
<p>By creating a new branch, you can make changes to your infrastructure in a safe and isolated environment, without worrying about breaking anything in the main branch. This can help you avoid disruptions to your infrastructure and ensure that any changes you make are well-tested and ready for production.</p>
</section>
<section id="making-changes" class="level2">
<h2 class="anchored" data-anchor-id="making-changes">6.2 Making changes</h2>
<p>When you make changes to your codebase in a feature branch, you are working on a copy of the code that is separate from the main branch (often called the “master” branch). This allows you to make changes and test them without affecting the main branch, which can be useful when you are developing new features or making changes to your infrastructure. So you can just pull the code to your IDE like VS code and start making changes in the TF file, once done you can then push it to the dev/feature branch,</p>
</section>
<section id="pull-request" class="level2">
<h2 class="anchored" data-anchor-id="pull-request">6.3 Pull Request</h2>
<p>Create a pull request: When you’re ready to merge your changes into the main branch, you’ll need to create a pull request. This will allow other members of your team to review your changes and decide whether to merge them into the main branch.</p>
<p>Here once you create a pull request the pipeline will start running,</p>
<p>Once pipeline run finishes you can go to Infracost dashboard and view the cost estimation.</p>
</section>
<section id="release" class="level2">
<h2 class="anchored" data-anchor-id="release">6.4 Release</h2>
<p>If satisfied with the cost estimation then merge the changes and as soon as it gets merged to the main branch, it will trigger the terraform pipeline which will then create the desired resources.</p>
</section>
<section id="scope-for-improvement" class="level2">
<h2 class="anchored" data-anchor-id="scope-for-improvement">1. Scope for improvement</h2>
<p>The pipeline can be further automated to pass the Pull request automatically if certain conditions are met.<br>
suppose if cost increases/decreases &lt; 5% then the pipeline should read that and merge the code,<br>
It needs further research and collaboration.</p>
</section>
<section id="cost-of-implementation" class="level2">
<h2 class="anchored" data-anchor-id="cost-of-implementation">2. Cost of Implementation</h2>
<p>Infracost is an open-source tool though it has some pricing options, the free version provides plenty of options to get the job done, the features offered in the free versions are:</p>
<p>Open source</p>
<p>Get cost breakdowns and diffs</p>
<p>CI/CD integrations (GitHub, GitLab, Bitbucket, Azure DevOps…)</p>
<p>Works with Terraform Cloud &amp; Terragrunt</p>
<p>Use our hosted Cloud Pricing API or self-host</p>
<p>Community supported</p>
<p>For an annual fee of $30 some additionally functionalities can be availed,</p>
<p>In addition to Infracost Community:</p>
<p>Visibility across all changes, see pull requests that increase/decrease costs the most</p>
<p>Guardrails with custom messages/notifications/actions</p>
<p>Policies in pull requests (e.g.&nbsp;gp2 to gp3)</p>
<p>Custom price books and discounts</p>
<p>Jira integration</p>
<p>Custom reports</p>
<p>GitHub App integration with pull request status/metadata</p>
<p>Team management</p>
<p>SSO</p>
</section>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Infrastructure</category>
  <category>Cost Management</category>
  <category>DevOps</category>
  <category>Cloud</category>
  <guid>https://kunaldas.dev/posts/2023-03-07-infrastructure-cost-estimation.html</guid>
  <pubDate>Tue, 07 Mar 2023 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:700/1*CjGEdkxtCmDqcuMmCvS8PA.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Streamlining Synapse CI/CD &amp; Dedicated SQL pool with Azure DevOps</title>
  <link>https://kunaldas.dev/posts/2023-02-23-streamlining-synapse-cicd.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<ul>
<li>Streamlining Synapse CI/CD &amp; Dedicated SQL pool with Azure DevOps: Best Practices and Implementation Tips
<ul>
<li>What is Synapse Analytics?</li>
<li>what is the need for CI-CD for synapse analytics?</li>
<li>What are the different components of Synapse Analytics?</li>
<li>why it is hard to implement ci cd for synapse analytics?</li>
<li>Let’s understand the CI -CD Approach:</li>
<li>Continuous Integration :</li>
<li>let’s look at the high-level workflow of the things we have done so far!</li>
<li>CI-CD for dedicated SQL pool</li>
<li>First, let’s setup the repository for the SQL pool</li>
<li><strong>IMPLEMENTING THE RELEASE PIPELINE TO DEPLOY THE ABOVE-GENERATED BUILD ARTIFACTS</strong></li>
</ul></li>
</ul>
<p>It is crucial to have a simplified and effective process for developing, testing, and implementing solutions as data and analytics become more and more important for enterprises. Microsoft’s cloud-based analytics solution, Synapse Analytics, has strong data warehousing, machine learning, and integration capabilities. However, without the proper equipment and knowledge, building a Continuous Integration and Continuous Deployment (CI/CD) procedure for Synapse can be difficult. Teams can automate the deployment of Synapse solutions thanks to Azure DevOps’ complete collection of CI/CD pipeline capabilities. Using Azure DevOps to streamline Synapse CI/CD, we will examine best practices and implementation advice in this article.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/0*CoufxbMwN_U4G5CV.png" class="img-fluid"></p>
<section id="what-is-synapse-analytics" class="level2">
<h2 class="anchored" data-anchor-id="what-is-synapse-analytics">What is Synapse Analytics?</h2>
<p>Microsoft created the cloud-based analytics solution known as Synapse Analytics. It is a platform that gives businesses the ability to ingest, prepare, manage, and provide data for their urgent needs in business intelligence and machine learning. Data integration, big data, data warehousing, and AI are just a few of the tools and services that Synapse Analytics integrates into a single workspace to provide a seamless end-to-end data analytics experience. The platform provides cutting-edge functions like code-free or code-first data integration, big data processing based on SQL and Spark, machine learning, and Power BI reporting capabilities. Synapse Analytics offers a single, end-to-end development and deployment experience while allowing customers to work with their current tools, languages, and frameworks.</p>
</section>
<section id="what-is-the-need-for-ci-cd-for-synapse-analytics" class="level2">
<h2 class="anchored" data-anchor-id="what-is-the-need-for-ci-cd-for-synapse-analytics">what is the need for CI-CD for synapse analytics?</h2>
<p>First of all, Synapse Analytics is a cloud-based analytics service that is frequently updated and added to with new capabilities. The danger of potential bugs and other problems is reduced by a well-defined CI/CD process, which makes sure that the most recent changes are integrated and tested in the current system before being deployed to production.</p>
<p>Second, a well-defined CI/CD procedure that guarantees seamless cooperation and effective deployment is crucial because Synapse Analytics frequently involves numerous developers working on various project components.</p>
<p>Lastly, A well-defined CI/CD approach also ensures that the pipeline is tested and verified at every level, resulting in greater quality, more stable solutions, and a quicker time to market. Synapse Analytics frequently entails complicated data processing and integration.</p>
<p>Overall, teams can manage the development and deployment of solutions more effectively while maintaining high quality and lowering the risk of errors and downtime by adopting a CI/CD process for Synapse Analytics with technologies like Azure DevOps.</p>
</section>
<section id="what-are-the-different-components-of-synapse-analytics" class="level2">
<h2 class="anchored" data-anchor-id="what-are-the-different-components-of-synapse-analytics">What are the different components of Synapse Analytics?</h2>
<p>A cloud-based analytics service called Synapse Analytics consists of a number of parts that work together to offer a whole analytics solution. Synapse Analytics’ principal parts are:</p>
<p><strong>Synapse Studio</strong>: A web-based integrated development environment (IDE) called Synapse Studio offers a centralized workspace for creating, overseeing, and maintaining Synapse applications. It consists of a number of technologies and services, including big data, machine learning, data warehousing, and data integration.</p>
<p><strong>Synapse SQL:</strong> Users of Synapse SQL can execute SQL queries against both organized and unstructured data using this distributed SQL engine. It supports serverless and provisioned models, enables petabyte-scale data warehousing, and supports both.</p>
<p><strong>Synapse Spark:</strong> Synapse Spark is a big data processing engine that enables customers to use Apache Spark to process massive amounts of data. Big data analytics, offers a high-performance computing environment that supports both batch and real-time data processing.</p>
<p><strong>Synapse Pipelines:</strong> Users can design, orchestrate, and monitor data pipelines using the data integration service known as Synapse Pipelines. It can integrate data from numerous sources and supports both code-free and code-first data integration scenarios.</p>
<p><strong>Synapse Serverless:</strong> Users can analyze data using SQL queries using Synapse Serverless, a serverless SQL pool, without needing to set up or maintain a specific cluster.</p>
<p><strong>Synapse Dedicated SQL Pool:</strong> A dedicated cluster for high-performance data warehousing and analytics is offered via the provided SQL pool known as Synapse.</p>
<p><strong>Synapse Notebooks:</strong> Users can work with code and data in a group setting using Synapse Notebooks, a collaborative notebook environment. Python, Scala, and .NET are just a few of the many programming languages it supports.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:541/1*6KsmHKmVqEAqPPG1BFyayw.png" class="img-fluid"></p>
</section>
<section id="why-it-is-hard-to-implement-ci-cd-for-synapse-analytics" class="level2">
<h2 class="anchored" data-anchor-id="why-it-is-hard-to-implement-ci-cd-for-synapse-analytics">why it is hard to implement ci cd for synapse analytics?</h2>
<p>For a number of reasons, implementing a Continuous Integration and Continuous Deployment (CI/CD) procedure for Synapse Analytics can be difficult.</p>
<p>First off, Synapse Analytics is a sophisticated cloud-based analytics service that combines a variety of parts and offerings, each with specific needs and dependencies. It may be challenging to develop a simplified and effective CI/CD pipeline that manages all the many components of the service due to its complexity.</p>
<p>Second, it can be difficult to develop a testing and deployment procedure that is quick and successful since Synapse Analytics frequently requires processing and handling massive volumes of data. It can take a lot of time to test and validate data pipelines, and handling enormous amounts of data makes it challenging to set up a testing environment that precisely mimics the production environment.</p>
<p>Thirdly, it can be difficult to make sure that everyone is using the most recent code and data because Synapse Analytics is frequently utilized by numerous developers and teams. Version control problems and other issues may result from this, which may slow down the development and deployment process.</p>
<p>Last but not least, For Synapse Analytics one needs experience in a variety of fields, including data integration, warehousing, big data, and machine learning, in order to establish a CI/CD process. Teams may find it difficult to locate the necessary skills and materials to build a reliable and effective CI/CD pipeline as a result.</p>
<p>Overall, For Synapse Analytics one needs to carefully prepare the implementation of a CI/CD process and have a thorough understanding of all the different parts and services involved. To build a streamlined and effective pipeline that can handle the complexity of Synapse Analytics, it’s crucial to collaborate with professionals in data engineering, DevOps, and cloud computing.</p>
</section>
<section id="lets-understand-the-ci--cd-approach" class="level2">
<h2 class="anchored" data-anchor-id="lets-understand-the-ci--cd-approach">Let’s understand the CI -CD Approach:</h2>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*BWLgWiFl2NK106GjlgnXuA.png" class="img-fluid"></p>
<ol type="1">
<li><strong>Resource Groups:</strong> Here we have two resource groups, In how enterprise we may have multiple resource groups and multiple synapse workspaces so to deploy that you can use my terraform guide which can be done very easily.</li>
<li><strong>Artifacts:</strong> for artifacts deployment, I have used the ARM template deployment approach and deployed all the artifacts in that way.</li>
</ol>
<p><em>The most important thing is if you have multiple artifacts linked services then you have to manually edit the ARM templates before deployment for it to work.</em></p>
<p>3. <strong>Dedicated SQL pool:</strong> The dedicated SQL pool scripts and stored procedures, views, etc also can be automated using CI-CD but I have used a secondary pipeline for the same, which makes sense as the development of the two will be asynchronous and have a different lifecycle.</p>
</section>
<section id="continuous-integration" class="level2">
<h2 class="anchored" data-anchor-id="continuous-integration">Continuous Integration :</h2>
<p>So for the example let’s think that we have two synapse workspace which represents two environments.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*-fjFCeudSibAyUomdONW_Q.png" class="img-fluid"></p>
<p>Now log into the dev synapse workspace by going to the portal and clicking on the open synapse studio dialog box</p>
<p><img src="https://miro.medium.com/v2/resize:fit:404/1*9oL7oOlWimT5D94EZKqsPw.png" class="img-fluid"></p>
<p>Once you are in dev synapse studio go to Settings and then GIT configuration.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:386/1*ohhgl34OOCXcvasXNAAflQ.png" class="img-fluid"></p>
<p>then click on ‘configure’</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*B-bcu3WuDAgFhFagRZ0KxA.png" class="img-fluid"></p>
<p>select GITHUB or AZURE DEVOPS in the repository type</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*HFd49zarfzjmvwN3rC53-w.png" class="img-fluid"></p>
<p>Then proceed to select the collaboration branch and publish branch.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*JPLjTkXdfFWWImzfjWAaJw.png" class="img-fluid"></p>
<p>The collaboration branch and publish branch are two crucial ideas in Synapse Studio that are connected to source control and versioning of Synapse artifacts.</p>
<p>The collaboration branch where numerous developers can work together on a Single workspace is the collaboration branch. Usually, Synapse artifacts are developed, tested, and validated using this branch. The collaboration branch can be updated by developers after they create and modify Synapse items like pipelines, notebooks, data flows, and SQL scripts. When you establish a new workspace in Synapse Studio, the collaboration branch, which is the default branch, is automatically created.</p>
<p>The publish branch however does a different thing, it publishes the ARM template into that branch which contains everything in the artifact be it pipelines, notebooks, and Linked services detail everything!</p>
<p>Once you are done it will look something like this,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*q2wVkCmmGsUl6z_WGg3ZcA.png" class="img-fluid"></p>
<p>Now try to commit all and then publish</p>
<p><img src="https://miro.medium.com/v2/resize:fit:523/1*mWeYAg0qzsdtSvyyj2nDcQ.png" class="img-fluid"></p>
<p>This will start generating the ARM templates and save them in the repo mentioned.</p>
<p>If you go to the repo you will see a folder showing your synapse workspace name which will contain two ARM templates.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:429/1*8obf7NpjjZ-5ghruiXYQLA.png" class="img-fluid"></p>
<p>the build and release concept is kind of this.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*xOtUyHXBbKEJjo8TRYQRgQ.png" class="img-fluid"></p>
<p>So we are using three branch policy</p>
<p>Develop branch: This branch would be the primary branch for developers to work on Synapse artifacts, including pipelines, notebooks, and data flows. Each developer would create their own feature branch from the develop branch, where they would make and commit their changes. When their feature is complete and tested, they would submit a pull request to merge their changes into the develop branch. The development branch would contain the latest tested changes from all the feature branches.</p>
<p>Feature branch: Each developer would create their own feature branch from the develop branch, where they would make and commit their changes. Feature branches are typically named after the feature or issue that they are addressing. Once a developer has completed their changes and testing, they would submit a pull request to merge their changes into the develop branch.</p>
<p>Main branch: The main branch would be the publish branch where you would deploy your Synapse artifacts to a live environment. The main branch would only contain the latest, tested changes that have been approved and merged from the develop branch.</p>
<p>In this setup, developers would use the develop branch to collaborate and integrate their changes before publishing to the main branch. This enables developers to work in parallel while maintaining a single source of truth for the Synapse artifacts. The use of feature branches ensures that changes are isolated and tested before being integrated into the develop branch. Finally, the main branch would contain only the tested and approved changes that are ready for deployment. By using this branch policy, you can help ensure that changes to your Synapse artifacts are properly tested and validated, and that version control is maintained throughout the development process.</p>
<p>Create a pipeline with the below code</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The pipeline copies files from workspace publish branch and publishes artifact</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @author  Kunal Das</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @version 1.0</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @since   10-11-2022</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    -synapse-CI-low</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trigger</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> workspace_publish</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pool</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vmImage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-22.04</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> CopyFiles@2</span></span>
<span id="cb1-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Copy Files to Build Pipeline directory'</span></span>
<span id="cb1-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SourceFolder</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'synapse-dev'</span></span>
<span id="cb1-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TargetFolder</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Build.ArtifactStagingDirectory)/ARM'</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PublishPipelineArtifact@1</span></span>
<span id="cb1-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Publish Pipeline Artifact'</span></span>
<span id="cb1-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">targetPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Build.ArtifactStagingDirectory)'</span></span>
<span id="cb1-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">artifact</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> drop</span></span></code></pre></div>
<p>This is a simplified YAML pipeline for Synapse CI/CD that has been named ‘synapse-CI-low’. The pipeline triggers whenever a Synapse workspace is published. The pipeline runs on an Ubuntu 22.04 virtual machine.</p>
<p>The first step in the pipeline is to copy files from a folder called ‘synapse-dev’ to a directory called ‘ARM’ in the build pipeline. This step is accomplished using the ‘CopyFiles’ task.</p>
<p>The second and final step in the pipeline is to publish the Synapse artifacts as a pipeline artifacts. This step is accomplished using the ‘PublishPipelineArtifact’ task. The target path for the artifacts is set to the build artifact staging directory, and the artifact is named ‘drop’.</p>
<p>This pipeline is a simple example of a Synapse CI/CD pipeline that copies Synapse artifacts from a source directory and publishes them as a pipeline artifact. This pipeline can be further expanded to include additional steps for building, testing, and deploying the Synapse artifacts.</p>
<p>Now to deploy the ARM template one extension is required, which can be added from the <a href="https://marketplace.visualstudio.com/items?itemName=AzureSynapseWorkspace.synapsecicd-deploy&amp;targetId=30894b01-00f5-4e06-962b-d1eec4db15f5&amp;utm_source=vstsproduct&amp;utm_medium=ExtHubManageList&amp;source=post_page-----59746afe022f--------------------------------">marketplace</a>.</p>
<p>To install the extension follow these steps:</p>
<ol type="1">
<li>Log in to your Azure DevOps organization and navigate to the Extensions tab in the left-hand menu.</li>
<li>Click on Browse Marketplace to access the Visual Studio Marketplace.</li>
<li>Search for the extension you want to install by typing the name of the extension in the search bar.</li>
<li>Click on the extension from the list of results to open the extension page.</li>
<li>Click on the Get it free button.</li>
<li>Select the Azure DevOps organization where you want to install the extension and review the terms and conditions.</li>
<li>Click on the Install button to install the extension in your Azure DevOps organization.</li>
</ol>
<p>Now for release, we need to add the main step:<br>
which is workspace deployment, for that we add the below task</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> AzureSynapseWorkspace.synapsecicd-deploy.synapse-deploy.Synapse workspace deployment@2</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Synpase deployment task for workspace: synapse-qa'</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TemplateFile</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(System.DefaultWorkingDirectory)/_Synapse-CI-pipeline/drop/ARM/TemplateForWorkspace.json'</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ParametersFile</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(System.DefaultWorkingDirectory)/_Synapse-CI-pipeline/drop/ARM/TemplateParametersForWorkspace.json'</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">azureSubscription</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'syn-sp'</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ResourceGroupName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'synapseQA-RG'</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TargetWorkspaceName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'synapse-qa'</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OverrideArmParameters</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-LS_AKV_QA_properties_typeProperties_baseUrl https://synapse-qa.vault.azure.net/'</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FailOnMissingOverrides</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>This is a YAML code snippet for deploying a Synapse workspace using the Synapse Workspace Deployment task in Azure DevOps. The code contains the following steps:</p>
<ol type="1">
<li>The task is defined with the name ‘Synapse deployment task for workspace: synapse-qa’ and the version number of the Synapse Workspace Deployment task is set to 2.</li>
<li>The template and parameter files for the Synapse workspace are specified. The template file is named ‘TemplateForWorkspace.json’ and the parameters file is named ‘TemplateParametersForWorkspace.json’. These files are located in the default working directory of the pipeline.</li>
<li>The Azure subscription to be used for the deployment is specified as ‘syn-sp’.</li>
<li>The resource group name where the Synapse workspace will be deployed is set to ‘synapseQA-RG’.</li>
<li>The target Synapse workspace name is set to ‘synapse-qa’.</li>
<li>The override ARM parameters are specified using the parameter name and the new value. In this case, the parameter name is ‘-LS_AKV_QA_properties_typeProperties_baseUrl’ and the new value is ‘<a href="https://synapse-qa.vault.azure.net/">https://synapse-qa.vault.azure.net/</a>’.</li>
<li>The ‘FailOnMissingOverrides’ option is set to true, which means that the deployment will fail if any of the specified override parameters are not found.</li>
</ol>
<p>In summary, this code snippet deploys a Synapse workspace to the specified Azure subscription, resource group, and Synapse workspace name. The override ARM parameters allow you to customize the deployment settings for the workspace.</p>
<p>if you notice when we deploy the ARM template we need to change somethings like</p>
<p>1 . Sql pool name</p>
<p>2. Linked Services details</p>
<p>3. Spark pool name</p>
<p>If you have the same name for all these then you may not have to tinker with the ARM template but for others before running the above deployment step we need to modify these.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PythonScript@0</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Change SQL Pool'</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scriptSource</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> inline</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">    script</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb3-7">     search_text = 'synapsesqlpooldev'</span>
<span id="cb3-8">     replace_text = 'synapsesqlpoolqa'</span>
<span id="cb3-9">     </span>
<span id="cb3-10">     with open(r'$(System.DefaultWorkingDirectory)/_Synapse-CI-pipeline/drop/ARM/TemplateForWorkspace.json', 'r') as file:</span>
<span id="cb3-11">        data = file.read()</span>
<span id="cb3-12">        data = data.replace(search_text, replace_text)</span>
<span id="cb3-13">     with open(r'$(System.DefaultWorkingDirectory)/_Synapse-CI-pipeline/drop/ARM/TemplateForWorkspace.json', 'w') as file:</span>
<span id="cb3-14">        file.write(data)</span>
<span id="cb3-15">     print("SQL pool changed")</span>
<span id="cb3-16">     </span></code></pre></div>
<p>This is a YAML code snippet for a PythonScript task in Azure DevOps. The task changes the name of a SQL pool in an ARM template file for a Synapse workspace deployment. The code contains the following steps:</p>
<ol type="1">
<li>The task is defined with the name ‘Change SQL Pool’ and the task version is set to 0.</li>
<li>The script source is set to ‘inline’, which means that the script is written in the YAML file directly.</li>
<li>The Python script is defined, which replaces the search text ‘synapsesqlpooldev’ with the replacement text ‘synapsesqlpoolqa’ in the ARM template file.</li>
<li>The ARM template file is read and its contents are stored in the ‘data’ variable.</li>
<li>The ‘replace’ method is used to replace the search text with the replacement text.</li>
<li>The modified data is written back to the ARM template file.</li>
<li>A message ‘SQL pool changed’ is printed to the console.</li>
</ol>
<p>In summary, this code snippet uses a Python script to modify the ARM template file for a Synapse workspace deployment by changing the name of a SQL pool from ‘synapsesqlpooldev’ to ‘synapsesqlpoolqa’. The modified ARM template file is used in the subsequent tasks for deploying the Synapse workspace.</p>
<p>The same kind of scripts can use for Spark pool and linked services as well.</p>
<p>If you want to use Powershell here is the command<br>
Let us change the linked Azure KeyVault for the same.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Get-Content</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$(</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DefaultWorkingDirectory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span>_Synapse-CI-pipeline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>ARM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>TemplateForWorkspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-replace</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LS_AKV_DEV'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LS_AKV_QA'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Set-Content</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$(</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DefaultWorkingDirectory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span>_Synapse-CI-pipeline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>ARM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>TemplateForWorkspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Get-Content</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$(</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DefaultWorkingDirectory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span>_Synapse-CI-pipeline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>ARM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>TemplateParametersForWorkspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-replace</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LS_AKV_DEV'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LS_AKV_QA'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Set-Content</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$(</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DefaultWorkingDirectory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span>_Synapse-CI-pipeline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>ARM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>TemplateParametersForWorkspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span></span></code></pre></div>
<ol type="1">
<li>The first command replaces the string ‘LS_AKV_DEV’ with ‘LS_AKV_QA’ in the contents of the ARM template file named ‘TemplateForWorkspace.json’.</li>
<li>The second command replaces the same string in the contents of the ARM template parameter file named ‘TemplateParametersForWorkspace.json’.</li>
<li>The ‘-path’ parameter specifies the file path for each file, which is set to the default working directory in the build pipeline.</li>
<li>The ‘-replace’ parameter is used to search for the specified string and replace it with the replacement string in each file.</li>
<li>The ‘|’ (pipe) character is used to send the modified contents to the ‘Set-Content’ command, which writes the modified contents back to the same file.</li>
<li>The modified ARM template files are used in the subsequent tasks for deploying the Synapse workspace.</li>
</ol>
<p>In summary, this PowerShell script code uses the ‘Get-Content’ and ‘Set-Content’ commands to modify the contents of two ARM template files for a Synapse workspace deployment in Azure DevOps. The ‘replace’ parameter is used to replace a string in each file, and the modified files are used in the subsequent deployment tasks.</p>
<p>Now if you have some triggers in the synapse workspace it will not deploy as before deployment triggers must be turned off, to achieve this we can add the below task just before deployment</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> AzureSynapseWorkspace.synapsecicd-deploy.toggle-trigger.toggle-triggers-dev@2</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Toggle Azure Synapse Triggers'</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">azureSubscription</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'syn-sp'</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ResourceGroupName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Synapseqa-RG'</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WorkspaceName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'synapse-qa'</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToggleOn</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span></code></pre></div>
<p>This pipeline step uses the Azure Synapse CI/CD extension to turn off triggers for a Synapse workspace. The task is named “Toggle Azure Synapse Triggers” and the version being used is 2. The task has several inputs including:</p>
<ul>
<li>azureSubscription: The Azure subscription that contains the Synapse workspace.</li>
<li>ResourceGroupName: The name of the resource group where the Synapse workspace is located.</li>
<li>WorkspaceName: The name of the Synapse workspace where the triggers will be turned off.</li>
<li>ToggleOn: A boolean value indicating whether to turn on or off the Synapse triggers. In this case, it is set to false, meaning the triggers will be turned off.</li>
</ul>
<p>Once you do all these steps you are finally ready to deploy the synapse workspace!!!</p>
</section>
<section id="lets-look-at-the-high-level-workflow-of-the-things-we-have-done-so-far" class="level2">
<h2 class="anchored" data-anchor-id="lets-look-at-the-high-level-workflow-of-the-things-we-have-done-so-far">let’s look at the high-level workflow of the things we have done so far!</h2>
<ol type="1">
<li>Developers create or modify Synapse artifacts, such as notebooks, and pipelines, in the development environments.</li>
<li>The changes are pushed to a source control repository, such as Azure DevOps Repos, GitHub, or Bitbucket.</li>
<li>A build pipeline is triggered, which compiles the changes, and creates an artifact, such as an ARM template.</li>
<li>The artifact is published to a release pipeline, which deploys it to the Synapse workspace.</li>
<li>The deployment process may involve creating or updating Synapse artifacts, deploying resources to Azure, and configuring the Synapse workspace.</li>
<li>After the deployment is completed, the triggers for Synapse pipelines, notebooks, and triggers may need to be toggled on or off.</li>
<li>If any issues are found during testing, the pipeline may be rolled back or the code may be fixed and re-deployed.</li>
</ol>
<p>But this whole CI-CD pipeline will take care of the spark notebooks pipelines and additionally the Linked services and IRs as well but one major thing is the Stored procedures views etc from the dedicated SQL pool, we need some way to publish these changes can be taken care of by using a second Pipeline,</p>
</section>
<section id="ci-cd-for-dedicated-sql-pool" class="level2">
<h2 class="anchored" data-anchor-id="ci-cd-for-dedicated-sql-pool">CI-CD for dedicated SQL pool</h2>
<p>Let’s look at the high-level workflow</p>
<p>Sure, here’s a detailed explanation of the CI/CD workflow for a dedicated SQL pool using Azure Data Studio:</p>
<ol type="1">
<li><strong>Connect to dedicated SQL pool:</strong> First, connect to the dedicated SQL pool using Azure Data Studio. This can be done by selecting the dedicated SQL pool in the Object Explorer and providing the necessary login credentials.</li>
<li><strong>Create a project:</strong> Once connected, create a new project in Azure Data Studio by selecting File -&gt; New Project. Choose the appropriate project type based on the requirements of the dedicated SQL pool.</li>
<li><strong>Add source control:</strong> Add the project to a source control repository such as Git by selecting View -&gt; Source Control and following the prompts to initialize the repository and commit the project.</li>
<li><strong>Build pipeline:</strong> Create a build pipeline in Azure DevOps that takes the *.sqlproj file from the source control repository and builds a DACPAC file using the vsbuild Task. This task compiles the SQL scripts and T-SQL code into a single package that can be deployed to the dedicated SQL pool.</li>
<li><strong>Release pipeline:</strong> Create a release pipeline in Azure DevOps that deploys the DACPAC file to the next environment, such as the QA environment. This can be done using the dacpac Deploy Task. This task deploys the DACPAC file to the specified SQL Server instance or dedicated SQL pool, and can also handle any necessary pre- or post-deployment scripts.</li>
</ol>
<p>Here is the complete workflow diagram of the same.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:693/1*vMZpqncYYtNPkveUX_Tdqw.png" class="img-fluid"></p>
</section>
<section id="first-lets-setup-the-repository-for-the-sql-pool" class="level2">
<h2 class="anchored" data-anchor-id="first-lets-setup-the-repository-for-the-sql-pool">First, let’s setup the repository for the SQL pool</h2>
<ol type="1">
<li>Create or use an existing Azure DevOps project.</li>
<li>Click on Repos from the sidebar.</li>
<li>Click on New Repository and fill in the necessary details, such as the repo name. In this case, the repo name used in this example is “Synapse_SQLpool”. Click on Create.</li>
<li>Configure Azure Data Studio (ADS) to connect to the above-created repository. Open ADS and select the New Connection option from the welcome page.</li>
</ol>
<p><img src="https://miro.medium.com/v2/resize:fit:570/0*dGDlzzBforon6Jdu.png" class="img-fluid"></p>
<p>5. A new pop-up window will come, here put all the details required for the connection.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:591/1*CQ-ndkbQDFKEws59X0Zbig.png" class="img-fluid"></p>
<p>6. Click on <strong>connect</strong> and then wait for the browser window to come on screen, here u can normally log in with your azure credentials and after successful login, you will be redirected to the data studio.</p>
<p>7. At this point if you click on the <strong>Connections</strong> side pane on the left you will definitely see the connection sub menu there,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:538/1*BqwP_pVdJpAoNNkz7qGhyQ.png" class="img-fluid"></p>
<p>Now select the server connection from here and then right-click and select ’<strong>create project from database’</strong> option,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:339/1*ys6bRnBDcQPLENVD0MQGFA.png" class="img-fluid"></p>
<p>Keep the settings as shown in the below image but select the folder and project name appropriately.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:463/1*KIqHT-Ev2o2KKOmxquDBFg.png" class="img-fluid"></p>
<ul>
<li>Once you are done with it you will see a project from the left side pane</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:639/0*9-6cgsXMYYCfjsBd.png" class="img-fluid"></p>
<ul>
<li>Now the only step is to add the project to the Azure repo, there are plenty of ways we can do that, but here inside Azure Data studio itself, you can do the same by going into the left pane source control option.</li>
<li>Click on the three-dot menu and then select the add remote option,</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:591/0*_qW1ADElqbUDF5dU.png" class="img-fluid"></p>
<ul>
<li>Here u just have to put the azure repo link, if it fails somehow open the terminal by pressing “ctrl + `” and then run the git init command which will initialize the directory,</li>
<li>Once u put the azure repo link whatever changes are there in your project can be pushed to the azure repo easily.</li>
<li>Verify the remote repo by the command ‘git remote -v’</li>
<li>The Sync option can also be used as it will automatically pull and then push the repo from the azure repo to the local system,</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:469/0*ID5HsaSWZmebcFgC.png" class="img-fluid"></p>
<p>Open the azure repo and navigate to your repo and see the files updated,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/0*9N2UwcsgcFCexLD_.png" class="img-fluid"></p>
<p>Now we have to create a build pipeline for that,<br>
go to pipeline and a new pipeline,</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*bzWD9lhx-L2wjEP6UKaJBQ.png" class="img-fluid"></p>
<p>select Azure repo and locate your repository.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/0*xMfhg4gEwppeelg4.png" class="img-fluid"></p>
<ul>
<li>The third step would be just selecting the starter pipeline option.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:700/0*OAwRILYqxVLKnDaX.png" class="img-fluid"></p>
<ul>
<li>Then in the yaml file paste the below code,</li>
</ul>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># @Author : Kunal Das</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Date : 30-12-2022</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">variables</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poolstagingarea</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(Build.ArtifactStagingDirectory)\poolstaging</span></span>
<span id="cb6-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BuildConfiguration</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> release</span></span>
<span id="cb6-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SQLPoolartifactname</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> AzureSQLPool</span></span>
<span id="cb6-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SQLPooldacpacfile</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(System.ArtifactsDirectory)\$(SQLPoolartifactname)\synapseSQLpoolDEV.sqlproj</span></span>
<span id="cb6-10"></span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trigger</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> main</span></span>
<span id="cb6-14"></span>
<span id="cb6-15"></span>
<span id="cb6-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pool</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vmImage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> windows-2019</span></span>
<span id="cb6-18"></span>
<span id="cb6-19"></span>
<span id="cb6-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stages</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-21"></span>
<span id="cb6-22"></span>
<span id="cb6-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Pooldacpac</span></span>
<span id="cb6-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Build dacpac'</span></span>
<span id="cb6-25"></span>
<span id="cb6-26"></span>
<span id="cb6-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">job</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Builddacpac'</span></span>
<span id="cb6-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Build SQL Pool dacpac'</span></span>
<span id="cb6-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb6-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> VSBuild@1</span></span>
<span id="cb6-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Builds the dacpac'</span></span>
<span id="cb6-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solution</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> synapseSQLpoolDEV.sqlproj</span></span>
<span id="cb6-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">configuration</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(BuildConfiguration)</span></span>
<span id="cb6-37"></span>
<span id="cb6-38"></span>
<span id="cb6-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PublishBuildArtifacts@1</span></span>
<span id="cb6-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Publishes dacpac as an artifact'</span></span>
<span id="cb6-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        # Publishes the dacpac as part of an artifact within Azure DevOps</span></span>
<span id="cb6-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-43"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PathtoPublish</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bin\$(BuildConfiguration)'</span></span>
<span id="cb6-44"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ArtifactName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(SQLPoolartifactname)</span></span>
<span id="cb6-45"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">publishLocation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Container'</span></span></code></pre></div>
<ul>
<li>And Done! The build pipeline is ready, you may notice I have given the main branch as a trigger at the top so every time someone updates the main branch it triggers the main pipeline.</li>
<li>Save and run the pipeline, you can see all jobs running perfectly!!!</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:700/0*720OlcbqBDkb8Wyc.png" class="img-fluid"></p>
<ul>
<li>Click on the pipeline and see the job artifact in this case the dacpac file has been published.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:700/0*2a1QYjOx2ldAAwAk.png" class="img-fluid"></p>
</section>
<section id="implementing-the-release-pipeline-to-deploy-the-above-generated-build-artifacts" class="level2">
<h2 class="anchored" data-anchor-id="implementing-the-release-pipeline-to-deploy-the-above-generated-build-artifacts"><strong>IMPLEMENTING THE RELEASE PIPELINE TO DEPLOY THE ABOVE-GENERATED BUILD ARTIFACTS</strong></h2>
<ul>
<li>Now the release pipeline can be created easily by going to pipeline -&gt; release and then selecting create new release pipeline.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:221/1*GaDP_GX0fDAbO2IjhJ06tA.png" class="img-fluid"></p>
<ul>
<li>Go to the pipeline and add just one task “SQL dacpac deployment”</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:682/0*LMyAPzwF4L6ZI4-Q.png" class="img-fluid"></p>
<ul>
<li>This task just points to the QA or the next environment and then just takes the dacpac file to deploy it in the next environments.</li>
</ul>
<p>Then locate and select the dacpac file.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:574/0*cArsKbJYMgjNjCX1.png" class="img-fluid"></p>
<ul>
<li>Pass an additional argument in the field <strong>Additional SqlPackage.exe Arguments</strong> as /p: BlockOnPossibleDataLoss=false</li>
<li>Just save and run the pipeline.</li>
<li>The job will run and deploy the changes to the next environment,</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:700/0*ulXYtTqFJ3q7xzEm.png" class="img-fluid"></p>
<p>In conclusion, the effectiveness and collaboration of data engineering and BI projects can be significantly enhanced by connecting Azure DevOps with Azure Synapse Analytics workspace. You may connect your Azure DevOps project with your Synapse workspace by following the instructions in this article, which will also help you optimize your CI/CD pipeline for better data asset distribution and maintenance. To ensure a seamless and successful implementation, it is crucial to test carefully and make any necessary adjustments. Your firm can benefit from a smooth DevOps and data analytics process with proper design and implementation.</p>
</section>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Azure</category>
  <category>DevOps</category>
  <category>Synapse</category>
  <category>CI/CD</category>
  <guid>https://kunaldas.dev/posts/2023-02-23-streamlining-synapse-cicd.html</guid>
  <pubDate>Thu, 23 Feb 2023 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:700/0*CoufxbMwN_U4G5CV" medium="image"/>
</item>
<item>
  <title>How to publish from Release Pipeline in Azure DevOps</title>
  <link>https://kunaldas.dev/posts/2022-12-26-publishing-from-azure-devops-release-pipeline.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*A_IveIUhnhHOzi_a04hecA.png" class="img-fluid"></p>
<ul>
<li>How to publish from Release Pipeline in Azure DevOps
<ul>
<li><strong>Pushing the artifact in a git repo</strong></li>
</ul></li>
</ul>
<p>In this section, I shall describe how you can get the artifact from the release pipeline,</p>
<p>Publishing any artifact from the build pipeline is pretty easy and there are plenty of tutorials available on the internet,</p>
<p>To publish an artifact from a build pipeline in Azure DevOps, you can use the <code>Publish Build Artifacts</code> task. Here’s how you can do it:</p>
<ol type="1">
<li>In your build pipeline, add the <code>Publish Build Artifacts</code> task to a phase that runs after the build is completed.</li>
<li>In the <code>Path to publish</code> field, specify the path to the folder that contains the artifacts you want to publish. You can use a wildcard pattern to include multiple files and folders.</li>
<li>In the <code>Artifact name</code> field, enter a name for the artifact.</li>
<li>In the <code>Artifact publish location</code> field, choose whether you want to publish the artifact to the pipeline or to a file share.</li>
<li>If you are publishing to a file share, enter the path to the share in the <code>Path to publish on the server</code> field.</li>
<li>Save and run your pipeline.</li>
</ol>
<p>That’s it! The <code>Publish Build Artifacts</code> task will publish the specified artifacts to the pipeline or file share you specified. You can then use the artifact in a release pipeline or download it from the Artifacts page in Azure DevOps.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> PublishPipelineArtifact@1</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Publish Pipeline Artifact'</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">targetPath</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(Build.ArtifactStagingDirectory)'</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">artifact</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> drop</span></span></code></pre></div>
<p>Now for any reason, you may want to get the same result from the release pipeline as well, but unfortunately, the PublishPipelineArtifact@1 task does not support in release pipeline and even if you run it you will get some error, to solve this you can do one thing,</p>
<section id="pushing-the-artifact-in-a-git-repo" class="level2">
<h2 class="anchored" data-anchor-id="pushing-the-artifact-in-a-git-repo"><strong>Pushing the artifact in a git repo</strong></h2>
<p>in this way essentially you can save the copy of your updated artifacts in a separate folder inside your git repo.</p>
<p>let me show my scenario,</p>
<p>we are following the git flow branching strategy, so as you can see in each environment we need to save a copy of the updated ARM template .</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*N02QCq_JlDm7I_FWyNanSg.png" class="img-fluid"></p>
<p>How did I achieve this?</p>
<p>Well, let me guide you step by step.</p>
<p>First, give all the permission required so that the pipeline can access the repo and push to it!</p>
<p>Go to project settings → Repository → select your repo →security → project collection Administrators → contribute → ALLOW</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*AlJk6VeImXA3urf7XfHt_Q.png" class="img-fluid"></p>
<p>This setting essentially allows pushing from the build pipeline to the repo.</p>
<p>also, you have to check one more setting,</p>
<p>for the classic pipeline, select the below option.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:328/1*ImXJ-rMt4oEHY9BAHriYaw.png" class="img-fluid"></p>
<p>and for YAML, add the below code before the YAML code.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">variables</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system_accesstoken</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> $(System.AccessToken)</span></span></code></pre></div>
<p>now add this bash task in the pipeline.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">- </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb3-3">   git config --global user.email "azuredevops@microsoft.com"</span>
<span id="cb3-4">   git config --global user.name "Azure DevOps"</span>
<span id="cb3-5">   </span>
<span id="cb3-6">   REPO="$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_git/$(Build.Repository.Name)"</span>
<span id="cb3-7">   EXTRAHEADER="Authorization: Bearer $(System.AccessToken)"</span>
<span id="cb3-8">   git -c http.extraheader="$EXTRAHEADER" clone $REPO </span>
<span id="cb3-9">   cd $(Build.Repository.Name)</span>
<span id="cb3-10">   </span>
<span id="cb3-11">   mkdir 'QA-env'</span>
<span id="cb3-12">   cd 'QA-env'</span>
<span id="cb3-13">   </span>
<span id="cb3-14">   cp '$(System.DefaultWorkingDirectory)/ARM/TemplateForWorkspace.json' .</span>
<span id="cb3-15">   cp '$(System.DefaultWorkingDirectory)/ARM/TemplateParametersForWorkspace.json' .</span>
<span id="cb3-16">   </span>
<span id="cb3-17">   cd ..</span>
<span id="cb3-18">   </span>
<span id="cb3-19">   git add Template-QA/TemplateForWorkspace.json</span>
<span id="cb3-20">   git add Template-QA/TemplateParametersForWorkspace.json</span>
<span id="cb3-21">   </span>
<span id="cb3-22">   </span>
<span id="cb3-23">   MAINBRANCHNAME=main</span>
<span id="cb3-24">   git config http.$REPO.extraHeader "$EXTRAHEADER"</span>
<span id="cb3-25">   git commit -a -m "added QA json updated files"</span>
<span id="cb3-26">   </span>
<span id="cb3-27">   echo -- Merge $(Build.SourceBranchName) to $MAINBRANCHNAME --</span>
<span id="cb3-28">   git fetch origin $(Build.SourceBranchName) --prune</span>
<span id="cb3-29">   git merge origin/$(Build.SourceBranchName) -m "merge $(Build.SourceBranchName) to $MAINBRANCHNAME" --no-ff --allow-unrelated-histories</span>
<span id="cb3-30">   </span>
<span id="cb3-31">   </span>
<span id="cb3-32">   </span>
<span id="cb3-33">   git push origin $MAINBRANCHNAME</span>
<span id="cb3-34">   git push origin --tags</span>
<span id="cb3-35">   </span>
<span id="cb3-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Bash Script'</span></span></code></pre></div>
<p>If you are using a classic pipeline add a bash task</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*dKCLnmrNT6qGFCkxWOYD6A.png" class="img-fluid"></p>
<p>And add the below script as inline,</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--global</span> user.email <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azuredevops@microsoft.com"</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--global</span> user.name <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Azure DevOps"</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">REPO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">System.TeamFoundationCollectionUri</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">System.TeamProject</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/_git/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Build.Repository.Name</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">EXTRAHEADER</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Authorization: Bearer </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">System.AccessToken</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> http.extraheader=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$EXTRAHEADER</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> clone <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$REPO</span> </span>
<span id="cb4-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Build.Repository.Name</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qa1-ause-asy-01'</span></span>
<span id="cb4-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qa1-ause-asy-01'</span></span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cp</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(System.DefaultWorkingDirectory)/_Synapse-CI-pipeline/drop/ARM/TemplateForWorkspace.json'</span> .</span>
<span id="cb4-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cp</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$(System.DefaultWorkingDirectory)/_Synapse-CI-pipeline/drop/ARM/TemplateParametersForWorkspace.json'</span> .</span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ..</span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add Template-QA/TemplateForWorkspace.json</span>
<span id="cb4-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add Template-QA/TemplateParametersForWorkspace.json</span>
<span id="cb4-19"></span>
<span id="cb4-20"></span>
<span id="cb4-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">MAINBRANCHNAME</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>main</span>
<span id="cb4-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config http.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$REPO</span>.extraHeader <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$EXTRAHEADER</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"added QA json updated files"</span></span>
<span id="cb4-24"></span>
<span id="cb4-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span> Merge <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Build.SourceBranchName</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> to <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$MAINBRANCHNAME</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span></span>
<span id="cb4-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> fetch origin <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Build.SourceBranchName</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--prune</span></span>
<span id="cb4-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge origin/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Build.SourceBranchName</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"merge </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Build.SourceBranchName</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> to </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$MAINBRANCHNAME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-ff</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--allow-unrelated-histories</span></span>
<span id="cb4-28"></span>
<span id="cb4-29"></span>
<span id="cb4-30"></span>
<span id="cb4-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$MAINBRANCHNAME</span></span>
<span id="cb4-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--tags</span></span></code></pre></div>
<p>you can update the commit message according to your need,</p>
<p>In this script, the following actions are being performed:</p>
<ol type="1">
<li>The <code>mkdir</code> command is creating a new directory called <code>QA-env</code>.</li>
<li>The <code>cd</code> command is changing the current working directory to <code>QA-env</code>.</li>
<li>The <code>cp</code> command is copying the files <code>TemplateForWorkspace.json</code> and <code>TemplateParametersForWorkspace.json</code> from the <code>ARM</code> subdirectory of the default working directory to the current working directory (<code>QA-env</code>).</li>
<li>The <code>cd ..</code> command is changing the current working directory back to the parent directory.</li>
<li>The <code>git add</code> command is adding the files <code>TemplateForWorkspace.json</code> and <code>TemplateParametersForWorkspace.json</code> to the staging area in Git. This means that these files will be included in the next commit.</li>
</ol>
<p>once done you will see the changes getting merged in the repo</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*uFy8Cz23_1TFnnbKBoOCEQ.png" class="img-fluid"></p>
<p>That is it,</p>
<p>I guess you can try the steps and get back to me if any help is required!</p>
<p>Credit :</p>
<p><a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/release/?view=azure-devops">https://learn.microsoft.com/en-us/azure/devops/pipelines/release/?view=azure-devops</a></p>
<p><a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/publish-build-artifacts-v1?view=azure-pipelines">https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/publish-build-artifacts-v1?view=azure-pipelines</a></p>
<p><a href="https://stackoverflow.com/questions/52837980/how-to-allow-scripts-to-access-oauth-token-from-yaml-builds">https://stackoverflow.com/questions/52837980/how-to-allow-scripts-to-access-oauth-token-from-yaml-builds</a></p>
<p><a href="https://chuvash.eu/2021/04/09/git-merge-develop-to-main-in-an-azure-devops-release/">https://chuvash.eu/2021/04/09/git-merge-develop-to-main-in-an-azure-devops-release/</a></p>
</section>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Azure DevOps</category>
  <category>CI/CD</category>
  <category>Git</category>
  <category>DevOps</category>
  <guid>https://kunaldas.dev/posts/2022-12-26-publishing-from-azure-devops-release-pipeline.html</guid>
  <pubDate>Mon, 26 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:700/1*A_IveIUhnhHOzi_a04hecA.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Comprehensive Azure Best Practices Guide</title>
  <link>https://kunaldas.dev/posts/2022-12-03-azure-best-practices.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<p><img src="https://miro.medium.com/v2/resize:fit:700/0*JFxFUjxO8pAiWsq0.png" class="img-fluid"></p>
<ul>
<li>Azure Best Practices
<ul>
<li>Security:</li>
<li>Enable Azure AD Conditional Access and enforce MFA</li>
<li>Disable RDP/SSH from the Internet</li>
<li>Management:</li>
<li>Operations:</li>
<li>Cost Optimization:</li>
<li>Services:</li>
<li>Database</li>
<li>AppService:</li>
<li>Conclusion:</li>
<li>Credits:</li>
</ul></li>
</ul>
<p>Azure best practices assist businesses in making the most of Azure resources to create and maintain scalable, cost-efficient, and secure solutions on the Microsoft Azure cloud. Having the correct Azure best practices can make or ruin a firm because Azure serves as the foundation of many modern organizations. I’ve covered the fundamental best practices that every Azure administrator needs to be aware of in this document. I’ve also provided advice on how to create a secure, reliable, and effective Azure infrastructure. These best practices must be followed in tandem because none of them by themselves can adequately secure the systems. You must select the best security alternatives based on your surroundings and demands, as is always the case.</p>
<section id="security" class="level2">
<h2 class="anchored" data-anchor-id="security">Security:</h2>
<p>the most important thing before anything else is security, The recommendations below can help assure more robust Azure security, but they cannot serve as a complete substitute. The top practices that I believe will help you strengthen and safeguard your Azure are listed below.</p>
</section>
<section id="enable-azure-ad-conditional-access-and-enforce-mfa" class="level2">
<h2 class="anchored" data-anchor-id="enable-azure-ad-conditional-access-and-enforce-mfa">Enable Azure AD Conditional Access and enforce MFA</h2>
<p>Azure AD Conditional Access assists administrators in enabling users to be productive whenever and wherever they choose while simultaneously safeguarding the assets of the company. Automating access control based on security, business, and compliance requirements are made possible via conditional access. Access to data and applications is protected by the addition of a crucial security layer provided by Azure AD Multi-Factor Authentication. To design an Azure Active Directory conditional access deployment and evaluate deployment considerations for Azure AD Multi-Factor Authentication, go to these Azure documentation sites (MFA).</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*ujYvSNEzVu05zQDpAmkkjQ.png" class="img-fluid"></p>
</section>
<section id="disable-rdpssh-from-the-internet" class="level2">
<h2 class="anchored" data-anchor-id="disable-rdpssh-from-the-internet">Disable RDP/SSH from the Internet</h2>
<p>Use JIT and Azure Bastion Do not expose RDP and SSH access over the Internet in order to provide remote access to Windows and Linux VMs in Azure from anywhere in the world without compromising security. To provide safe remote access to Azure virtual machines, use one of these techniques:</p>
<p>✓ <strong>Enable site-to-site VPN or ExpressRoute connections for Just-In-Time (JIT) VM access:</strong></p>
<p>JIT offers time-limited VM access through RDP and SSH, which lessens the exposure to brute force assaults. In essence, Network Security Groups (NSGs) lock off RDP and SSH ports and only permit authorized users to access them for a predetermined time. Users can request access to JIT VMs using Azure AD and role-based Access Control (RBAC) permissions.</p>
<p><strong>✓ Configure Azure Bastion inside your virtual network.</strong></p>
<p>Direct RDP/SSH communication to your VMs over TLS from the Azure interface is made possible by Azure Bastion. The PaaS service Azure Bastion does away with the requirement for VMs to have public IP addresses, agents, or specialized client software.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*yHCrH7KDdmEHkkpwLYhQbg.png" class="img-fluid"></p>
<p><strong>Secure privileged access with Azure AD PIM</strong></p>
<p>Azure AD Privileged Identity Management enables management, control, and monitoring of access to vital resources in Azure, Microsoft 365, and Intune (PIM). Admins must activate or elevate their privilege through PIM in order to use it for a brief period of time.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*QSUyijEFHVX-AiE5FA9eqg.png" class="img-fluid"></p>
</section>
<section id="management" class="level2">
<h2 class="anchored" data-anchor-id="management">Management:</h2>
<p><strong>Use Resource Groups; Tag individual resources:</strong></p>
<p>Create a resource group strategy that meets your company’s needs, then plan, create, and implement it. Resource groups, which are logical collections of Azure resources, containerize related resources in a group for administration simplicity, security, and cost tracking for your workloads.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*F7hE-TH6xttMSB9m2_wQWg.png" class="img-fluid"></p>
<p>A best practice resource group strategy should include the following: Group resources by</p>
<p>Environment: prod, dev, uat,stg,perf,sit</p>
<p>Application: BI,DWH</p>
<p>Business Unit: ML,DS</p>
<p><strong>Follow a well-defined naming standard</strong></p>
<p>Include resource type, application or business unit, environment, Azure region, and consecutive entity number etc.</p>
<p>For example, dev-ause-asy-01 means Azure Synapse Workspace in Australia South East Region which is in DEV environment.</p>
<p><strong>Leverage Resource tagging</strong></p>
<p>Tag all resources inside resource groups to communicate valuable information to your teams, discover resources, and manage costs and it is easy to delete resources as well.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:627/1*2ci7kwnh5Untp4I65UVGuw.png" class="img-fluid"></p>
</section>
<section id="operations" class="level2">
<h2 class="anchored" data-anchor-id="operations">Operations:</h2>
<p><strong>Use Azure Advisor:</strong></p>
<p>Azure Advisor offers individualised, practical advice for cost, security, dependability, operational excellence, and performance. Organizations can optimise their deployments with Azure Advisor in accordance with Microsoft best practises. These suggestions are based on Microsoft best practises that are successful for most businesses and were compiled using resource configuration analysis and usage telemetry in your Azure tenant.</p>
</section>
<section id="cost-optimization" class="level2">
<h2 class="anchored" data-anchor-id="cost-optimization">Cost Optimization:</h2>
<p><strong>Use reserved instances:</strong></p>
<p>Reserved instances are useful in certain circumstances, such as when you frequently employ the same VM size across several VMs. Domain controllers operating on Azure are an excellent example. On these VMs, three-year reserved instances offer savings of up to 72%.</p>
<p><strong>Delete unneeded resources:</strong></p>
<p>After VMs are decommissioned, orphan resources are frequently forgotten about and left in a tenant. These resources are pricey! Common examples of these Azure orphan resources include network cards and OS discs. Fortunately, the Azure Portal assists in reminding administrators to delete unnecessary resources at provisioning and deletion time.</p>
</section>
<section id="services" class="level2">
<h2 class="anchored" data-anchor-id="services">Services:</h2>
<p>In this section let us see in detail the most used resources and the best way to use those,</p>
<p>➢ Virtual Machine</p>
<p>✓ Enforce multi-factor authentication (MFA) and complex passwords. MFA can help limit the threat of compromised credentials. Complex passwords help reduce the effectiveness of brute-force password attacks. ✓ Use just-in-time (JIT) virtual machine access. JIT access works with NSGs and the Azure firewall and helps you layer in role-based access controls (RBAC) and time-bindings on access to virtual machines.</p>
<p>✓ Have a patch process in place. If you’re not patching your workloads, all your other efforts may be for nothing. A single unpatched vulnerability can lead to a breach. A patch process to keep your operating systems and applications up to date helps you mitigate this risk.</p>
<p>✓ Lock down administrative ports. Unless necessary, restrict access to SSH, RDP, WinRM, and other administrative ports.</p>
<p>✓ Use the Azure firewall and network security groups (NGSs) to limit access to workloads. Consistent with the principle of least privilege, use NSGs and the Azure firewall to restrict workload access.</p>
<p>✓ Apply the Latest OS Patches Ensure that the latest OS patches available for Microsoft Azure virtual machines are applied.</p>
<p>✓ Approved Azure Machine Image in Use Ensure that all your Azure virtual machine instances are launched from approved machine images only.</p>
<p>✓ Enable Auto-Shutdown Configure your Microsoft Azure virtual machines to automatically shut down on a daily basis.</p>
<p><strong>➢ Storage</strong></p>
<p>✓ Restrict database and storage access. UseFirewalls and access controls to limit what level of access users, devices, and services have to your databases and storage blobs.</p>
<p>✓ Leverage auditing. Turn on auditing for your Azure databases. Doing so enables you to gain visibility into all database changes.</p>
<p>✓ Configure threat detection for Azure SQL. If you use Azure SQL, activating threat detection helps you identify security issues faster and limit dwell time.</p>
<p>✓ Set log alerts in Azure Monitor. It isn’t enough to simply log events. Make sure you are alerting against security-related events in Azure Monitor so you can remediate issues quickly (and automatically when possible).</p>
<p>✓ Enable Azure Defender for your storage accounts. Azure Defender provides you with hardening and securing your Azure storage accounts.</p>
<p>✓ Use soft deletes. Soft deletes help you ensure data is still retrievable (for 14 days) in the event a malicious actor (or user error) leads to data you wanted to keep — getting deleted.</p>
<p>✓ Use shared access signatures (SAS). SAS enables you to implement granular access controls and time limits on client access to data.</p>
<p>✓ Disable Anonymous Access to Blob Containers Ensure that anonymous access to blob containers is disabled within your Azure Storage account.</p>
<p>✓ Disable public access to storage accounts with blob containers Ensure that public access to blob containers is disabled for your Azure storage accounts to override any ACL configurations allowing access.</p>
<p><strong>➢ Network</strong></p>
<p>✓ Encrypt data in transit. As we mentioned in the encryption and data security section: encryption of data in transit (and at rest) is a must. Leverage modern encryption protocols for all network traffic.</p>
<p>✓ Implement zero trust. By default, network policies should deny access unless there is an explicit allow rule.</p>
<p>✓ Limit open ports and Internet-facing endpoints. Unless there is a well-defined business reason for a port to be open or workload to be Internet-facing, don’t let it happen.</p>
<p>✓ Monitor device access. Monitoring access to your workloads and devices (e.g.&nbsp;using a SIEM or Azure Monitor) helps you proactively detect threats</p>
<p>✓ Segment your networks. Logical network segmentation can help improve visibility, make your networks easier to manage and limit east-west movement in the event of a breach.</p>
<p>✓ Check for NSG Flow Log Retention Period Ensure that the Network Security Group (NSG) flow log retention period is greater than or equal to 90 days.</p>
<p>✓ Check for Network Security Groups with Port Ranges Ensure there are no network security groups with a range of ports opened to allow incoming traffic.</p>
<p>✓ Enable DDoS Standard Protection for Virtual Networks Ensure that DDoS standard protection is enabled for production Azure virtual networks.</p>
<p>✓ Monitor Network Security Group Configuration Changes Network security group changes have been detected in your Microsoft Azure cloud account.</p>
<p>✓ Review Network Interfaces with IP Forwarding Enabled Ensure that the Azure network interfaces with IP forwarding enabled are regularly reviewed.</p>
</section>
<section id="database" class="level2">
<h2 class="anchored" data-anchor-id="database">➢ Database</h2>
<p>➢ <strong>Cosmos DB:</strong></p>
<p>✓ Enable Advanced Threat Protection Ensure that Advanced Threat Protection is enabled for all Microsoft Azure Cosmos DB accounts.</p>
<p>✓ Enable Automatic Failover Enable automatic failover for Microsoft Azure Cosmos DB accounts.</p>
<p>✓ Restrict Default Network Access for Azure Cosmos DB Accounts Ensure that default network access (i.e.&nbsp;public access) is denied within your Azure Cosmos DB accounts configuration.</p>
<p><strong>➢ SQL:</strong></p>
<p>✓ Advanced Data Security for SQL Servers Ensure that Advanced Data Security (ADS) is enabled at the Azure SQL database server level.</p>
<p>✓ Check for Publicly Accessible SQL Servers Ensure that Azure SQL database servers are accessible via private endpoints only.</p>
<p>✓ Check for Sufficient Point in Time Restore (PITR) Backup Retention Period Ensure there is a sufficient PITR backup retention period configured for Azure SQL databases.</p>
<p>✓ Check for Unrestricted SQL Database Access Ensure that no SQL databases allow unrestricted inbound access from 0.0.0.0/0 (any IP address).</p>
<p>✓ Configure “AuditActionGroup” for SQL Server Auditing Ensure that “AuditActionGroup” property is well configured at the Azure SQL database server level.</p>
<p>✓ Configure Emails for Vulnerability Assessment Scan Reports and Alerts Ensure that “Send scan reports to” setting is configured for SQL database servers.</p>
<p>✓ Detect Create, Update, and Delete SQL Server Firewall Rule Events SQL Server firewall rule changes have been detected in your Microsoft Azure cloud account.</p>
<p>✓ Enable All Types of Threat Detection on SQL Servers Enable all types of threat detection for your Microsoft Azure SQL database servers.</p>
<p>✓ Enable Auditing for SQL Servers Ensure that database auditing is enabled at the Azure SQL database server level.</p>
<p>✓ Enable Auto-Failover Groups Ensure that your Azure SQL database servers are configured to use auto-failover groups.</p>
<p>✓ Enable Automatic Tuning for SQL Database Servers Ensure that Automatic Tuning feature is enabled for Microsoft Azure SQL database servers.</p>
<p>✓ Enable Transparent Data Encryption for SQL Databases Ensure that Transparent Data Encryption (TDE) is enabled for every Azure SQL database.</p>
<p>✓ Enable Vulnerability Assessment Email Notifications for Admins and Subscription Owners Ensure that the Vulnerability Assessment setting “Also send email notification to admins and subscription owners” is enabled. Enable Vulnerability Assessment Periodic Recurring Scans Ensure that the Vulnerability Assessment Periodic Recurring Scans setting is enabled for SQL database servers.</p>
<p>✓ Enable Vulnerability Assessment for Microsoft SQL Servers Ensure that Vulnerability Assessment is enabled for Microsoft SQL database servers.</p>
<p>✓ SQL Auditing Retention Ensure that SQL database auditing has a sufficient log data retention period configured.</p>
<p>✓ Use Azure Active Directory Admin for SQL Authentication Ensure that an Azure Active Directory (AAD) admin is configured for SQL authentication.</p>
<p>✓ Use BYOK for Transparent Data Encryption Use Bring Your Own Key (BYOK) support for Transparent Data Encryption (TDE).</p>
<p><strong>➢ PostgreSQL</strong></p>
<p>✓ Check for PostgreSQL Log Retention Period Ensure that PostgreSQL database servers have a sufficient log retention period configured.</p>
<p>✓ Check for PostgreSQL Major Version Ensure that PostgreSQL database servers are using the latest major version of PostgreSQL database.</p>
<p>✓ Enable “CONNECTION_THROTTLING” Parameter for PostgreSQL Servers Ensure that “connection_throttling” parameter is set to “ON” within your Azure PostgreSQL server settings.</p>
<p>✓ Enable “LOG_CHECKPOINTS” Parameter for PostgreSQL Servers Enable “log_checkpoints” parameter for your Microsoft Azure PostgreSQL database servers.</p>
<p>✓ Enable “LOG_CONNECTIONS” Parameter for PostgreSQL Servers Enable “log_connections” parameter for your Microsoft Azure PostgreSQL database servers.</p>
<p>✓ Enable “LOG_DISCONNECTIONS” Parameter for PostgreSQL Servers Enable “log_disconnections” parameter for your Microsoft Azure PostgreSQL database servers.</p>
<p>✓ Enable “LOG_DURATION” Parameter for PostgreSQL Servers Enable “log_duration” parameter on your Microsoft Azure PostgreSQL database servers.</p>
<p>✓ Enable “log_checkpoints” Parameter for PostgreSQL Flexible Servers Enable “log_checkpoints” parameter for your Microsoft Azure PostgreSQL flexible database servers.</p>
<p>✓ Enable In-Transit Encryption for PostgreSQL Database Servers Ensure that in-transit encryption is enabled for your Azure PostgreSQL database servers.</p>
<p>✓ Enable Infrastructure Double Encryption for Single Servers Ensure that infrastructure double encryption is enabled for Single Server Azure PostgreSQL database servers.</p>
<p>✓ Use Azure Active Directory Admin for PostgreSQL Authentication Ensure that an Azure Active Directory (AAD) admin is configured for PostgreSQL authentication.</p>
<p><strong>➢ MySQL:</strong></p>
<p>✓ Configure TLS Version for MySQL Flexible Database Servers Ensure that the ‘tls_version’ parameter is set to a minimum of ‘TLSV1.2’ for all MySQL flexible database servers.</p>
<p>✓ Enable In-Transit Encryption for MySQL Servers Ensure that in-transit encryption is enabled for your Azure MySQL database servers.</p>
</section>
<section id="appservice" class="level2">
<h2 class="anchored" data-anchor-id="appservice">➢ AppService:</h2>
<p>✓ Check for Latest Version of .NET Framework Enable HTTP to HTTPS redirects for your Microsoft Azure App Service web applications.</p>
<p>✓ Check for Latest Version of Java Ensure that Azure App Service web applications are using the latest stable version of Java.</p>
<p>✓ Check for Latest Version of PHP Ensure that Azure App Service web applications are using the latest version of PHP.</p>
<p>✓ Check for Latest Version of Python Ensure that Azure App Service web applications are using the latest version of Python.</p>
<p>✓ Check for Sufficient Backup Retention Period Ensure there is a sufficient backup retention period configured for Azure App Services applications.</p>
<p>✓ Check for TLS Protocol Latest Version Ensure that Azure App Service web applications are using the latest version of TLS encryption.</p>
<p>✓ Disable Plain FTP Deployment Ensure that FTP access is disabled for your Azure App Services web applications.</p>
<p>✓ Disable Remote Debugging Disable Remote Debugging feature for your Microsoft Azure App Services web applications.</p>
<p>✓ Enable Always On Ensure that your Azure App Services web applications stay loaded all the time by enabling the Always On feature.</p>
<p>✓ Enable App Service Authentication Ensure that App Service Authentication is enabled within your Microsoft Azure cloud account.</p>
<p>✓ Enable Application Insights Ensure that Azure App Services applications are configured to use Application Insights feature.</p>
<p>✓ Enable Automated Backups Ensure that all your Azure App Services applications are using the Backup and Restore feature.</p>
<p>✓ Enable FTPS-Only Access Enable FTPS-only access for your Microsoft Azure App Services web applications.</p>
<p>✓ Enable HTTP/2 Ensure that Azure App Service web applications are using the latest stable version of HTTP.</p>
<p>✓ Enable HTTPS-Only Traffic Enable HTTP to HTTPS redirects for your Microsoft Azure App Service web applications.</p>
<p>✓ Enable Incoming Client Certificates Ensure that Azure App Service web applications are using incoming client certificates.</p>
<p>✓ Enable Registration with Azure Active Directory Ensure that registration with Azure Active Directory is enabled for Azure App Service applications.</p>
<p>✓ Use Key Vaults to Store App Service Application Secrets Ensure that Azure Key Vaults are used to store App Service application secrets.</p>
<p><strong>➢ KeyVault</strong></p>
<p>✓ App Tier Customer-Managed Key In Use Ensure that a Customer-Managed Key is created for your Azure cloud application tier.</p>
<p>✓ Check for Allowed Certificate Key Types Ensure that Azure Key Vault certificates are using the appropriate key type(s).</p>
<p>✓ Check for Azure Key Vault Keys Expiration Date Ensure that your Azure Key Vault encryption keys are renewed prior to their expiration date.</p>
<p>✓ Check for Azure Key Vault Secrets Expiration Date Ensure that your Azure Key Vault secrets are renewed prior to their expiration date.</p>
<p>✓ Check for Certificate Minimum Key Size Ensure that Azure Key Vault RSA certificates are using the appropriate key size.</p>
<p>✓ Check for Key Vault Full Administrator Permissions Ensure that no Azure user, group or application has full permissions to access and manage Key Vaults.</p>
<p>✓ Check for Sufficient Certificate Auto-Renewal Period Ensure there is a sufficient period configured for the SSL certificates auto-renewal.</p>
<p>✓ Database Tier Customer-Managed Key In Use Ensure that a Customer-Managed Key is created for your Microsoft Azure cloud database tier.</p>
<p>✓ Enable AuditEvent Logging for Azure Key Vaults Ensure that AuditEvent logging is enabled for your Microsoft Azure Key Vaults.</p>
<p>✓ Enable Certificate Transparency Ensure that certificate transparency is enabled for all your Azure Key Vault certificates.</p>
<p>✓ Enable Key Vault Recoverability Ensure that your Microsoft Azure Key Vault instances are recoverable.</p>
<p>✓ Enable SSL Certificate Auto-Renewal Ensure that Auto-Renewal feature is enabled for your Azure Key Vault SSL certificates.</p>
<p>✓ Enable Trusted Microsoft Services for Key Vault Access Allow trusted Microsoft services to access your Azure Key Vault resources (i.e.&nbsp;encryption keys, secrets and certificates).</p>
<p>✓ Restrict Default Network Access for Azure Key Vaults Ensure that default network access (i.e.&nbsp;public access) rule is set to “Deny” within your Azure Key Vaults configuration.</p>
<p>✓ Set Azure Secret Key Expiration Ensure that an expiration date is set for all your Microsoft Azure secret keys.</p>
<p>✓ Set Encryption Key Expiration Ensure that an expiration date is configured for all your Microsoft Azure encryption keys.</p>
<p>✓ Web Tier Customer-Managed Key In Use Ensure that a Customer-Managed Key is created for your Microsoft Azure cloud web tier</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion:</h2>
<p>There are numerous Azure features and services that require ongoing maintenance in terms of security. There are countless ways to attack a system, and poorly protected systems are the ones that hackers most frequently target. By keeping a few simple things in mind, you can strengthen your network considerably. With some investment and your work, you can make your Azure secure and robust by using a variety of Azure services.</p>
</section>
<section id="credits" class="level2">
<h2 class="anchored" data-anchor-id="credits">Credits:</h2>
<p><a href="https://learn.microsoft.com/en-us/azure/security/fundamentals/best-practices-and-patterns">https://learn.microsoft.com/en-us/azure/security/fundamentals/best-practices-and-patterns</a></p>
</section>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Azure</category>
  <category>Security</category>
  <category>Best Practices</category>
  <category>Cloud</category>
  <guid>https://kunaldas.dev/posts/2022-12-03-azure-best-practices.html</guid>
  <pubDate>Sat, 03 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:700/0*JFxFUjxO8pAiWsq0.png" medium="image" type="image/png"/>
</item>
<item>
  <title>The trick to not using a self-hosted agent in Azure DevOps</title>
  <link>https://kunaldas.dev/posts/2022-11-18-azure-devops-agent-trick.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<p>Read on :</p>
<p><a href="https://kunaldaskd.medium.com/?source=post_page-----986bb257ea4--------------------------------"> <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/Medium_%28website%29_logo.svg/798px-Medium_%28website%29_logo.svg.png" alt="Medium Logo" width="200"> </a></p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/0*abFuG6O6narmeqHG.png" class="img-fluid"></p>
<p>Well, when you want to design the build and release pipeline for any software development the one thing that comes to mind is where to do the whole operation.<br>
apparently, There are two ways of doing it,<br>
The <strong>free</strong> and easy way is to use a Microsoft Hosted build agent,<br>
But in some cases, we may need to use a Self-hosted build agent,<br>
let’s see what Microsoft has to say about self-hosted build agents.</p>
<blockquote class="blockquote">
<p>“<em>An agent that you set up and manage on your own to run jobs is a self-hosted agent. You can use self-hosted agents in Azure Pipelines or Azure DevOps Server, formerly named Team Foundation Server (TFS). Self-hosted agents give you more control to install dependent software needed for your builds and deployments. Also, machine-level caches and configuration persist from run to run, which can boost speed.</em>”</p>
</blockquote>
<p>So, Self-hosted build agents do provide some benefits, but in my experience, some of these benefits can be achieved in Microsoft-hosted build agents as well.</p>
<p>For instance, if you have a relatively small build/release pipeline there’s no need to cache dependencies as it may give you a faster build time but do you really need it?</p>
<p>Now let’s see what a Microsoft hosted agent is as per them,</p>
<blockquote class="blockquote">
<p>“If your pipelines are in Azure Pipelines, then you’ve got a convenient option to run your jobs using a Microsoft-hosted agent. With Microsoft-hosted agents, maintenance and upgrades are taken care of for you. Each time you run a pipeline, you get a fresh virtual machine for each job in the pipeline. The virtual machine is discarded after one job (which means any change that a job makes to the virtual machine file system, such as checking out code, will be unavailable to the next job). Microsoft-hosted agents can run jobs <a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=azure-devops">directly on the VM</a> or <a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/process/container-phases?view=azure-devops">in a container</a>.”</p>
</blockquote>
<p>So as you can see these agents are ephemeral by nature so we can not use them for something permanent right?<br>
well, yes but there are some other wat to look at it.</p>
<p>In this article, I have a solution for a different problem, which is using a self-hosted build agent to overcome firewall restrictions set in different azure resources.<br>
But first, let’s understand the problem.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*rwz0eIvDmzvio7MFr43h3A.png" class="img-fluid"></p>
<p>Firewall restriction in a Synapse workspace</p>
<p>In the image, you can see public network access can be disabled. in that case, you will not be able to connect to this resource from the DevOps pipeline,<br>
In some places, I have seen people using a self-hosted agent just for this purpose but actually, this is not required.</p>
<p>The process here is adding the IP address as a rule into the firewall</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*g2IzHucCpL6hTXDkObsuNQ.png" class="img-fluid"></p>
<p>and you can do just that from the CI/CD pipeline itself,<br>
Let’s look at how to achieve that.</p>
<p>I am taking the example of Synapse,<br>
So just before the deployment task add an Azure CLI task in the pipeline.</p>
<p><img src="https://miro.medium.com/v2/resize:fit:700/1*YgKInr79mSDS2UZ7BkKwCw.png" class="img-fluid"></p>
<p>and write the PowerShell script to add the build agent IP into the synapse workspace, needless to say, you need to give the service connection proper role to perform the action.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">az</span> synapse workspace firewall-rule create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> devops-build-agent-ip<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-2">--workspace-name synapse-prod <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resource-group</span> synapse-prod-rg<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-3">--start-ip-address  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Invoke-RestMethod</span> http://ipinfo.io/json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Select</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-exp</span> ip<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--end-ip-address</span>  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Invoke-RestMethod</span> http://ipinfo.io/json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Select</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-exp</span> ip<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>If you like to use Yaml then here is the code!</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">task</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> AzureCLI@2</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Add Build agent Ip to firewall'</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">azureSubscription</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sp-dev'</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scriptType</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ps</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scriptLocation</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> inlineScript</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inlineScript</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'az synapse workspace firewall-rule create --name devops-build-agent-ip --workspace-name qa1-ause-asy-01 --resource-group QA1-AUSE-ASY-ARG-01 --start-ip-address  (Invoke-RestMethod http://ipinfo.io/json | Select -exp ip) --end-ip-address  (Invoke-RestMethod http://ipinfo.io/json | Select -exp ip)'</span></span></code></pre></div>
<p>Now, as we can add the firewall rule we can delete the rule too, for that use the below code</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">az</span> synapse workspace firewall-rule create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> devops-build-agent-ip<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-2">--workspace-name synapse-prod <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resource-group</span> synapse-prod-rg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--yes</span></span></code></pre></div>
<p>and that is it.<br>
once you run the deployment it will copy the IP to the build agent add it into the firewall rule then run the deployment and then delete it, but</p>
<p>Feel free to reach me incase of any issues!!<br>
adios</p>
<section id="read-my-blogs" class="level2">
<h2 class="anchored" data-anchor-id="read-my-blogs">Read my blogs:</h2>
<p><a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Azure</category>
  <category>DevOps</category>
  <category>Security</category>
  <category>Infrastructure</category>
  <guid>https://kunaldas.dev/posts/2022-11-18-azure-devops-agent-trick.html</guid>
  <pubDate>Fri, 18 Nov 2022 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:700/0*abFuG6O6narmeqHG.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Deploying Azure Data Factory, Azure Data bricks, Azure Data Lake storage &amp; MySql DB using Terraform</title>
  <link>https://kunaldas.dev/posts/2022-10-12-deploying-azure-services-with-terraform.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fill:44:44/1*kfaefcgQPHrPsNobjuiiSg.jpeg" class="img-fluid figure-img"></p>
<figcaption>Kunal Das, Author</figcaption>
</figure>
</div>
<p>Here I am going to share some terraform code to deploy ADF, ADLS, ADB, and several other necessary resources. <img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*u3A9mWuZN_E-v-W8pi12uw.png" class="img-fluid" alt="image"></p>
<section id="table-of-contents" class="level2">
<h2 class="anchored" data-anchor-id="table-of-contents">Table of Contents</h2>
<ul>
<li>Deploying Azure Data Factory, Azure Data bricks, Azure Data Lake storage &amp; MySql DB using Terraform
<ul>
<li>Table of Contents</li>
<li>Resource Group</li>
<li><strong>Azure Data Factory:</strong></li>
<li><strong>Azure Data Bricks:</strong></li>
<li>Virtual network:</li>
<li>Network Security group for ADB:</li>
<li>Public subnet for Databricks:</li>
<li>Private subnet for Databricks:</li>
<li>Network security group for Public subnet:</li>
<li>Network security group for Privatesubnet:</li>
<li>Data Lake storage account:</li>
<li>Storage account container:</li>
<li>Storage Admin password:</li>
<li>SQL server :</li>
<li>SQL Database:</li>
</ul></li>
</ul>
<p>Let’s start with a resource group where we will store all the resources required.</p>
</section>
<section id="resource-group" class="level2">
<h2 class="anchored" data-anchor-id="resource-group">Resource Group</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode tf code-with-copy"><code class="sourceCode terraform"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azurerm_client_config"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Current"</span> {}</span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">resource</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azurerm_resource_group"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RG"</span> {</span>
<span id="cb1-3">  name     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">var</span>.ResourceGroup.Name</span>
<span id="cb1-4">  location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">var</span>.ResourceGroup.Location</span>
<span id="cb1-5">}</span></code></pre></div>
<p><em>points to note that we will fetch the RG name and RG location in the next resource declaration.</em></p>
</section>
<section id="azure-data-factory" class="level2">
<h2 class="anchored" data-anchor-id="azure-data-factory"><strong>Azure Data Factory:</strong></h2>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode tf code-with-copy"><code class="sourceCode terraform"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">resource</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azurerm_data_factory"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DataFactory"</span> {</span>
<span id="cb2-2">  name                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DataFactory Name"</span></span>
<span id="cb2-3">  location            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_resource_group.RG.location</span>
<span id="cb2-4">  resource_group_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_resource_group.RG.name</span>
<span id="cb2-5"></span>
<span id="cb2-6">  identity {</span>
<span id="cb2-7">    type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SystemAssigned"</span></span>
<span id="cb2-8">  }</span>
<span id="cb2-9">}</span></code></pre></div>
</section>
<section id="azure-data-bricks" class="level2">
<h2 class="anchored" data-anchor-id="azure-data-bricks"><strong>Azure Data Bricks:</strong></h2>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode tf code-with-copy"><code class="sourceCode terraform"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">resource</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azurerm_databricks_workspace"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Databricks"</span> {</span>
<span id="cb3-2">  location                      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_resource_group.RG.location</span>
<span id="cb3-3">  name                          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Databricks Name"</span></span>
<span id="cb3-4">  resource_group_name           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_resource_group.RG.name</span>
<span id="cb3-5">  managed_resource_group_name   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Databricks Managed Resource Group"</span></span>
<span id="cb3-6">  sku                           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Databricks Sku"</span></span>
<span id="cb3-7"></span>
<span id="cb3-8">  custom_parameters {</span>
<span id="cb3-9">    no_public_ip        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-10">    virtual_network_id  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_virtual_network.DatabricksVnet.id</span>
<span id="cb3-11">    public_subnet_name  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_subnet.DatabricksSubnetPublic.name</span>
<span id="cb3-12">    private_subnet_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_subnet.DatabricksSubnetPrivate.name</span>
<span id="cb3-13">  }</span>
<span id="cb3-14"></span>
<span id="cb3-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">depends_on</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb3-16">    azurerm_subnet_network_security_group_association.public,</span>
<span id="cb3-17">    azurerm_subnet_network_security_group_association.private</span>
<span id="cb3-18">  ]</span>
<span id="cb3-19">}</span></code></pre></div>
</section>
<section id="virtual-network" class="level2">
<h2 class="anchored" data-anchor-id="virtual-network">Virtual network:</h2>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode tf code-with-copy"><code class="sourceCode terraform"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">resource</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azurerm_virtual_network"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DatabricksVnet"</span> {</span>
<span id="cb4-2">  name                     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VNET NAME"</span></span>
<span id="cb4-3">  resource_group_name      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_resource_group.RG.name</span>
<span id="cb4-4">  location                 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> azurerm_resource_group.RG.location</span>
<span id="cb4-5">  address_space            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VNET CIDR"</span>]</span>
<span id="cb4-6">}</span></code></pre></div>
</section>
<section id="network-security-group-for-adb" class="level2">
<h2 class="anchored" data-anchor-id="network-security-group-for-adb">Network Security group for ADB:</h2>
<pre><code>resource "azurerm_network_security_group" "DatabricksNSG" {
  name                     = "VirtualNetwork NSG Name"
  resource_group_name      = azurerm_resource_group.RG.name
  location                 = azurerm_resource_group.RG.location
}</code></pre>
</section>
<section id="public-subnet-for-databricks" class="level2">
<h2 class="anchored" data-anchor-id="public-subnet-for-databricks">Public subnet for Databricks:</h2>
<pre><code>resource "azurerm_subnet" "DatabricksSubnetPublic" {
  name                 = "VirtualNetwork PublicSubnet Name"
  resource_group_name  = azurerm_resource_group.RG.name
  virtual_network_name = azurerm_virtual_network.DatabricksVnet.name
  address_prefixes     = ["VirtualNetwork PublicSubnet CIDR"]
  service_endpoints    = ["Microsoft.Storage"]

  delegation {
    name = "Microsoft.Databricks.workspaces"
    service_delegation {
      name = "Microsoft.Databricks/workspaces"
      actions = [
        "Microsoft.Network/virtualNetworks/subnets/join/action",
        "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action",
        "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"]
    }
  }
}</code></pre>
</section>
<section id="private-subnet-for-databricks" class="level2">
<h2 class="anchored" data-anchor-id="private-subnet-for-databricks">Private subnet for Databricks:</h2>
<pre><code>resource "azurerm_subnet" "DatabricksSubnetPrivate" {
  name                 = "VirtualNetwork PrivateSubnet Name"
  resource_group_name  = azurerm_resource_group.RG.name
  virtual_network_name = azurerm_virtual_network.DatabricksVnet.name
  address_prefixes     = ["VirtualNetwork PrivateSubnet CIDR"]

  delegation {
    name = "Microsoft.Databricks.workspaces"
    service_delegation {
      name = "Microsoft.Databricks/workspaces"
      actions = [
        "Microsoft.Network/virtualNetworks/subnets/join/action",
        "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action",
        "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"]
    }
  }
}</code></pre>
</section>
<section id="network-security-group-for-public-subnet" class="level2">
<h2 class="anchored" data-anchor-id="network-security-group-for-public-subnet">Network security group for Public subnet:</h2>
<pre><code>resource "azurerm_subnet_network_security_group_association" "public" {
  subnet_id                 = azurerm_subnet.DatabricksSubnetPublic.id
  network_security_group_id = azurerm_network_security_group.DatabricksNSG.id
}</code></pre>
</section>
<section id="network-security-group-for-privatesubnet" class="level2">
<h2 class="anchored" data-anchor-id="network-security-group-for-privatesubnet">Network security group for Privatesubnet:</h2>
<pre><code>resource "azurerm_subnet_network_security_group_association" "private" {
  subnet_id                 = azurerm_subnet.DatabricksSubnetPrivate.id
  network_security_group_id = azurerm_network_security_group.DatabricksNSG.id
}</code></pre>
<p>Now as all the associated network configuration done let’s move to the DATA LAKE STORAGE account creation</p>
</section>
<section id="data-lake-storage-account" class="level2">
<h2 class="anchored" data-anchor-id="data-lake-storage-account">Data Lake storage account:</h2>
<pre><code>resource "azurerm_storage_account" "DataLake" {
  name                     = "DataLake Name"
  resource_group_name      = azurerm_resource_group.RG.name
  location                 = azurerm_resource_group.RG.location
  account_tier             = "DataLake Tier"
  account_replication_type = "DataLake Replication"
  is_hns_enabled           = true
  min_tls_version          = "DataLake TLSVersion"

  network_rules {
    # bypass                     = "AzureServices"
    default_action             = "Allow"    
  }
}</code></pre>
</section>
<section id="storage-account-container" class="level2">
<h2 class="anchored" data-anchor-id="storage-account-container">Storage account container:</h2>
<pre><code>resource "azurerm_storage_container" "DataLakeContainer" {  
  for_each              = "DataLake Container"
  name                  = each.key
  storage_account_name  = azurerm_storage_account.DataLake.name
  container_access_type = "private"
}</code></pre>
<p>Now, let us create SQL related resources</p>
</section>
<section id="storage-admin-password" class="level2">
<h2 class="anchored" data-anchor-id="storage-admin-password">Storage Admin password:</h2>
<pre><code>resource "random_string" "SQLAdminPassword" {
  length      = 5
  special     = true
  min_upper   = 2
  min_numeric = 2
  min_special = 2
}</code></pre>
</section>
<section id="sql-server" class="level2">
<h2 class="anchored" data-anchor-id="sql-server">SQL server :</h2>
<pre><code>resource "azurerm_mssql_server" "SQLServer" {
  name                         = "SQLServer Name"
  resource_group_name          = azurerm_resource_group.RG.name
  location                     = azurerm_resource_group.RG.location
  version                      = "SQLServer Version"
  administrator_login          = "SQLServer AdministratorLogin"
  administrator_login_password = random_string.SQLAdminPassword.result
  minimum_tls_version          = "SQLServer  TLS Version"
}</code></pre>
</section>
<section id="sql-database" class="level2">
<h2 class="anchored" data-anchor-id="sql-database">SQL Database:</h2>
<pre><code>resource "azurerm_mssql_database" "SQLDatabase" {
  name           = "SQLDatabase Name"
  server_id      = azurerm_mssql_server.SQLServer.id
  collation      = "SQL_collation"
  max_size_gb    = "SQLDatabase MaxSizeGB"
  sku_name       = "SQLDatabase SKU"
  zone_redundant = "SQLDatabase ZoneRedundant"
}</code></pre>
<p>This is a complete part by part snippets to create a running ADB ADF system, feel free to reach me in case any clarification required! ## Read my blogs: <a href="https://kunaldaskd.medium.com"><img src="https://i.imgur.com/TgYYM9w.png" class="img-fluid" alt="Medium"></a> <a href="https://dev.to/kunaldas"><img src="https://i.imgur.com/bp3qHWb.png" class="img-fluid" alt="DEV"></a> <a href="https://kunaldas.hashnode.dev"><img src="https://i.imgur.com/iwZwo2S.png" class="img-fluid" alt="Hashnode"></a></p>
</section>
<section id="connect-with-me" class="level2">
<h2 class="anchored" data-anchor-id="connect-with-me">Connect with Me:</h2>
<p><a href="https://twitter.com/kunald_official"><img src="https://i.imgur.com/VaorXDP.png" class="img-fluid" alt="Twitter"></a> <a href="https://linkedin.com/in/kunaldaskd"><img src="https://i.imgur.com/ktIHVxm.png" class="img-fluid" alt="LinkedIn"></a></p>


</section>

 ]]></description>
  <category>Azure</category>
  <category>Terraform</category>
  <category>DevOps</category>
  <category>Data Engineering</category>
  <guid>https://kunaldas.dev/posts/2022-10-12-deploying-azure-services-with-terraform.html</guid>
  <pubDate>Wed, 12 Oct 2022 00:00:00 GMT</pubDate>
  <media:content url="https://miro.medium.com/v2/resize:fit:720/format:webp/1*u3A9mWuZN_E-v-W8pi12uw.png" medium="image" type="image/png"/>
</item>
</channel>
</rss>
